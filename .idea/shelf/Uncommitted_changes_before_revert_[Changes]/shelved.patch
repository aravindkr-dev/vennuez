Index: static/css/main.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* ================================\r\n   Gaming Center Hub - Custom Styles\r\n   ================================ */\r\n\r\n/* Minimal Modern CSS inspired by turftown.in */\r\n:root {\r\n    --primary: #222831;\r\n    --secondary: #393e46;\r\n    --accent: #00adb5;\r\n    --background: #fff;\r\n    --text: #222831;\r\n    --muted: #f5f6fa;\r\n    --border: #e0e0e0;\r\n    --success: #00b894;\r\n    --danger: #e17055;\r\n}\r\n\r\n/* Reset & Base Styles */\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nhtml, body {\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n    font-family: 'Inter', Arial, sans-serif;\r\n    background: var(--background);\r\n    color: var(--text);\r\n    min-height: 100vh;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* Header Styles */\r\n.header {\r\n    background: var(--background);\r\n    border-bottom: 1px solid var(--border);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1000;\r\n    height: 64px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.header-content {\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 0 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.logo {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    color: var(--primary);\r\n    text-decoration: none;\r\n    letter-spacing: 1px;\r\n}\r\n\r\n.nav-links {\r\n    display: flex;\r\n    gap: 1.5rem;\r\n    align-items: center;\r\n}\r\n\r\n.nav-links a {\r\n    color: var(--secondary);\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 4px;\r\n    transition: background 0.2s, color 0.2s;\r\n}\r\n\r\n.nav-links a.active, .nav-links a:hover {\r\n    color: var(--accent);\r\n    background: var(--muted);\r\n}\r\n\r\n.user-info {\r\n    color: var(--secondary);\r\n    font-size: 1rem;\r\n    margin-left: 1.5rem;\r\n}\r\n\r\n.btn {\r\n    background: var(--accent);\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 4px;\r\n    padding: 0.5rem 1.25rem;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: background 0.2s;\r\n    outline: none;\r\n}\r\n\r\n.btn:hover, .btn:focus {\r\n    background: #009ca7;\r\n}\r\n\r\n.btn-secondary {\r\n    background: var(--secondary);\r\n    color: #fff;\r\n}\r\n\r\n.btn-secondary:hover {\r\n    background: #222831;\r\n}\r\n\r\n/* Main Content Layout */\r\n.main-content {\r\n    flex: 1;\r\n    margin-top: 72px; /* Header height + spacing */\r\n    min-height: calc(100vh - 64px);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 96px 1.5rem 2rem 1.5rem; /* top padding for header */\r\n}\r\n\r\n/* Booking Steps */\r\n.booking-steps {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 2rem;\r\n    position: relative;\r\n    padding: 0 1rem;\r\n}\r\n\r\n.step {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: relative;\r\n    z-index: 1;\r\n    flex: 1;\r\n}\r\n\r\n.step-number {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    border-radius: 50%;\r\n    background: var(--gray-200);\r\n    color: var(--gray-600);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 600;\r\n    margin-bottom: 0.5rem;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.step.active .step-number {\r\n    background: var(--primary);\r\n    color: white;\r\n}\r\n\r\n.step-label {\r\n    font-size: 0.875rem;\r\n    color: var(--gray-600);\r\n    text-align: center;\r\n    transition: color 0.3s ease;\r\n}\r\n\r\n.step.active .step-label {\r\n    color: var(--primary);\r\n    font-weight: 500;\r\n}\r\n\r\n.step-line {\r\n    position: absolute;\r\n    top: 1.25rem;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background: var(--gray-200);\r\n    z-index: 0;\r\n}\r\n\r\n/* Booking Step Content */\r\n.booking-step {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    padding-bottom: 80px; /* Space for navigation buttons */\r\n}\r\n\r\n/* Navigation Buttons */\r\n.nav-buttons {\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: white;\r\n    padding: 1rem;\r\n    box-shadow: 0 -1px 3px rgba(0,0,0,0.1);\r\n    z-index: 100;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n}\r\n\r\n.nav-buttons button {\r\n    min-width: 120px;\r\n}\r\n\r\n/* Cards */\r\n.card {\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 8px rgba(34, 40, 49, 0.04);\r\n    padding: 2rem;\r\n    margin-bottom: 2rem;\r\n    border: 1px solid var(--border);\r\n}\r\n\r\n/* Date Picker */\r\n.date-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n    gap: 1rem;\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.date-item {\r\n    text-align: center;\r\n    padding: 1rem;\r\n    border: 2px solid var(--gray-200);\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.date-item:hover {\r\n    border-color: var(--primary);\r\n}\r\n\r\n.date-item.selected {\r\n    border-color: var(--primary);\r\n    background: var(--primary);\r\n    color: white;\r\n}\r\n\r\n/* Time Slots */\r\n.time-slots {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    gap: 1rem;\r\n    margin: 1.5rem 0;\r\n}\r\n\r\n.time-slot {\r\n    background: var(--muted);\r\n    border: 2px solid var(--border);\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    text-align: center;\r\n}\r\n\r\n.time-slot:hover {\r\n    border-color: var(--accent);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.time-slot.selected {\r\n    background: var(--accent);\r\n    border-color: var(--accent);\r\n    color: white;\r\n}\r\n\r\n.time-slot .time-range {\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.time-slot .slot-price {\r\n    font-size: 0.9rem;\r\n    color: var(--secondary);\r\n}\r\n\r\n.time-slot.selected .slot-price {\r\n    color: white;\r\n}\r\n\r\n.time-slot.booked {\r\n    background: var(--muted);\r\n    border-color: var(--border);\r\n    cursor: not-allowed;\r\n    opacity: 0.7;\r\n}\r\n\r\n.time-slot.booked:hover {\r\n    transform: none;\r\n    box-shadow: none;\r\n    border-color: var(--border);\r\n}\r\n\r\n/* Console Selection */\r\n.console-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 1rem;\r\n}\r\n\r\n.console-card {\r\n    border: 2px solid var(--gray-200);\r\n    border-radius: 0.5rem;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.console-card:hover {\r\n    border-color: var(--primary);\r\n}\r\n\r\n.console-card.selected {\r\n    border-color: var(--primary);\r\n    background: rgba(79, 70, 229, 0.05);\r\n}\r\n\r\n/* Forms */\r\n.form-group {\r\n    margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 500;\r\n}\r\n\r\n.form-control {\r\n    width: 100%;\r\n    padding: 0.75rem 1rem;\r\n    border: 1px solid var(--border);\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    margin-bottom: 1.25rem;\r\n    background: var(--muted);\r\n    color: var(--text);\r\n    transition: border 0.2s;\r\n}\r\n\r\n.form-control:focus {\r\n    border-color: var(--accent);\r\n    outline: none;\r\n}\r\n\r\n/* Buttons */\r\n.btn {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 0.25rem;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    border: none;\r\n}\r\n\r\n.btn-primary {\r\n    background: var(--primary);\r\n    color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n    background: var(--primary-dark);\r\n}\r\n\r\n.btn-outline {\r\n    background: transparent;\r\n    border: 1px solid var(--gray-200);\r\n}\r\n\r\n.btn-outline:hover {\r\n    border-color: var(--primary);\r\n    color: var(--primary);\r\n}\r\n\r\n/* Summary */\r\n.summary-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0.75rem 0;\r\n    border-bottom: 1px solid var(--gray-200);\r\n}\r\n\r\n.summary-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.summary-total {\r\n    font-weight: bold;\r\n    font-size: 1.25rem;\r\n}\r\n\r\n/* Responsive Design */\r\n@media (max-width: 768px) {\r\n    .header-content, .container {\r\n        padding: 0 0.75rem;\r\n    }\r\n    .container {\r\n        padding-top: 80px;\r\n}\r\n    .card {\r\n        padding: 1rem;\r\n}\r\n    .nav-links {\r\n        gap: 0.75rem;\r\n    }\r\n    .booking-steps {\r\n        margin-bottom: 1.5rem;\r\n}\r\n    .step-label {\r\n        font-size: 0.75rem;\r\n}\r\n.step-number {\r\n        width: 2rem;\r\n        height: 2rem;\r\n    font-size: 0.875rem;\r\n    }\r\n    .step-line {\r\n        top: 1rem;\r\n}\r\n    .nav-buttons {\r\n        padding: 0.75rem;\r\n    }\r\n    .nav-buttons button {\r\n        min-width: 100px;\r\n}\r\n}\r\n\r\n/* Loading State */\r\n.loading {\r\n    display: inline-block;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    border: 2px solid var(--gray-200);\r\n    border-top-color: var(--primary);\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n    to { transform: rotate(360deg); }\r\n}\r\n\r\n/* Toast Notifications */\r\n.toast {\r\n    position: fixed;\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    padding: 1rem 1.5rem;\r\n    background: white;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    animation: slideIn 0.3s ease-out;\r\n}\r\n\r\n@keyframes slideIn {\r\n    from { transform: translateX(100%); opacity: 0; }\r\n    to { transform: translateX(0); opacity: 1; }\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n    color: var(--primary);\r\n    font-weight: 700;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\ninput, select, textarea {\r\n    width: 100%;\r\n    padding: 0.75rem 1rem;\r\n    border: 1px solid var(--border);\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    margin-bottom: 1.25rem;\r\n    background: var(--muted);\r\n    color: var(--text);\r\n    transition: border 0.2s;\r\n}\r\n\r\ninput:focus, select:focus, textarea:focus {\r\n    border-color: var(--accent);\r\n    outline: none;\r\n}\r\n\r\n.footer {\r\n    background: var(--primary);\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 2rem 1rem 1rem 1rem;\r\n    margin-top: 3rem;\r\n    border-top: 1px solid var(--border);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/css/main.css b/static/css/main.css
--- a/static/css/main.css	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/static/css/main.css	(date 1750083522937)
@@ -261,59 +261,35 @@
 /* Time Slots */
 .time-slots {
     display: grid;
-    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
-    gap: 1rem;
-    margin: 1.5rem 0;
+    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
+    gap: 0.5rem;
 }
 
 .time-slot {
-    background: var(--muted);
-    border: 2px solid var(--border);
-    border-radius: 8px;
-    padding: 1rem;
-    cursor: pointer;
-    transition: all 0.2s ease;
+    padding: 0.75rem;
     text-align: center;
-}
-
-.time-slot:hover {
-    border-color: var(--accent);
-    transform: translateY(-2px);
-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
+    border: 1px solid var(--gray-200);
+    border-radius: 0.25rem;
+    cursor: pointer;
+    transition: all 0.2s;
 }
 
-.time-slot.selected {
-    background: var(--accent);
-    border-color: var(--accent);
+.time-slot:hover:not(.booked) {
+    border-color: var(--primary);
+    background: var(--primary);
     color: white;
 }
 
-.time-slot .time-range {
-    font-size: 1.1rem;
-    font-weight: 500;
-    margin-bottom: 0.5rem;
-}
-
-.time-slot .slot-price {
-    font-size: 0.9rem;
-    color: var(--secondary);
-}
-
-.time-slot.selected .slot-price {
+.time-slot.selected {
+    background: var(--primary);
     color: white;
+    border-color: var(--primary);
 }
 
 .time-slot.booked {
-    background: var(--muted);
-    border-color: var(--border);
+    background: var(--gray-200);
+    color: var(--gray-700);
     cursor: not-allowed;
-    opacity: 0.7;
-}
-
-.time-slot.booked:hover {
-    transform: none;
-    box-shadow: none;
-    border-color: var(--border);
 }
 
 /* Console Selection */
Index: models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from app import db\r\nfrom datetime import datetime\r\nimport uuid\r\nfrom flask_login import UserMixin\r\nfrom werkzeug.security import generate_password_hash, check_password_hash\r\n\r\n\r\nclass Owner(UserMixin, db.Model):\r\n    __tablename__ = 'owners'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    username = db.Column(db.String(80), unique=True, nullable=False)\r\n    email = db.Column(db.String(120), unique=True, nullable=False)\r\n    password_hash = db.Column(db.String(256), nullable=False)\r\n    phone = db.Column(db.String(20), nullable=False)\r\n    gaming_center_name = db.Column(db.String(200), nullable=False)\r\n    address = db.Column(db.String(255), nullable=True)\r\n    active = db.Column(db.Boolean, default=True)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n    latitude = db.Column(db.Float, nullable=True)\r\n    longitude = db.Column(db.Float, nullable=True)\r\n    amenities = db.Column(db.Text, nullable=True)\r\n    photo1 = db.Column(db.String(300), nullable=True)\r\n    photo2 = db.Column(db.String(300), nullable=True)\r\n    photo3 = db.Column(db.String(300), nullable=True)\r\n    photo4 = db.Column(db.String(300), nullable=True)\r\n    google_maps_link = db.Column(db.String(500), nullable=True)\r\n\r\n    # Relationships\r\n    consoles = db.relationship('Console', back_populates='owner', lazy=True, cascade='all, delete-orphan')\r\n\r\n    def __repr__(self):\r\n        return f'<Owner {self.username}>'\r\n\r\n\r\nclass Console(db.Model):\r\n    __tablename__ = 'consoles'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    name = db.Column(db.String(100), nullable=False)\r\n    console_type = db.Column(db.String(50), nullable=False)\r\n    hourly_rate = db.Column(db.Float, nullable=False)  # Rate per person per hour\r\n    is_available = db.Column(db.Boolean, default=True)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n\r\n    # Foreign Keys\r\n    owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)\r\n\r\n    # Relationships\r\n    owner = db.relationship('Owner', back_populates='consoles')\r\n    slots = db.relationship('TimeSlot', back_populates='console', cascade='all, delete-orphan')\r\n\r\n    def __repr__(self):\r\n        return f'<Console {self.name}>'\r\n\r\n\r\nclass TimeSlot(db.Model):\r\n    __tablename__ = 'time_slots'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    console_id = db.Column(db.Integer, db.ForeignKey('consoles.id'), nullable=False)\r\n    start_time = db.Column(db.DateTime, nullable=False)\r\n    end_time = db.Column(db.DateTime, nullable=False)\r\n    is_booked = db.Column(db.Boolean, default=False)\r\n    is_blocked = db.Column(db.Boolean, default=False)  # New field for blocking slots\r\n    booking_type = db.Column(db.String(20), default='online')  # 'online' or 'walkin'\r\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'))\r\n    number_of_people = db.Column(db.Integer, default=1)\r\n    special_requests = db.Column(db.Text)\r\n    total_amount = db.Column(db.Float)\r\n    snacks_amount = db.Column(db.Float, default=0)\r\n    final_amount = db.Column(db.Float)\r\n    completed = db.Column(db.Boolean, default=False)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n    \r\n    # Relationships\r\n    console = db.relationship('Console', back_populates='slots')\r\n    user = db.relationship('User', back_populates='bookings')\r\n\r\n    def generate_booking_id(self):\r\n        \"\"\"Generate a unique booking ID\"\"\"\r\n        return f\"GC{str(uuid.uuid4())[:8].upper()}\"\r\n\r\n    def calculate_total_amount(self):\r\n        \"\"\"Calculate total amount based on duration, hourly rate, and number of people\"\"\"\r\n        if self.start_time and self.end_time:\r\n            console = Console.query.get(self.console_id)\r\n            if console:\r\n                duration_hours = (self.end_time - self.start_time).total_seconds() / 3600\r\n                return duration_hours * console.hourly_rate * self.number_of_people\r\n        return 0\r\n\r\n    def __repr__(self):\r\n        return f'<TimeSlot {self.booking_id or self.id}>'\r\n\r\n\r\nclass User(UserMixin, db.Model):\r\n    __tablename__ = 'users'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    username = db.Column(db.String(80), unique=True, nullable=False)\r\n    email = db.Column(db.String(120), unique=True, nullable=False)\r\n    phone = db.Column(db.String(20), nullable=False)\r\n    password_hash = db.Column(db.String(256), nullable=False)\r\n    full_name = db.Column(db.String(120), nullable=False)\r\n    age = db.Column(db.Integer, nullable=True)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n    total_spent = db.Column(db.Float, default=0.0)\r\n\r\n    # Relationships\r\n    bookings = db.relationship('TimeSlot', back_populates='user')\r\n    coin_balances = db.relationship('UserCoinBalance', backref='user', lazy=True)\r\n\r\n    def set_password(self, password):\r\n        \"\"\"Set the user's password hash\"\"\"\r\n        self.password_hash = generate_password_hash(password)\r\n\r\n    def check_password(self, password):\r\n        \"\"\"Check if the provided password matches the hash\"\"\"\r\n        return check_password_hash(self.password_hash, password)\r\n\r\n    def get_coin_balance(self, gaming_center_name):\r\n        \"\"\"Get user's coin balance for a specific gaming center\"\"\"\r\n        balance = UserCoinBalance.query.filter_by(\r\n            user_id=self.id,\r\n            gaming_center_name=gaming_center_name\r\n        ).first()\r\n        return balance.coins if balance else 0\r\n\r\n    def __repr__(self):\r\n        return f'<User {self.username}>'\r\n\r\n\r\nclass UserCoinBalance(db.Model):\r\n    __tablename__ = 'user_coin_balances'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\r\n    gaming_center_name = db.Column(db.String(200), nullable=False)\r\n    coins = db.Column(db.Integer, default=0)\r\n    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\r\n\r\n    __table_args__ = (db.UniqueConstraint('user_id', 'gaming_center_name'),)\r\n\r\n    def __repr__(self):\r\n        return f'<UserCoinBalance {self.user_id}:{self.gaming_center_name}:{self.coins}>'\r\n\r\n\r\nclass CoinTransaction(db.Model):\r\n    __tablename__ = 'coin_transactions'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\r\n    owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)\r\n    gaming_center_name = db.Column(db.String(200), nullable=False)\r\n    amount = db.Column(db.Integer, nullable=False)  # Positive for add, negative for deduct\r\n    transaction_type = db.Column(db.String(50), nullable=False)  # 'purchase', 'booking', 'refund'\r\n    description = db.Column(db.Text, nullable=True)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n\r\n    # Relationships\r\n    user = db.relationship('User', backref='coin_transactions')\r\n    owner = db.relationship('Owner', backref='coin_transactions')\r\n\r\n    def __repr__(self):\r\n        return f'<CoinTransaction {self.transaction_type}:{self.amount}>'\r\n\r\n\r\nclass Snack(db.Model):\r\n    __tablename__ = 'snacks'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)\r\n    name = db.Column(db.String(100), nullable=False)\r\n    rate = db.Column(db.Float, nullable=False)\r\n\r\n    def __repr__(self):\r\n        return f'<Snack {self.name}>'\r\n\r\n\r\nclass ConsolePricingTier(db.Model):\r\n    __tablename__ = 'console_pricing_tiers'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    console_id = db.Column(db.Integer, db.ForeignKey('consoles.id'), nullable=False)\r\n    max_people = db.Column(db.Integer, nullable=False)\r\n    rate_per_person = db.Column(db.Float, nullable=False)\r\n\r\n    def __repr__(self):\r\n        return f'<ConsolePricingTier {self.console_id}:up to {self.max_people}:{self.rate_per_person}>'\r\n\r\n\r\nclass Turf(db.Model):\r\n    __tablename__ = 'turfs'\r\n\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    name = db.Column(db.String(100), nullable=False)\r\n    latitude = db.Column(db.Float, nullable=False)\r\n    longitude = db.Column(db.Float, nullable=False)\r\n    description = db.Column(db.Text)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\r\n    owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)\r\n\r\n    # Relationships\r\n    owner = db.relationship('Owner', backref='turfs')\r\n\r\n    def __repr__(self):\r\n        return f'<Turf {self.name}>'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models.py b/models.py
--- a/models.py	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/models.py	(date 1750093735631)
@@ -1,8 +1,11 @@
-from app import db
 from datetime import datetime
 import uuid
 from flask_login import UserMixin
 from werkzeug.security import generate_password_hash, check_password_hash
+from flask_sqlalchemy import SQLAlchemy
+
+# Import db from app to avoid circular imports
+from app import db
 
 
 class Owner(UserMixin, db.Model):
@@ -14,20 +17,23 @@
     password_hash = db.Column(db.String(256), nullable=False)
     phone = db.Column(db.String(20), nullable=False)
     gaming_center_name = db.Column(db.String(200), nullable=False)
+    full_name = db.Column(db.String(100), nullable=True)  # Added for consistency
     address = db.Column(db.String(255), nullable=True)
     active = db.Column(db.Boolean, default=True)
     created_at = db.Column(db.DateTime, default=datetime.utcnow)
     latitude = db.Column(db.Float, nullable=True)
     longitude = db.Column(db.Float, nullable=True)
-    amenities = db.Column(db.Text, nullable=True)
-    photo1 = db.Column(db.String(300), nullable=True)
-    photo2 = db.Column(db.String(300), nullable=True)
-    photo3 = db.Column(db.String(300), nullable=True)
-    photo4 = db.Column(db.String(300), nullable=True)
-    google_maps_link = db.Column(db.String(500), nullable=True)
 
     # Relationships
-    consoles = db.relationship('Console', back_populates='owner', lazy=True, cascade='all, delete-orphan')
+    consoles = db.relationship('Console', backref='owner', lazy=True, cascade='all, delete-orphan')
+
+    def set_password(self, password):
+        """Set the owner's password hash"""
+        self.password_hash = generate_password_hash(password)
+
+    def check_password(self, password):
+        """Check if the provided password matches the hash"""
+        return check_password_hash(self.password_hash, password)
 
     def __repr__(self):
         return f'<Owner {self.username}>'
@@ -41,14 +47,14 @@
     console_type = db.Column(db.String(50), nullable=False)
     hourly_rate = db.Column(db.Float, nullable=False)  # Rate per person per hour
     is_available = db.Column(db.Boolean, default=True)
+    console_photo = db.Column(db.String(255), nullable=True)  # Path to console photo
     created_at = db.Column(db.DateTime, default=datetime.utcnow)
 
     # Foreign Keys
     owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)
 
     # Relationships
-    owner = db.relationship('Owner', back_populates='consoles')
-    slots = db.relationship('TimeSlot', back_populates='console', cascade='all, delete-orphan')
+    slots = db.relationship('TimeSlot', backref='console', lazy=True, cascade='all, delete-orphan')
 
     def __repr__(self):
         return f'<Console {self.name}>'
@@ -58,24 +64,39 @@
     __tablename__ = 'time_slots'
 
     id = db.Column(db.Integer, primary_key=True)
-    console_id = db.Column(db.Integer, db.ForeignKey('consoles.id'), nullable=False)
     start_time = db.Column(db.DateTime, nullable=False)
     end_time = db.Column(db.DateTime, nullable=False)
+    total_amount = db.Column(db.Float, nullable=False)
+    advance_paid = db.Column(db.Float, default=50.0)  # Fixed advance amount
     is_booked = db.Column(db.Boolean, default=False)
-    is_blocked = db.Column(db.Boolean, default=False)  # New field for blocking slots
-    booking_type = db.Column(db.String(20), default='online')  # 'online' or 'walkin'
-    user_id = db.Column(db.Integer, db.ForeignKey('users.id'))
-    number_of_people = db.Column(db.Integer, default=1)
-    special_requests = db.Column(db.Text)
-    total_amount = db.Column(db.Float)
-    snacks_amount = db.Column(db.Float, default=0)
-    final_amount = db.Column(db.Float)
+    snacks_amount = db.Column(db.Float, default=0.0)
+    final_amount = db.Column(db.Float, default=0.0)
     completed = db.Column(db.Boolean, default=False)
+    number_of_people = db.Column(db.Integer, default=1)  # Number of people
+
+    # Booking details
+    booking_id = db.Column(db.String(20), unique=True, nullable=True)
+    customer_name = db.Column(db.String(100), nullable=True)
+    customer_phone = db.Column(db.String(20), nullable=True)
+    customer_email = db.Column(db.String(120), nullable=True)
+    customer_age = db.Column(db.Integer, nullable=True)
+    special_requests = db.Column(db.Text, nullable=True)
+
+    # Contact preferences
+    contact_sms = db.Column(db.Boolean, default=True)
+    contact_whatsapp = db.Column(db.Boolean, default=True)
+    contact_email = db.Column(db.Boolean, default=False)
+
+    # Payment status
+    payment_status = db.Column(db.String(20), default='pending')  # pending, paid, failed
+    payment_id = db.Column(db.String(100), nullable=True)
+
+    booking_time = db.Column(db.DateTime, nullable=True)
     created_at = db.Column(db.DateTime, default=datetime.utcnow)
-    
-    # Relationships
-    console = db.relationship('Console', back_populates='slots')
-    user = db.relationship('User', back_populates='bookings')
+
+    # Foreign Keys
+    console_id = db.Column(db.Integer, db.ForeignKey('consoles.id'), nullable=False)
+    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=True)  # Optional for unregistered bookings
 
     def generate_booking_id(self):
         """Generate a unique booking ID"""
@@ -99,16 +120,18 @@
 
     id = db.Column(db.Integer, primary_key=True)
     username = db.Column(db.String(80), unique=True, nullable=False)
-    email = db.Column(db.String(120), unique=True, nullable=False)
-    phone = db.Column(db.String(20), nullable=False)
-    password_hash = db.Column(db.String(256), nullable=False)
-    full_name = db.Column(db.String(120), nullable=False)
+    email = db.Column(db.String(120), unique=True, nullable=True)
+    phone = db.Column(db.String(20), unique=True, nullable=True)
+    password_hash = db.Column(db.String(128), nullable=True)
+    full_name = db.Column(db.String(100), nullable=False)
     age = db.Column(db.Integer, nullable=True)
+    is_owner = db.Column(db.Boolean, default=False)
+    is_walkin = db.Column(db.Boolean, default=False)  # For walk-in customers
     created_at = db.Column(db.DateTime, default=datetime.utcnow)
     total_spent = db.Column(db.Float, default=0.0)
 
     # Relationships
-    bookings = db.relationship('TimeSlot', back_populates='user')
+    bookings = db.relationship('TimeSlot', backref='user', lazy=True, foreign_keys='TimeSlot.user_id')
     coin_balances = db.relationship('UserCoinBalance', backref='user', lazy=True)
 
     def set_password(self, password):
@@ -117,6 +140,8 @@
 
     def check_password(self, password):
         """Check if the provided password matches the hash"""
+        if not self.password_hash:
+            return False
         return check_password_hash(self.password_hash, password)
 
     def get_coin_balance(self, gaming_center_name):
@@ -190,19 +215,52 @@
         return f'<ConsolePricingTier {self.console_id}:up to {self.max_people}:{self.rate_per_person}>'
 
 
-class Turf(db.Model):
-    __tablename__ = 'turfs'
+class Booking(db.Model):
+    __tablename__ = 'bookings'
 
     id = db.Column(db.Integer, primary_key=True)
-    name = db.Column(db.String(100), nullable=False)
-    latitude = db.Column(db.Float, nullable=False)
-    longitude = db.Column(db.Float, nullable=False)
-    description = db.Column(db.Text)
+    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)
+    slot_id = db.Column(db.Integer, db.ForeignKey('time_slots.id'), nullable=False)
+    num_people = db.Column(db.Integer, nullable=False)
+    booking_type = db.Column(db.String(20), default='online')  # 'online' or 'walkin'
+    payment_method = db.Column(db.String(20), nullable=False)
+    payment_status = db.Column(db.String(20), default='pending')
+    created_at = db.Column(db.DateTime, default=datetime.utcnow)
+
+    # Relationships
+    snack_orders = db.relationship('SnackOrder', backref='booking', lazy=True)
+    payment = db.relationship('Payment', backref='booking', uselist=False)
+
+    def __repr__(self):
+        return f'<Booking {self.id}:{self.booking_type}:{self.payment_status}>'
+
+
+class SnackOrder(db.Model):
+    __tablename__ = 'snack_orders'
+
+    id = db.Column(db.Integer, primary_key=True)
+    booking_id = db.Column(db.Integer, db.ForeignKey('bookings.id'), nullable=False)
+    snack_id = db.Column(db.Integer, db.ForeignKey('snacks.id'), nullable=False)
+    quantity = db.Column(db.Integer, nullable=False)
+    price = db.Column(db.Float, nullable=False)  # Price at time of order
     created_at = db.Column(db.DateTime, default=datetime.utcnow)
-    owner_id = db.Column(db.Integer, db.ForeignKey('owners.id'), nullable=False)
 
     # Relationships
-    owner = db.relationship('Owner', backref='turfs')
+    snack = db.relationship('Snack', backref='orders')
 
     def __repr__(self):
-        return f'<Turf {self.name}>'
+        return f'<SnackOrder {self.id}:{self.snack_id}:{self.quantity}>'
+
+
+class Payment(db.Model):
+    __tablename__ = 'payments'
+
+    id = db.Column(db.Integer, primary_key=True)
+    booking_id = db.Column(db.Integer, db.ForeignKey('bookings.id'), nullable=False)
+    amount = db.Column(db.Float, nullable=False)
+    payment_method = db.Column(db.String(20), nullable=False)
+    status = db.Column(db.String(20), default='pending')
+    created_at = db.Column(db.DateTime, default=datetime.utcnow)
+
+    def __repr__(self):
+        return f'<Payment {self.id}:{self.amount}:{self.status}>'
\ No newline at end of file
Index: templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}Vennuez - Gaming Center Management{% endblock %}\r\n{% block content %}\r\n<section class=\"hero-section\" style=\"padding: 4rem 0; background: linear-gradient(135deg, rgba(var(--accent-rgb), 0.1) 0%, rgba(var(--primary-rgb), 0.05) 100%); position: relative; overflow: hidden;\">\r\n    <div class=\"container\" style=\"position: relative; z-index: 2;\">\r\n        <div style=\"max-width: 800px; margin: 0 auto; text-align: center;\">\r\n            <!-- Hero Icon -->\r\n            <div class=\"hero-icon\" style=\"display: inline-flex; align-items: center; justify-content: center; width: 80px; height: 80px; background: var(--accent); border-radius: 20px; margin-bottom: 2rem; box-shadow: 0 10px 30px rgba(0,0,0,0.1);\">\r\n                <span style=\"font-size: 2.5rem; color: white; font-weight: bold;\">V</span>\r\n            </div>\r\n\r\n            <!-- Main Heading -->\r\n            <h1 style=\"font-size: clamp(2.5rem, 5vw, 4rem); font-weight: 800; margin-bottom: 1.5rem; background: linear-gradient(135deg, var(--primary), var(--accent)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;\">Vennuez</h1>\r\n\r\n            <!-- Subtitle -->\r\n            <p style=\"font-size: clamp(1.1rem, 2vw, 1.3rem); color: var(--secondary); margin-bottom: 3rem; line-height: 1.6; max-width: 600px; margin-left: auto; margin-right: auto;\">The modern platform for booking and managing gaming centers. Seamless experiences for gamers and center owners alike.</p>\r\n\r\n            <!-- Primary CTA -->\r\n            <div style=\"margin-bottom: 3rem;\">\r\n                <a href=\"{{ url_for('available_slots') }}\" class=\"btn\" style=\"padding: 1rem 2.5rem; font-size: 1.1rem; font-weight: 600; border-radius: 50px; box-shadow: 0 8px 25px rgba(var(--accent-rgb), 0.3); transition: all 0.3s ease; display: inline-flex; align-items: center; gap: 0.5rem;\">\r\n                    <i class=\"fas fa-search\"></i>\r\n                    <span>Find Gaming Slots</span>\r\n                </a>\r\n            </div>\r\n\r\n            <!-- Current User Center Display -->\r\n            {% if session.username and session.user_type == 'owner' %}\r\n                {% set center_name = owner.gaming_center_name if owner and owner.gaming_center_name else session.gaming_center_name if session.gaming_center_name else None %}\r\n                {% if center_name %}\r\n                <div style=\"background: rgba(255,255,255,0.9); backdrop-filter: blur(10px); border-radius: 16px; padding: 1.5rem; margin: 0 auto; max-width: 400px; border: 1px solid rgba(var(--primary-rgb), 0.1); box-shadow: 0 8px 32px rgba(0,0,0,0.1);\">\r\n                    <div style=\"font-size: 0.9rem; color: var(--secondary); margin-bottom: 0.5rem; font-weight: 500;\">Your Gaming Center</div>\r\n                    <a href=\"{{ url_for('dashboard') }}\" style=\"font-size: 1.2rem; font-weight: 700; color: var(--primary); text-decoration: none; display: flex; align-items: center; gap: 0.5rem; transition: color 0.3s ease;\">\r\n                        <i class=\"fas fa-store\"></i>\r\n                        <span>{{ center_name }}</span>\r\n                    </a>\r\n                </div>\r\n                {% endif %}\r\n            {% endif %}\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Decorative Elements -->\r\n    <div style=\"position: absolute; top: 10%; right: -5%; width: 200px; height: 200px; background: linear-gradient(45deg, var(--accent), var(--primary)); border-radius: 50%; opacity: 0.1; z-index: 1;\"></div>\r\n    <div style=\"position: absolute; bottom: 10%; left: -5%; width: 150px; height: 150px; background: linear-gradient(45deg, var(--primary), var(--accent)); border-radius: 50%; opacity: 0.1; z-index: 1;\"></div>\r\n</section>\r\n\r\n<!-- Authentication Section -->\r\n{% if not session.username %}\r\n<section style=\"padding: 3rem 0; background: white;\">\r\n    <div class=\"container\">\r\n        <div style=\"text-align: center; margin-bottom: 3rem;\">\r\n            <h2 style=\"font-size: 2.2rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);\">Get Started</h2>\r\n            <p style=\"color: var(--secondary); font-size: 1.1rem;\">Choose your path to join the Vennuez community</p>\r\n        </div>\r\n\r\n        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; max-width: 1000px; margin: 0 auto;\">\r\n            <!-- For Gamers -->\r\n            <div class=\"card\" style=\"padding: 2.5rem; text-align: center; border-radius: 20px; border: 2px solid transparent; background: linear-gradient(white, white) padding-box, linear-gradient(135deg, var(--primary), var(--accent)) border-box; transition: all 0.3s ease; position: relative; overflow: hidden;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--primary), var(--accent)); width: 60px; height: 60px; border-radius: 15px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1.5rem auto;\">\r\n                    <i class=\"fas fa-user\" style=\"font-size: 1.5rem; color: white;\"></i>\r\n                </div>\r\n                <h3 style=\"font-size: 1.4rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);\">For Gamers</h3>\r\n                <p style=\"color: var(--secondary); margin-bottom: 2rem; line-height: 1.6;\">Join as a player to book gaming slots and enjoy seamless gaming experiences.</p>\r\n                <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\r\n                    <a href=\"{{ url_for('user_register') }}\" class=\"btn btn-secondary\" style=\"width: 100%; justify-content: center; display: flex; align-items: center; gap: 0.5rem; border-radius: 12px; padding: 0.75rem 1.5rem;\">\r\n                        <i class=\"fas fa-user-plus\"></i> Sign Up\r\n                    </a>\r\n                    <a href=\"{{ url_for('user_login') }}\" style=\"color: var(--primary); text-decoration: none; font-weight: 600; padding: 0.75rem; border: 2px solid var(--primary); border-radius: 12px; transition: all 0.3s ease; display: flex; align-items: center; justify-content: center; gap: 0.5rem;\">\r\n                        <i class=\"fas fa-sign-in-alt\"></i> Sign In\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- For Center Owners -->\r\n            <div class=\"card\" style=\"padding: 2.5rem; text-align: center; border-radius: 20px; border: 2px solid transparent; background: linear-gradient(white, white) padding-box, linear-gradient(135deg, var(--accent), var(--primary)) border-box; transition: all 0.3s ease; position: relative; overflow: hidden;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--accent), var(--primary)); width: 60px; height: 60px; border-radius: 15px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1.5rem auto;\">\r\n                    <i class=\"fas fa-store\" style=\"font-size: 1.5rem; color: white;\"></i>\r\n                </div>\r\n                <h3 style=\"font-size: 1.4rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);\">For Center Owners</h3>\r\n                <p style=\"color: var(--secondary); margin-bottom: 2rem; line-height: 1.6;\">Register your gaming center and manage bookings with our powerful platform.</p>\r\n                <div>\r\n                    <a href=\"{{ url_for('register') }}\" class=\"btn\" style=\"width: 100%; justify-content: center; display: flex; align-items: center; gap: 0.5rem; border-radius: 12px; padding: 0.75rem 1.5rem;\">\r\n                        <i class=\"fas fa-store\"></i> Register Center\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endif %}\r\n\r\n<!-- Features Section -->\r\n<section style=\"padding: 4rem 0; background: var(--muted);\">\r\n    <div class=\"container\">\r\n        <div style=\"text-align: center; margin-bottom: 3rem;\">\r\n            <h2 style=\"font-size: 2.2rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);\">Why Choose Vennuez?</h2>\r\n            <p style=\"color: var(--secondary); font-size: 1.1rem; max-width: 600px; margin: 0 auto;\">Experience the future of gaming center management with our innovative platform</p>\r\n        </div>\r\n\r\n        <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 2rem; max-width: 1200px; margin: 0 auto;\">\r\n            <div style=\"background: white; padding: 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 20px rgba(0,0,0,0.08); transition: transform 0.3s ease;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--primary), var(--accent)); width: 50px; height: 50px; border-radius: 12px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1rem auto;\">\r\n                    <i class=\"fas fa-bolt\" style=\"font-size: 1.2rem; color: white;\"></i>\r\n                </div>\r\n                <h4 style=\"font-weight: 700; margin-bottom: 0.5rem; color: var(--primary);\">Instant Booking</h4>\r\n                <p style=\"color: var(--secondary); font-size: 0.9rem; line-height: 1.5;\">Book your gaming slots instantly with real-time availability</p>\r\n            </div>\r\n\r\n            <div style=\"background: white; padding: 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 20px rgba(0,0,0,0.08); transition: transform 0.3s ease;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--accent), var(--primary)); width: 50px; height: 50px; border-radius: 12px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1rem auto;\">\r\n                    <i class=\"fas fa-shield-alt\" style=\"font-size: 1.2rem; color: white;\"></i>\r\n                </div>\r\n                <h4 style=\"font-weight: 700; margin-bottom: 0.5rem; color: var(--primary);\">Secure Platform</h4>\r\n                <p style=\"color: var(--secondary); font-size: 0.9rem; line-height: 1.5;\">Your data and transactions are protected with industry-standard security</p>\r\n            </div>\r\n\r\n            <div style=\"background: white; padding: 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 20px rgba(0,0,0,0.08); transition: transform 0.3s ease;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--primary), var(--accent)); width: 50px; height: 50px; border-radius: 12px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1rem auto;\">\r\n                    <i class=\"fas fa-headset\" style=\"font-size: 1.2rem; color: white;\"></i>\r\n                </div>\r\n                <h4 style=\"font-weight: 700; margin-bottom: 0.5rem; color: var(--primary);\">24/7 Support</h4>\r\n                <p style=\"color: var(--secondary); font-size: 0.9rem; line-height: 1.5;\">Round-the-clock support for all your gaming and booking needs</p>\r\n            </div>\r\n\r\n            <div style=\"background: white; padding: 2rem; border-radius: 16px; text-align: center; box-shadow: 0 4px 20px rgba(0,0,0,0.08); transition: transform 0.3s ease;\">\r\n                <div style=\"background: linear-gradient(135deg, var(--accent), var(--primary)); width: 50px; height: 50px; border-radius: 12px; display: flex; align-items: center; justify-content: center; margin: 0 auto 1rem auto;\">\r\n                    <i class=\"fas fa-chart-line\" style=\"font-size: 1.2rem; color: white;\"></i>\r\n                </div>\r\n                <h4 style=\"font-weight: 700; margin-bottom: 0.5rem; color: var(--primary);\">Analytics Dashboard</h4>\r\n                <p style=\"color: var(--secondary); font-size: 0.9rem; line-height: 1.5;\">Powerful insights and analytics for center owners to optimize operations</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<!-- Final CTA Section -->\r\n<section style=\"padding: 4rem 0; background: linear-gradient(135deg, var(--primary), var(--accent)); color: white; text-align: center; position: relative; overflow: hidden;\">\r\n    <div class=\"container\" style=\"position: relative; z-index: 2;\">\r\n        <h2 style=\"font-size: 2.5rem; font-weight: 800; margin-bottom: 1rem;\">Ready to Level Up?</h2>\r\n        <p style=\"font-size: 1.2rem; opacity: 0.9; margin-bottom: 2.5rem; max-width: 600px; margin-left: auto; margin-right: auto;\">Join the gaming revolution and experience seamless booking and management</p>\r\n        <a href=\"{{ url_for('available_slots') }}\" style=\"background: white; color: var(--primary); padding: 1rem 2.5rem; border-radius: 50px; text-decoration: none; font-weight: 700; font-size: 1.1rem; display: inline-flex; align-items: center; gap: 0.5rem; box-shadow: 0 8px 25px rgba(0,0,0,0.2); transition: all 0.3s ease;\">\r\n            <i class=\"fas fa-rocket\"></i>\r\n            <span>Start Gaming Now</span>\r\n        </a>\r\n    </div>\r\n\r\n    <!-- Decorative Elements -->\r\n    <div style=\"position: absolute; top: -50px; right: -50px; width: 200px; height: 200px; background: rgba(255,255,255,0.1); border-radius: 50%; z-index: 1;\"></div>\r\n    <div style=\"position: absolute; bottom: -100px; left: -100px; width: 300px; height: 300px; background: rgba(255,255,255,0.05); border-radius: 50%; z-index: 1;\"></div>\r\n</section>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/index.html b/templates/index.html
--- a/templates/index.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/index.html	(date 1750086331486)
@@ -1,16 +1,16 @@
 {% extends "base.html" %}
-{% block title %}Vennuez - Gaming Center Management{% endblock %}
+{% block title %}BooknPlay - Gaming Center Management{% endblock %}
 {% block content %}
 <section class="hero-section" style="padding: 4rem 0; background: linear-gradient(135deg, rgba(var(--accent-rgb), 0.1) 0%, rgba(var(--primary-rgb), 0.05) 100%); position: relative; overflow: hidden;">
     <div class="container" style="position: relative; z-index: 2;">
         <div style="max-width: 800px; margin: 0 auto; text-align: center;">
             <!-- Hero Icon -->
             <div class="hero-icon" style="display: inline-flex; align-items: center; justify-content: center; width: 80px; height: 80px; background: var(--accent); border-radius: 20px; margin-bottom: 2rem; box-shadow: 0 10px 30px rgba(0,0,0,0.1);">
-                <span style="font-size: 2.5rem; color: white; font-weight: bold;">V</span>
+                <i class="fas fa-gamepad" style="font-size: 2.5rem; color: white;"></i>
             </div>
 
             <!-- Main Heading -->
-            <h1 style="font-size: clamp(2.5rem, 5vw, 4rem); font-weight: 800; margin-bottom: 1.5rem; background: linear-gradient(135deg, var(--primary), var(--accent)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">Vennuez</h1>
+            <h1 style="font-size: clamp(2.5rem, 5vw, 4rem); font-weight: 800; margin-bottom: 1.5rem; background: linear-gradient(135deg, var(--primary), var(--accent)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">BooknPlay</h1>
 
             <!-- Subtitle -->
             <p style="font-size: clamp(1.1rem, 2vw, 1.3rem); color: var(--secondary); margin-bottom: 3rem; line-height: 1.6; max-width: 600px; margin-left: auto; margin-right: auto;">The modern platform for booking and managing gaming centers. Seamless experiences for gamers and center owners alike.</p>
@@ -50,7 +50,7 @@
     <div class="container">
         <div style="text-align: center; margin-bottom: 3rem;">
             <h2 style="font-size: 2.2rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);">Get Started</h2>
-            <p style="color: var(--secondary); font-size: 1.1rem;">Choose your path to join the Vennuez community</p>
+            <p style="color: var(--secondary); font-size: 1.1rem;">Choose your path to join the BooknPlay community</p>
         </div>
 
         <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; max-width: 1000px; margin: 0 auto;">
@@ -93,7 +93,7 @@
 <section style="padding: 4rem 0; background: var(--muted);">
     <div class="container">
         <div style="text-align: center; margin-bottom: 3rem;">
-            <h2 style="font-size: 2.2rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);">Why Choose Vennuez?</h2>
+            <h2 style="font-size: 2.2rem; font-weight: 700; margin-bottom: 1rem; color: var(--primary);">Why Choose BooknPlay?</h2>
             <p style="color: var(--secondary); font-size: 1.1rem; max-width: 600px; margin: 0 auto;">Experience the future of gaming center management with our innovative platform</p>
         </div>
 
Index: templates/dashboard.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Dashboard - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"dashboard-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 900px;\">\r\n        <div class=\"page-header\" style=\"margin-bottom: 2rem; text-align: center;\">\r\n            <h1 style=\"font-size: 2rem; font-weight: 700; margin-bottom: 0.5rem;\">\r\n                <i class=\"fas fa-tachometer-alt\" style=\"color: var(--accent);\"></i> Welcome, {{ owner.username }}!\r\n            </h1>\r\n            <p style=\"color: var(--secondary);\">Manage your gaming center and track your business performance</p>\r\n        </div>\r\n        <div style=\"display: flex; justify-content: center; align-items: center; margin-bottom: 1.5rem;\">\r\n            {% if not owner.latitude or not owner.longitude %}\r\n            <button id=\"set-location-btn\" class=\"btn btn-danger\" style=\"background-color: #dc3545; border-color: #dc3545; color: #fff;\" onclick=\"setMyLocation()\">\r\n                <i class=\"fas fa-map-marker-alt\"></i> Set My Location\r\n            </button>\r\n            <script>\r\n            function setMyLocation() {\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(function(pos) {\r\n                        fetch(\"{{ url_for('set_owner_location') }}\", {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ latitude: pos.coords.latitude, longitude: pos.coords.longitude })\r\n                        }).then(r => r.json()).then(data => {\r\n                            if (data.success) {\r\n                                document.getElementById('set-location-btn').style.display = 'none';\r\n                                alert('Location set!');\r\n                                location.reload();\r\n                            } else {\r\n                                alert('Failed to set location.');\r\n                            }\r\n                        });\r\n                    }, function() {\r\n                        alert('Could not get your location.');\r\n                    });\r\n                } else {\r\n                    alert('Geolocation is not supported by your browser.');\r\n                }\r\n            }\r\n            </script>\r\n            {% endif %}\r\n        </div>\r\n        <div class=\"dashboard-stats\" style=\"display: flex; flex-wrap: wrap; gap: 2rem; justify-content: center; margin-bottom: 2rem;\">\r\n            <div class=\"card\" style=\"min-width: 180px; text-align: center;\">\r\n                <div style=\"font-size: 1.5rem; font-weight: 700; color: var(--primary);\">{{ stats.total_slots }}</div>\r\n                <div style=\"color: var(--secondary);\">Total Slots</div>\r\n            </div>\r\n            <div class=\"card\" style=\"min-width: 180px; text-align: center;\">\r\n                <div style=\"font-size: 1.5rem; font-weight: 700; color: var(--primary);\">{{ stats.available_slots }}</div>\r\n                <div style=\"color: var(--success);\">Available Slots</div>\r\n            </div>\r\n            <div class=\"card\" style=\"min-width: 180px; text-align: center;\">\r\n                <div style=\"font-size: 1.5rem; font-weight: 700; color: var(--primary);\">₹{{ stats.total_revenue }}</div>\r\n                <div style=\"color: var(--secondary);\">Total Revenue</div>\r\n            </div>\r\n            <div class=\"card\" style=\"min-width: 180px; text-align: center;\">\r\n                <div style=\"font-size: 1.5rem; font-weight: 700; color: var(--primary);\">₹{{ stats.advance_collected }}</div>\r\n                <div style=\"color: var(--accent);\">Advance Collected</div>\r\n            </div>\r\n        </div>\r\n        <div style=\"text-align: right; margin-bottom: 1.5rem;\">\r\n            <a href=\"{{ url_for('add_console') }}\" class=\"btn btn-primary\">\r\n                <i class=\"fas fa-plus\"></i> Add New Console\r\n            </a>\r\n            <a href=\"{{ url_for('walkin_booking') }}\" class=\"btn btn-success\">\r\n                <i class=\"fas fa-user-plus\"></i> Walk-in Booking\r\n            </a>\r\n            <a href=\"{{ url_for('manage_snacks') }}\" class=\"btn btn-warning\" style=\"margin-left: 1rem;\">\r\n                <i class=\"fas fa-cookie-bite\"></i> Manage Snacks\r\n            </a>\r\n        </div>\r\n        <div class=\"dashboard-consoles\">\r\n            <h2 style=\"font-size: 1.3rem; font-weight: 600; margin-bottom: 1rem; color: var(--primary);\">Your Consoles</h2>\r\n            <div style=\"display: flex; flex-wrap: wrap; gap: 2rem;\">\r\n                {% for console in consoles %}\r\n                <div class=\"card\" style=\"min-width: 220px; flex: 1 1 220px;\">\r\n                    <div style=\"font-weight: 600; color: var(--primary); margin-bottom: 0.5rem;\">{{ console.name }}</div>\r\n                    <div style=\"color: var(--secondary); margin-bottom: 0.5rem;\"><i class=\"fas fa-gamepad\"></i> {{ console.console_type }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-rupee-sign\"></i> ₹{{ console.hourly_rate }}/hr</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-calendar-alt\"></i> Added: {{ console.added_on }}</div>\r\n                    <div style=\"margin-bottom: 1rem;\">\r\n                        <a href=\"{{ url_for('console_details', console_id=console.id) }}\" class=\"btn btn-secondary\" style=\"width: 100%;\">Manage</a>\r\n                    </div>\r\n                </div>\r\n                {% else %}\r\n                <div style=\"color: var(--secondary); font-size: 1.1rem;\">No consoles added yet.</div>\r\n                {% endfor %}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/dashboard.html b/templates/dashboard.html
--- a/templates/dashboard.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/dashboard.html	(date 1750086331486)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Dashboard - Vennuez{% endblock %}
+{% block title %}Dashboard - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="dashboard-page" style="padding: 2rem 0;">
@@ -62,11 +62,8 @@
             </div>
         </div>
         <div style="text-align: right; margin-bottom: 1.5rem;">
-            <a href="{{ url_for('add_console') }}" class="btn btn-primary">
+            <a href="{{ url_for('add_console') }}" class="btn">
                 <i class="fas fa-plus"></i> Add New Console
-            </a>
-            <a href="{{ url_for('walkin_booking') }}" class="btn btn-success">
-                <i class="fas fa-user-plus"></i> Walk-in Booking
             </a>
             <a href="{{ url_for('manage_snacks') }}" class="btn btn-warning" style="margin-left: 1rem;">
                 <i class="fas fa-cookie-bite"></i> Manage Snacks
Index: templates/login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Login - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"auth-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 400px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <div class=\"auth-header\" style=\"text-align: center; margin-bottom: 2rem;\">\r\n                <div class=\"auth-icon\" style=\"font-size: 2.5rem; color: var(--accent); margin-bottom: 1rem;\">\r\n                    <i class=\"fas fa-sign-in-alt\"></i>\r\n                </div>\r\n                <h2 class=\"auth-title\" style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">Owner Login</h2>\r\n                <p class=\"auth-subtitle\" style=\"color: var(--secondary);\">Welcome back! Please sign in to your account.</p>\r\n            </div>\r\n            <form method=\"POST\" class=\"auth-form\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\" class=\"form-label\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required placeholder=\"Enter your username\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required placeholder=\"Enter your password\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Login</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/login.html b/templates/login.html
--- a/templates/login.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/login.html	(date 1750086331486)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Login - Vennuez{% endblock %}
+{% block title %}Login - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="auth-page" style="padding: 2rem 0;">
Index: templates/register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Register - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"auth-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 500px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <div class=\"auth-header\" style=\"text-align: center; margin-bottom: 2rem;\">\r\n                <div class=\"auth-icon\" style=\"font-size: 2.5rem; color: var(--accent); margin-bottom: 1rem;\">\r\n                            <i class=\"fas fa-store\"></i>\r\n                        </div>\r\n                <h2 class=\"auth-title\" style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">Register Your Gaming Center</h2>\r\n                <p class=\"auth-subtitle\" style=\"color: var(--secondary);\">Join our platform and start managing your gaming business</p>\r\n                    </div>\r\n                    <form method=\"POST\" class=\"auth-form\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"username\" class=\"form-label\">Username *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required placeholder=\"Choose a unique username\">\r\n                                </div>\r\n                                    <div class=\"form-group\">\r\n                    <label for=\"email\" class=\"form-label\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter your email\">\r\n                            </div>\r\n                                    <div class=\"form-group\">\r\n                    <label for=\"phone\" class=\"form-label\">Phone *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" required placeholder=\"Enter your phone number\">\r\n                                </div>\r\n                                    <div class=\"form-group\">\r\n                    <label for=\"center_name\" class=\"form-label\">Gaming Center Name *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"center_name\" name=\"center_name\" required placeholder=\"Your center's name\">\r\n                        </div>\r\n                            <div class=\"form-group\">\r\n                    <label for=\"address\" class=\"form-label\">Address *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"address\" name=\"address\" required placeholder=\"Your center's address\">\r\n                            </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"amenities\" class=\"form-label\">Amenities (comma separated)</label>\r\n                    <textarea class=\"form-control\" id=\"amenities\" name=\"amenities\" placeholder=\"e.g. AC, Parking, WiFi, Snacks\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\">Upload 4 Photos *</label>\r\n                    <input type=\"file\" id=\"photo1\" accept=\"image/*\" required>\r\n                    <input type=\"file\" id=\"photo2\" accept=\"image/*\" required>\r\n                    <input type=\"file\" id=\"photo3\" accept=\"image/*\" required>\r\n                    <input type=\"file\" id=\"photo4\" accept=\"image/*\" required>\r\n                    <input type=\"hidden\" name=\"photo1_url\" id=\"photo1_url\">\r\n                    <input type=\"hidden\" name=\"photo2_url\" id=\"photo2_url\">\r\n                    <input type=\"hidden\" name=\"photo3_url\" id=\"photo3_url\">\r\n                    <input type=\"hidden\" name=\"photo4_url\" id=\"photo4_url\">\r\n                    <div id=\"photo-upload-status\" style=\"color: green; margin-top: 0.5rem;\"></div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"google_maps_link\" class=\"form-label\">Google Maps Link *</label>\r\n                    <input type=\"url\" class=\"form-control\" id=\"google_maps_link\" name=\"google_maps_link\" required placeholder=\"Paste your Google Maps location link here\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\" class=\"form-label\">Password *</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required placeholder=\"Create a password\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"confirm_password\" class=\"form-label\">Confirm Password *</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"confirm_password\" name=\"confirm_password\" required placeholder=\"Re-enter your password\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Register</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js\"></script>\r\n<script>\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    var form = document.querySelector('form.auth-form');\r\n    // Unified submit handler for Cloudinary upload only\r\n    form.addEventListener('submit', async function(e) {\r\n        e.preventDefault();\r\n        document.getElementById('photo-upload-status').textContent = 'Uploading photos...';\r\n        try {\r\n            // Cloudinary upload\r\n            const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dwf6thd10/image/upload';\r\n            const uploadPreset = 'Unsigned_1';\r\n            async function uploadToCloudinary(file) {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                formData.append('upload_preset', uploadPreset);\r\n                const response = await axios.post(cloudinaryUrl, formData);\r\n                return response.data.secure_url;\r\n            }\r\n            const photoInputs = [\r\n                document.getElementById('photo1'),\r\n                document.getElementById('photo2'),\r\n                document.getElementById('photo3'),\r\n                document.getElementById('photo4')\r\n            ];\r\n            const photoUrlInputs = [\r\n                document.getElementById('photo1_url'),\r\n                document.getElementById('photo2_url'),\r\n                document.getElementById('photo3_url'),\r\n                document.getElementById('photo4_url')\r\n            ];\r\n            for (let i = 0; i < 4; i++) {\r\n                const file = photoInputs[i].files[0];\r\n                if (!file) throw new Error('Please select all 4 photos.');\r\n                const url = await uploadToCloudinary(file);\r\n                photoUrlInputs[i].value = url;\r\n            }\r\n            document.getElementById('photo-upload-status').textContent = 'Photos uploaded! Submitting...';\r\n            form.submit();\r\n        } catch (err) {\r\n            document.getElementById('photo-upload-status').textContent = 'Photo upload failed: ' + err.message;\r\n        }\r\n    });\r\n});\r\n</script>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/register.html b/templates/register.html
--- a/templates/register.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/register.html	(date 1750086331486)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Register - Vennuez{% endblock %}
+{% block title %}Register - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="auth-page" style="padding: 2rem 0;">
@@ -34,27 +34,13 @@
                     <label for="address" class="form-label">Address *</label>
                     <input type="text" class="form-control" id="address" name="address" required placeholder="Your center's address">
                             </div>
-                <div class="form-group">
-                    <label for="amenities" class="form-label">Amenities (comma separated)</label>
-                    <textarea class="form-control" id="amenities" name="amenities" placeholder="e.g. AC, Parking, WiFi, Snacks"></textarea>
-                </div>
-                <div class="form-group">
-                    <label class="form-label">Upload 4 Photos *</label>
-                    <input type="file" id="photo1" accept="image/*" required>
-                    <input type="file" id="photo2" accept="image/*" required>
-                    <input type="file" id="photo3" accept="image/*" required>
-                    <input type="file" id="photo4" accept="image/*" required>
-                    <input type="hidden" name="photo1_url" id="photo1_url">
-                    <input type="hidden" name="photo2_url" id="photo2_url">
-                    <input type="hidden" name="photo3_url" id="photo3_url">
-                    <input type="hidden" name="photo4_url" id="photo4_url">
-                    <div id="photo-upload-status" style="color: green; margin-top: 0.5rem;"></div>
-                </div>
-                <div class="form-group">
-                    <label for="google_maps_link" class="form-label">Google Maps Link *</label>
-                    <input type="url" class="form-control" id="google_maps_link" name="google_maps_link" required placeholder="Paste your Google Maps location link here">
-                </div>
-                <div class="form-group">
+                <!-- Location fields: hidden, no labels -->
+                <input type="hidden" id="latitude" name="latitude">
+                <input type="hidden" id="longitude" name="longitude">
+                <div id="location-warning" style="color: red; display: none; margin-bottom: 1rem;">
+                    Location permission is required to register your center.
+                        </div>
+                        <div class="form-group">
                     <label for="password" class="form-label">Password *</label>
                     <input type="password" class="form-control" id="password" name="password" required placeholder="Create a password">
                 </div>
@@ -68,49 +54,74 @@
     </div>
 </section>
 
-<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
 <script>
 document.addEventListener('DOMContentLoaded', function() {
+    var registerBtn = document.querySelector('button[type="submit"]');
+    var latField = document.getElementById('latitude');
+    var lonField = document.getElementById('longitude');
+    var warning = document.getElementById('location-warning');
     var form = document.querySelector('form.auth-form');
-    // Unified submit handler for Cloudinary upload only
-    form.addEventListener('submit', async function(e) {
-        e.preventDefault();
-        document.getElementById('photo-upload-status').textContent = 'Uploading photos...';
-        try {
-            // Cloudinary upload
-            const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dwf6thd10/image/upload';
-            const uploadPreset = 'Unsigned_1';
-            async function uploadToCloudinary(file) {
-                const formData = new FormData();
-                formData.append('file', file);
-                formData.append('upload_preset', uploadPreset);
-                const response = await axios.post(cloudinaryUrl, formData);
-                return response.data.secure_url;
+
+    if (registerBtn) registerBtn.disabled = true;
+
+    function enableIfLocation() {
+        if (latField.value && lonField.value) {
+            warning.style.display = 'none';
+            registerBtn.disabled = false;
+        } else {
+            warning.style.display = 'block';
+            registerBtn.disabled = true;
+        }
+    }
+
+    if (navigator.geolocation) {
+        navigator.geolocation.getCurrentPosition(function(position) {
+            latField.value = position.coords.latitude;
+            lonField.value = position.coords.longitude;
+            enableIfLocation();
+            console.log('Location success:', position.coords.latitude, position.coords.longitude);
+        }, function(error) {
+            warning.style.display = 'block';
+            registerBtn.disabled = true;
+            console.error('Location error:', error);
+        });
+    } else {
+        warning.style.display = 'block';
+        registerBtn.disabled = true;
+        console.error('Geolocation not supported');
+    }
+
+    // Prevent form submission if location is not set
+    if (form) {
+        form.addEventListener('submit', function(e) {
+            if (!latField.value || !lonField.value) {
+                e.preventDefault();
+                warning.style.display = 'block';
+                registerBtn.disabled = true;
             }
-            const photoInputs = [
-                document.getElementById('photo1'),
-                document.getElementById('photo2'),
-                document.getElementById('photo3'),
-                document.getElementById('photo4')
-            ];
-            const photoUrlInputs = [
-                document.getElementById('photo1_url'),
-                document.getElementById('photo2_url'),
-                document.getElementById('photo3_url'),
-                document.getElementById('photo4_url')
-            ];
-            for (let i = 0; i < 4; i++) {
-                const file = photoInputs[i].files[0];
-                if (!file) throw new Error('Please select all 4 photos.');
-                const url = await uploadToCloudinary(file);
-                photoUrlInputs[i].value = url;
-            }
-            document.getElementById('photo-upload-status').textContent = 'Photos uploaded! Submitting...';
-            form.submit();
-        } catch (err) {
-            document.getElementById('photo-upload-status').textContent = 'Photo upload failed: ' + err.message;
-        }
-    });
+        });
+    }
+});
+
+async function geocodeAddress(address) {
+    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
+    const response = await fetch(url);
+    const data = await response.json();
+    if (data && data.length > 0) {
+        return { lat: data[0].lat, lon: data[0].lon };
+    }
+    return { lat: '', lon: '' };
+}
+
+document.querySelector('form').addEventListener('submit', async function(e) {
+    const address = document.getElementById('address').value;
+    if (address) {
+        e.preventDefault();
+        const coords = await geocodeAddress(address);
+        document.getElementById('latitude').value = coords.lat;
+        document.getElementById('longitude').value = coords.lon;
+        this.submit();
+    }
 });
 </script>
 {% endblock %}
Index: templates/payment.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Payment - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"payment-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 500px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <div class=\"payment-header\" style=\"text-align: center; margin-bottom: 2rem;\">\r\n                <div class=\"payment-icon\" style=\"font-size: 2.5rem; color: var(--accent); margin-bottom: 1rem;\">\r\n                    <i class=\"fas fa-credit-card\"></i>\r\n                </div>\r\n                <h2 class=\"payment-title\" style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">Complete Your Payment</h2>\r\n                <p class=\"payment-subtitle\" style=\"color: var(--secondary);\">Secure your gaming slot with advance payment</p>\r\n            </div>\r\n            <div class=\"payment-summary\" style=\"margin-bottom: 2rem;\">\r\n                <div style=\"margin-bottom: 0.5rem;\"><strong>Center:</strong> {{ slot.center_name }}</div>\r\n                <div style=\"margin-bottom: 0.5rem;\"><strong>Console:</strong> {{ slot.console_type }}</div>\r\n                <div style=\"margin-bottom: 0.5rem;\"><strong>Date:</strong> {{ slot.date }}</div>\r\n                <div style=\"margin-bottom: 0.5rem;\"><strong>Time:</strong> {{ slot.time }}</div>\r\n                <div class=\"payment-details\">\r\n                    <h3>Payment Details</h3>\r\n                    <div class=\"amount-breakdown\">\r\n                        <div class=\"amount-item\">\r\n                            <span>Base Amount:</span>\r\n                            <span style=\"color: var(--accent); font-weight: 600;\">₹{{ slot.total_amount }}</span>\r\n                        </div>\r\n                        <div class=\"amount-item total\">\r\n                            <span>Total Amount:</span>\r\n                            <span style=\"color: var(--accent); font-weight: 600;\">₹{{ slot.total_amount }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form method=\"POST\" class=\"payment-form\">\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Pay Now</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/payment.html b/templates/payment.html
--- a/templates/payment.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/payment.html	(date 1750086331486)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Payment - Vennuez{% endblock %}
+{% block title %}Payment - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="payment-page" style="padding: 2rem 0;">
@@ -18,19 +18,8 @@
                 <div style="margin-bottom: 0.5rem;"><strong>Console:</strong> {{ slot.console_type }}</div>
                 <div style="margin-bottom: 0.5rem;"><strong>Date:</strong> {{ slot.date }}</div>
                 <div style="margin-bottom: 0.5rem;"><strong>Time:</strong> {{ slot.time }}</div>
-                <div class="payment-details">
-                    <h3>Payment Details</h3>
-                    <div class="amount-breakdown">
-                        <div class="amount-item">
-                            <span>Base Amount:</span>
-                            <span style="color: var(--accent); font-weight: 600;">₹{{ slot.total_amount }}</span>
-                        </div>
-                        <div class="amount-item total">
-                            <span>Total Amount:</span>
-                            <span style="color: var(--accent); font-weight: 600;">₹{{ slot.total_amount }}</span>
-                        </div>
-                    </div>
-                </div>
+                <div style="margin-bottom: 0.5rem;"><strong>Total:</strong> ₹{{ slot.total_amount }}</div>
+                <div style="margin-bottom: 0.5rem;"><strong>Advance to Pay:</strong> <span style="color: var(--accent); font-weight: 600;">₹{{ slot.advance_paid }}</span></div>
             </div>
             <form method="POST" class="payment-form">
                 <button type="submit" class="btn" style="width: 100%;">Pay Now</button>
Index: templates/book_slot.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}Book Gaming Slot{% endblock %}\r\n{% block content %}\r\n<section class=\"booking-section\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 600px;\">\r\n        <div class=\"booking-steps\" style=\"display: flex; justify-content: space-between; margin-bottom: 2rem;\">\r\n            <div class=\"step active\" data-step=\"1\">\r\n                <div class=\"step-number\">1</div>\r\n                <div class=\"step-label\">Select Time</div>\r\n            </div>\r\n            <div class=\"step\" data-step=\"2\">\r\n                <div class=\"step-number\">2</div>\r\n                <div class=\"step-label\">Confirm</div>\r\n            </div>\r\n        </div>\r\n        <!-- Step 1: Date and Time Selection -->\r\n        <div class=\"booking-step\" data-step=\"1\">\r\n            <div class=\"card\">\r\n                <h2>Select Date and Time</h2>\r\n                <div class=\"date-picker\">\r\n                    <div class=\"date-grid\">\r\n                        <!-- Debug print -->\r\n                        <div style=\"display: none;\">Debug: {{ available_dates }}</div>\r\n                        <div style=\"display: none;\">Debug: Slot console_id: {{ slot.console_id }}</div>\r\n                        <div style=\"display: none;\">Debug: Selected date: {{ selected_date }}</div>\r\n                        {% if available_dates %}\r\n                            {% for date in available_dates %}\r\n                                <div class=\"date-item\" data-date=\"{{ date }}\">\r\n                                    {{ date }}\r\n                                </div>\r\n                            {% endfor %}\r\n                            {% else %}\r\n                            <div style=\"text-align: center; padding: 1rem; color: #666;\">\r\n                                No available dates found. Please check back later.\r\n                            </div>\r\n                        {% endif %}\r\n                    </div>\r\n                </div>\r\n                <div class=\"time-slots\">\r\n                    <!-- Time slots will be populated by JavaScript -->\r\n                </div>\r\n\r\n                <!-- Number of People Calculator -->\r\n                <div class=\"people-calculator\" style=\"margin-top: 1rem; padding: 1rem; background: #f8f9fa; border-radius: 8px;\">\r\n                    <h3 style=\"font-size: 1.1rem; margin-bottom: 1rem;\">Number of People</h3>\r\n                    <div style=\"display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;\">\r\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onclick=\"decrementPeople()\">-</button>\r\n                        <input type=\"number\" id=\"number_of_people\" name=\"number_of_people\" value=\"1\" min=\"1\" max=\"10\" class=\"form-control\" style=\"width: 80px; text-align: center;\" onchange=\"updateTotalAmount()\">\r\n                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" onclick=\"incrementPeople()\">+</button>\r\n                    </div>\r\n                    <div class=\"amount-breakdown\" style=\"background: white; padding: 1rem; border-radius: 4px;\">\r\n                        <div style=\"margin-bottom: 1rem;\">\r\n                            <strong>Pricing Tiers:</strong>\r\n                            <table class=\"table table-sm\" id=\"pricing-tiers-table\">\r\n                                <thead><tr><th>Up to (people)</th><th>Rate/person (₹)</th></tr></thead>\r\n                                <tbody id=\"pricing-tiers-body\">\r\n                                    <tr><td colspan=\"2\">Loading...</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div style=\"display: flex; justify-content: space-between; margin-bottom: 0.5rem;\">\r\n                            <span>Rate (per person):</span>\r\n                            <span id=\"rate-per-person\">₹{{ slot.console.hourly_rate }}</span>\r\n                        </div>\r\n                        <div style=\"display: flex; justify-content: space-between; margin-bottom: 0.5rem;\">\r\n                            <span>Number of People:</span>\r\n                            <span id=\"people-display\">1</span>\r\n                        </div>\r\n                        <div style=\"display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #dee2e6; padding-top: 0.5rem;\">\r\n                            <span>Total Amount:</span>\r\n                            <span id=\"total-amount-display\">₹0</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- Step 2: Booking Confirmation -->\r\n        <div class=\"booking-step\" data-step=\"2\" style=\"display: none;\">\r\n            <div class=\"card\">\r\n                <h2>Confirm Your Booking</h2>\r\n                <form id=\"booking-form\" method=\"POST\" action=\"{{ url_for('book_slot', slot_id=slot.id) }}\">\r\n                    <input type=\"hidden\" name=\"number_of_people\" id=\"form_number_of_people\">\r\n                    <input type=\"hidden\" name=\"selected_date\" id=\"form_selected_date\">\r\n                    <input type=\"hidden\" name=\"selected_time\" id=\"form_selected_time\">\r\n                    \r\n                    {% if user %}\r\n                    <div class=\"user-details\">\r\n                        <h3>Your Details</h3>\r\n                        <p><strong>Name:</strong> {{ user.username }}</p>\r\n                        <p><strong>Phone:</strong> {{ user.phone }}</p>\r\n                        <p><strong>Email:</strong> {{ user.email }}</p>\r\n                    </div>\r\n                    {% else %}\r\n                    <div class=\"alert alert-warning\">\r\n                        Please <a href=\"{{ url_for('login') }}\">login</a> to book a slot.\r\n                    </div>\r\n                    {% endif %}\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"special_requests\">Special Requests (Optional)</label>\r\n                        <textarea id=\"special_requests\" name=\"special_requests\" class=\"form-control\" rows=\"3\"></textarea>\r\n                    </div>\r\n\r\n                    <div class=\"booking-summary\">\r\n                        <h3>Booking Summary</h3>\r\n                        <div class=\"summary-item\">\r\n                            <span>Date:</span>\r\n                            <span id=\"summary-date\"></span>\r\n                        </div>\r\n                        <div class=\"summary-item\">\r\n                            <span>Time:</span>\r\n                            <span id=\"summary-time\"></span>\r\n                        </div>\r\n                        <div class=\"summary-item\">\r\n                            <span>Number of People:</span>\r\n                            <span id=\"summary-people\"></span>\r\n                        </div>\r\n                        <div class=\"summary-item total\">\r\n                            <span>Total Amount:</span>\r\n                            <span id=\"summary-total\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\" style=\"margin-top: 1.5rem;\">\r\n                        <div class=\"form-check\" style=\"display: flex; align-items: center; flex-direction: row-reverse; justify-content: flex-end;\">\r\n                            <input type=\"checkbox\" id=\"terms\" name=\"terms\" class=\"form-check-input\" required style=\"margin-left: 0.5rem;\">\r\n                            <label class=\"form-check-label\" for=\"terms\">I agree to the terms and conditions</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-top: 1.5rem; width: 100%;\" {% if not user %}disabled{% endif %}>Confirm Booking</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <!-- Navigation Buttons -->\r\n        <div class=\"nav-buttons\" style=\"display: flex; justify-content: space-between; margin-top: 1.5rem;\">\r\n            <button class=\"btn btn-secondary nav-btn\" data-action=\"prev\" style=\"display: none;\">Previous</button>\r\n            <button class=\"btn nav-btn\" data-action=\"next\">Next</button>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}\r\n\r\n{% block extra_scripts %}\r\n<script>\r\n  const CONSOLE_ID = {{ slot.console_id }};\r\n</script>\r\n<script src=\"{{ url_for('static', filename='js/main.js') }}\"></script>\r\n<script>\r\n    let selectedDuration = 0;\r\n    const hourlyRate = {{ slot.console.hourly_rate }};\r\n    let pricingTiers = [];\r\n\r\n    // Function to load time slots for a selected date\r\n    function loadTimeSlots(date) {\r\n        fetch(`/api/available-slots?console_id=${CONSOLE_ID}&date=${date}`)\r\n            .then(response => response.json())\r\n            .then(slots => {\r\n                const timeSlotsContainer = document.querySelector('.time-slots');\r\n                timeSlotsContainer.innerHTML = '';\r\n                \r\n                if (slots.length === 0) {\r\n                    timeSlotsContainer.innerHTML = '<div class=\"alert alert-info\">No slots available for this date.</div>';\r\n                    return;\r\n                }\r\n\r\n                slots.forEach(slotData => {\r\n                    const slotElement = document.createElement('div');\r\n                    slotElement.className = 'time-slot';\r\n                    slotElement.dataset.time = slotData.time;\r\n                    slotElement.innerHTML = `\r\n                        <div class=\"time-range\">${slotData.time}</div>\r\n                        <div class=\"slot-price\">₹${slotData.price}</div>\r\n                    `;\r\n                    slotElement.onclick = () => selectTimeSlot(slotElement);\r\n                    timeSlotsContainer.appendChild(slotElement);\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error('Error loading time slots:', error);\r\n                const timeSlotsContainer = document.querySelector('.time-slots');\r\n                timeSlotsContainer.innerHTML = '<div class=\"alert alert-danger\">Error loading time slots. Please try again.</div>';\r\n            });\r\n    }\r\n\r\n    // Function to select a time slot\r\n    function selectTimeSlot(slotElement) {\r\n        // Remove selected class from all slots\r\n        document.querySelectorAll('.time-slot').forEach(slot => {\r\n            slot.classList.remove('selected');\r\n        });\r\n        \r\n        // Add selected class to clicked slot\r\n        slotElement.classList.add('selected');\r\n        \r\n        // Get time from data attribute\r\n        const timeRange = slotElement.dataset.time;\r\n        // Update summary with selected date and time\r\n        const selectedDate = document.querySelector('.date-item.selected');\r\n        if (selectedDate) {\r\n            const dateText = selectedDate.textContent.trim();\r\n            document.getElementById('summary-date').textContent = dateText;\r\n            document.getElementById('form_selected_date').value = dateText;\r\n        }\r\n        document.getElementById('summary-time').textContent = timeRange;\r\n        document.getElementById('form_selected_time').value = timeRange;\r\n        // Update total amount\r\n        updateTotalAmount();\r\n        // Show step 2\r\n        document.querySelector('.booking-step[data-step=\"1\"]').style.display = 'none';\r\n        document.querySelector('.booking-step[data-step=\"2\"]').style.display = 'block';\r\n    }\r\n\r\n    // Function to update total amount\r\n    function updateTotalAmount() {\r\n        const people = parseInt(document.getElementById('number_of_people').value);\r\n        const rate = getRateForPeople(people);\r\n        document.getElementById('rate-per-person').textContent = `₹${rate}`;\r\n        const total = rate * people;\r\n        document.getElementById('people-display').textContent = people;\r\n        document.getElementById('total-amount-display').textContent = `₹${Math.round(total)}`;\r\n        document.getElementById('form_number_of_people').value = people;\r\n        \r\n        // Update summary\r\n        document.getElementById('summary-people').textContent = people;\r\n        document.getElementById('summary-total').textContent = `₹${Math.round(total)}`;\r\n    }\r\n\r\n    // Function to get rate based on number of people\r\n    function getRateForPeople(people) {\r\n        for (let i = 0; i < pricingTiers.length; i++) {\r\n            if (people <= pricingTiers[i].max_people) {\r\n                return pricingTiers[i].rate_per_person;\r\n            }\r\n        }\r\n        return hourlyRate;\r\n    }\r\n\r\n    // Add click handlers for date selection\r\n    document.querySelectorAll('.date-item').forEach(dateItem => {\r\n        dateItem.addEventListener('click', function() {\r\n            document.querySelectorAll('.date-item').forEach(item => item.classList.remove('selected'));\r\n            this.classList.add('selected');\r\n            const dateText = this.textContent.trim();\r\n            document.getElementById('summary-date').textContent = dateText;\r\n            document.getElementById('form_selected_date').value = dateText;\r\n            loadTimeSlots(dateText);\r\n        });\r\n    });\r\n\r\n    // Initialize total amount\r\n    updateTotalAmount();\r\n\r\n    // Add form submission handler\r\n    var bookingForm = document.getElementById('booking-form');\r\n    if (bookingForm) {\r\n        bookingForm.addEventListener('submit', function(e) {\r\n            e.preventDefault();\r\n            if (!document.querySelector('.date-item.selected')) {\r\n                alert('Please select a date');\r\n                return;\r\n            }\r\n            if (!document.querySelector('.time-slot.selected')) {\r\n                alert('Please select a time slot');\r\n                return;\r\n            }\r\n            if (!document.getElementById('terms').checked) {\r\n                alert('Please agree to the terms and conditions');\r\n                return;\r\n            }\r\n            this.submit();\r\n        });\r\n    }\r\n\r\n    // Load pricing tiers\r\n    fetch(`/console/${CONSOLE_ID}/pricing/json`)\r\n        .then(response => response.json())\r\n        .then(tiers => {\r\n            pricingTiers = tiers;\r\n            const tableBody = document.getElementById('pricing-tiers-body');\r\n            if (tiers.length > 0) {\r\n                tableBody.innerHTML = tiers.map(tier => `\r\n                    <tr>\r\n                        <td>${tier.max_people}</td>\r\n                        <td>₹${tier.rate_per_person}</td>\r\n                    </tr>\r\n                `).join('');\r\n            } else {\r\n                tableBody.innerHTML = '<tr><td colspan=\"2\">No pricing tiers available</td></tr>';\r\n            }\r\n            updateTotalAmount();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error loading pricing tiers:', error);\r\n            document.getElementById('pricing-tiers-body').innerHTML = '<tr><td colspan=\"2\">Error loading pricing tiers</td></tr>';\r\n        });\r\n</script>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/book_slot.html b/templates/book_slot.html
--- a/templates/book_slot.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/book_slot.html	(date 1750086331486)
@@ -1,145 +1,196 @@
 {% extends "base.html" %}
 {% block title %}Book Gaming Slot{% endblock %}
 {% block content %}
-<section class="booking-section" style="padding: 2rem 0;">
-    <div class="container" style="max-width: 600px;">
-        <div class="booking-steps" style="display: flex; justify-content: space-between; margin-bottom: 2rem;">
-            <div class="step active" data-step="1">
-                <div class="step-number">1</div>
-                <div class="step-label">Select Time</div>
-            </div>
-            <div class="step" data-step="2">
-                <div class="step-number">2</div>
-                <div class="step-label">Confirm</div>
-            </div>
-        </div>
-        <!-- Step 1: Date and Time Selection -->
-        <div class="booking-step" data-step="1">
-            <div class="card">
-                <h2>Select Date and Time</h2>
-                <div class="date-picker">
-                    <div class="date-grid">
-                        <!-- Debug print -->
-                        <div style="display: none;">Debug: {{ available_dates }}</div>
-                        <div style="display: none;">Debug: Slot console_id: {{ slot.console_id }}</div>
-                        <div style="display: none;">Debug: Selected date: {{ selected_date }}</div>
-                        {% if available_dates %}
-                            {% for date in available_dates %}
-                                <div class="date-item" data-date="{{ date }}">
-                                    {{ date }}
-                                </div>
-                            {% endfor %}
-                            {% else %}
-                            <div style="text-align: center; padding: 1rem; color: #666;">
-                                No available dates found. Please check back later.
-                            </div>
-                        {% endif %}
-                    </div>
-                </div>
-                <div class="time-slots">
-                    <!-- Time slots will be populated by JavaScript -->
-                </div>
-
-                <!-- Number of People Calculator -->
-                <div class="people-calculator" style="margin-top: 1rem; padding: 1rem; background: #f8f9fa; border-radius: 8px;">
-                    <h3 style="font-size: 1.1rem; margin-bottom: 1rem;">Number of People</h3>
-                    <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
-                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="decrementPeople()">-</button>
-                        <input type="number" id="number_of_people" name="number_of_people" value="1" min="1" max="10" class="form-control" style="width: 80px; text-align: center;" onchange="updateTotalAmount()">
-                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="incrementPeople()">+</button>
+<div class="booking-section">
+    <div class="container">
+        <div class="row">
+            <!-- Venue Details Column -->
+            <div class="col-md-4">
+                <div class="venue-details">
+                    <div class="venue-image">
+                        <img src="{{ url_for('static', filename='uploads/' + console.photo) }}" alt="{{ console.name }}" class="img-fluid rounded">
+                    </div>
+                    <div class="venue-info mt-3">
+                        <h3>{{ console.name }}</h3>
+                        <p class="text-muted">{{ console.console_type }}</p>
+                        <div class="amenities">
+                            <h5>Amenities</h5>
+                            <ul class="list-unstyled">
+                                {% if console.amenities %}
+                                    {% for amenity in console.amenities.split(',') %}
+                                        <li><i class="fas fa-check text-success"></i> {{ amenity.strip() }}</li>
+                                    {% endfor %}
+                                {% else %}
+                                    <li><i class="fas fa-check text-success"></i> Air Conditioning</li>
+                                    <li><i class="fas fa-check text-success"></i> High-Speed Internet</li>
+                                    <li><i class="fas fa-check text-success"></i> Comfortable Seating</li>
+                                {% endif %}
+                            </ul>
+                        </div>
+                        <div class="location mt-3">
+                            <h5>Location</h5>
+                            <p><i class="fas fa-map-marker-alt text-danger"></i> {{ console.address }}</p>
+                            <a href="https://www.google.com/maps/search/?api=1&query={{ console.latitude }},{{ console.longitude }}" 
+                               target="_blank" 
+                               class="btn btn-outline-primary btn-sm">
+                                <i class="fas fa-map"></i> View on Google Maps
+                            </a>
+                        </div>
+                        <div class="contact mt-3">
+                            <h5>Contact</h5>
+                            <p><i class="fas fa-phone text-primary"></i> {{ console.phone_number }}</p>
+                        </div>
                     </div>
-                    <div class="amount-breakdown" style="background: white; padding: 1rem; border-radius: 4px;">
-                        <div style="margin-bottom: 1rem;">
-                            <strong>Pricing Tiers:</strong>
-                            <table class="table table-sm" id="pricing-tiers-table">
-                                <thead><tr><th>Up to (people)</th><th>Rate/person (₹)</th></tr></thead>
-                                <tbody id="pricing-tiers-body">
-                                    <tr><td colspan="2">Loading...</td></tr>
-                                </tbody>
-                            </table>
-                        </div>
-                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
-                            <span>Rate (per person):</span>
-                            <span id="rate-per-person">₹{{ slot.console.hourly_rate }}</span>
-                        </div>
-                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
-                            <span>Number of People:</span>
-                            <span id="people-display">1</span>
+                </div>
+            </div>
+
+            <!-- Booking Form Column -->
+            <div class="col-md-8">
+                <div class="booking-steps">
+                    <div class="step active" id="step1">
+                        <h4>Step 1: Select Time</h4>
+                        <div class="date-picker">
+                            <input type="date" id="booking_date" class="form-control" min="{{ today }}">
                         </div>
-                        <div style="display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #dee2e6; padding-top: 0.5rem;">
-                            <span>Total Amount:</span>
-                            <span id="total-amount-display">₹0</span>
+                        <div class="time-slots mt-3" id="time_slots">
+                            <!-- Time slots will be populated by JavaScript -->
                         </div>
                     </div>
-                </div>
-            </div>
-        </div>
-        <!-- Step 2: Booking Confirmation -->
-        <div class="booking-step" data-step="2" style="display: none;">
-            <div class="card">
-                <h2>Confirm Your Booking</h2>
-                <form id="booking-form" method="POST" action="{{ url_for('book_slot', slot_id=slot.id) }}">
-                    <input type="hidden" name="number_of_people" id="form_number_of_people">
-                    <input type="hidden" name="selected_date" id="form_selected_date">
-                    <input type="hidden" name="selected_time" id="form_selected_time">
-                    
-                    {% if user %}
-                    <div class="user-details">
-                        <h3>Your Details</h3>
-                        <p><strong>Name:</strong> {{ user.username }}</p>
-                        <p><strong>Phone:</strong> {{ user.phone }}</p>
-                        <p><strong>Email:</strong> {{ user.email }}</p>
-                    </div>
-                    {% else %}
-                    <div class="alert alert-warning">
-                        Please <a href="{{ url_for('login') }}">login</a> to book a slot.
-                    </div>
-                    {% endif %}
-
-                    <div class="form-group">
-                        <label for="special_requests">Special Requests (Optional)</label>
-                        <textarea id="special_requests" name="special_requests" class="form-control" rows="3"></textarea>
-                    </div>
-
-                    <div class="booking-summary">
-                        <h3>Booking Summary</h3>
-                        <div class="summary-item">
-                            <span>Date:</span>
-                            <span id="summary-date"></span>
-                        </div>
-                        <div class="summary-item">
-                            <span>Time:</span>
-                            <span id="summary-time"></span>
-                        </div>
-                        <div class="summary-item">
-                            <span>Number of People:</span>
-                            <span id="summary-people"></span>
-                        </div>
-                        <div class="summary-item total">
-                            <span>Total Amount:</span>
-                            <span id="summary-total"></span>
-                        </div>
+
+                    <div class="step" id="step2">
+                        <h4>Step 2: Confirm Booking</h4>
+                        <form id="booking_form" method="POST" action="{{ url_for('book_slot', slot_id=slot.id) }}">
+                            <input type="hidden" name="selected_date" id="selected_date">
+                            <input type="hidden" name="selected_time" id="selected_time">
+                            
+                            <div class="form-group">
+                                <label>Number of People</label>
+                                <div class="people-counter">
+                                    <button type="button" class="btn btn-outline-secondary" onclick="decrementPeople()">-</button>
+                                    <input type="number" name="number_of_people" id="number_of_people" value="1" min="1" max="4" readonly>
+                                    <button type="button" class="btn btn-outline-secondary" onclick="incrementPeople()">+</button>
+                                </div>
+                            </div>
+
+                            <div class="form-group">
+                                <label>Special Requests (Optional)</label>
+                                <textarea name="special_requests" class="form-control" rows="3" placeholder="Any special requests or requirements?"></textarea>
+                            </div>
+
+                            <div class="form-group">
+                                <div class="form-check">
+                                    <input type="checkbox" class="form-check-input" id="terms" required>
+                                    <label class="form-check-label" for="terms">
+                                        I agree to the terms and conditions
+                                    </label>
+                                </div>
+                            </div>
+
+                            <button type="submit" class="btn btn-primary">Confirm Booking</button>
+                        </form>
                     </div>
-                    <div class="form-group" style="margin-top: 1.5rem;">
-                        <div class="form-check" style="display: flex; align-items: center; flex-direction: row-reverse; justify-content: flex-end;">
-                            <input type="checkbox" id="terms" name="terms" class="form-check-input" required style="margin-left: 0.5rem;">
-                            <label class="form-check-label" for="terms">I agree to the terms and conditions</label>
-                        </div>
-                    </div>
-                    <button type="submit" class="btn btn-primary" style="margin-top: 1.5rem; width: 100%;" {% if not user %}disabled{% endif %}>Confirm Booking</button>
-                </form>
-            </div>
-        </div>
-        <!-- Navigation Buttons -->
-        <div class="nav-buttons" style="display: flex; justify-content: space-between; margin-top: 1.5rem;">
-            <button class="btn btn-secondary nav-btn" data-action="prev" style="display: none;">Previous</button>
-            <button class="btn nav-btn" data-action="next">Next</button>
-        </div>
-    </div>
-</section>
-{% endblock %}
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+<style>
+.venue-details {
+    background: white;
+    border-radius: 10px;
+    padding: 20px;
+    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
+}
 
-{% block extra_scripts %}
+.venue-image {
+    position: relative;
+    overflow: hidden;
+    border-radius: 8px;
+}
+
+.venue-image img {
+    width: 100%;
+    height: 250px;
+    object-fit: cover;
+}
+
+.amenities ul li {
+    margin-bottom: 8px;
+}
+
+.amenities ul li i {
+    margin-right: 8px;
+}
+
+.location p {
+    margin-bottom: 10px;
+}
+
+.contact p {
+    margin-bottom: 5px;
+}
+
+.booking-steps {
+    background: white;
+    border-radius: 10px;
+    padding: 20px;
+    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
+}
+
+.step {
+    display: none;
+}
+
+.step.active {
+    display: block;
+}
+
+.people-counter {
+    display: flex;
+    align-items: center;
+    gap: 10px;
+}
+
+.people-counter input {
+    width: 60px;
+    text-align: center;
+}
+
+.time-slots {
+    display: grid;
+    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
+    gap: 10px;
+    margin-top: 15px;
+}
+
+.time-slot {
+    padding: 10px;
+    border: 1px solid #ddd;
+    border-radius: 5px;
+    text-align: center;
+    cursor: pointer;
+    transition: all 0.3s ease;
+}
+
+.time-slot:hover {
+    background: #f8f9fa;
+}
+
+.time-slot.selected {
+    background: #007bff;
+    color: white;
+    border-color: #007bff;
+}
+
+.time-slot.booked {
+    background: #dc3545;
+    color: white;
+    border-color: #dc3545;
+    cursor: not-allowed;
+}
+</style>
+
 <script>
   const CONSOLE_ID = {{ slot.console_id }};
 </script>
@@ -149,39 +200,46 @@
     const hourlyRate = {{ slot.console.hourly_rate }};
     let pricingTiers = [];
 
-    // Function to load time slots for a selected date
-    function loadTimeSlots(date) {
-        fetch(`/api/available-slots?console_id=${CONSOLE_ID}&date=${date}`)
-            .then(response => response.json())
-            .then(slots => {
-                const timeSlotsContainer = document.querySelector('.time-slots');
-                timeSlotsContainer.innerHTML = '';
-                
-                if (slots.length === 0) {
-                    timeSlotsContainer.innerHTML = '<div class="alert alert-info">No slots available for this date.</div>';
-                    return;
-                }
+    function incrementPeople() {
+        const input = document.getElementById('number_of_people');
+        if (input.value < 10) {
+            input.value = parseInt(input.value) + 1;
+            updateTotalAmount();
+        }
+    }
+
+    function decrementPeople() {
+        const input = document.getElementById('number_of_people');
+        if (input.value > 1) {
+            input.value = parseInt(input.value) - 1;
+            updateTotalAmount();
+        }
+    }
+
+    function updateTotalAmount() {
+        const people = parseInt(document.getElementById('number_of_people').value);
+        const rate = getRateForPeople(people);
+        document.getElementById('rate-per-person').textContent = `₹${rate}`;
+        const total = rate * people;
+        document.getElementById('people-display').textContent = people;
+        document.getElementById('total-amount-display').textContent = `₹${Math.round(total)}`;
+        document.getElementById('form_number_of_people').value = people;
+        
+        // Update summary
+        document.getElementById('summary-people').textContent = people;
+        document.getElementById('summary-total').textContent = `₹${Math.round(total)}`;
+    }
 
-                slots.forEach(slotData => {
-                    const slotElement = document.createElement('div');
-                    slotElement.className = 'time-slot';
-                    slotElement.dataset.time = slotData.time;
-                    slotElement.innerHTML = `
-                        <div class="time-range">${slotData.time}</div>
-                        <div class="slot-price">₹${slotData.price}</div>
-                    `;
-                    slotElement.onclick = () => selectTimeSlot(slotElement);
-                    timeSlotsContainer.appendChild(slotElement);
-                });
-            })
-            .catch(error => {
-                console.error('Error loading time slots:', error);
-                const timeSlotsContainer = document.querySelector('.time-slots');
-                timeSlotsContainer.innerHTML = '<div class="alert alert-danger">Error loading time slots. Please try again.</div>';
-            });
+    function getRateForPeople(people) {
+        for (let i = 0; i < pricingTiers.length; i++) {
+            if (people <= pricingTiers[i].max_people) {
+                return pricingTiers[i].rate_per_person;
+            }
+        }
+        return hourlyRate;
     }
 
-    // Function to select a time slot
+    // Update the existing time slot selection handler
     function selectTimeSlot(slotElement) {
         // Remove selected class from all slots
         document.querySelectorAll('.time-slot').forEach(slot => {
@@ -209,88 +267,103 @@
         document.querySelector('.booking-step[data-step="2"]').style.display = 'block';
     }
 
-    // Function to update total amount
-    function updateTotalAmount() {
-        const people = parseInt(document.getElementById('number_of_people').value);
-        const rate = getRateForPeople(people);
-        document.getElementById('rate-per-person').textContent = `₹${rate}`;
-        const total = rate * people;
-        document.getElementById('people-display').textContent = people;
-        document.getElementById('total-amount-display').textContent = `₹${Math.round(total)}`;
-        document.getElementById('form_number_of_people').value = people;
-        
-        // Update summary
-        document.getElementById('summary-people').textContent = people;
-        document.getElementById('summary-total').textContent = `₹${Math.round(total)}`;
-    }
-
-    // Function to get rate based on number of people
-    function getRateForPeople(people) {
-        for (let i = 0; i < pricingTiers.length; i++) {
-            if (people <= pricingTiers[i].max_people) {
-                return pricingTiers[i].rate_per_person;
-            }
-        }
-        return hourlyRate;
-    }
-
-    // Add click handlers for date selection
-    document.querySelectorAll('.date-item').forEach(dateItem => {
-        dateItem.addEventListener('click', function() {
-            document.querySelectorAll('.date-item').forEach(item => item.classList.remove('selected'));
-            this.classList.add('selected');
-            const dateText = this.textContent.trim();
-            document.getElementById('summary-date').textContent = dateText;
-            document.getElementById('form_selected_date').value = dateText;
-            loadTimeSlots(dateText);
-        });
-    });
-
-    // Initialize total amount
-    updateTotalAmount();
-
-    // Add form submission handler
-    var bookingForm = document.getElementById('booking-form');
-    if (bookingForm) {
-        bookingForm.addEventListener('submit', function(e) {
+    document.addEventListener('DOMContentLoaded', function() {
+        // Set initial values
+        const initialPeople = parseInt(document.getElementById('number_of_people').value);
+        document.getElementById('people-display').textContent = initialPeople;
+        document.getElementById('form_number_of_people').value = initialPeople;
+        // Add click handlers for date selection
+        document.querySelectorAll('.date-item').forEach(dateItem => {
+            dateItem.addEventListener('click', function() {
+                document.querySelectorAll('.date-item').forEach(item => item.classList.remove('selected'));
+                this.classList.add('selected');
+                // Update summary date when date is selected
+                const dateText = this.textContent.trim();
+                document.getElementById('summary-date').textContent = dateText;
+                document.getElementById('form_selected_date').value = dateText;
+            });
+        });
+        // Initialize total amount
+        updateTotalAmount();
+        // Add form submission handler
+        var bookingForm = document.getElementById('booking-form');
+        if (bookingForm) {
+            bookingForm.addEventListener('submit', function(e) {
             e.preventDefault();
-            if (!document.querySelector('.date-item.selected')) {
-                alert('Please select a date');
-                return;
-            }
-            if (!document.querySelector('.time-slot.selected')) {
-                alert('Please select a time slot');
-                return;
-            }
-            if (!document.getElementById('terms').checked) {
-                alert('Please agree to the terms and conditions');
-                return;
-            }
-            this.submit();
-        });
-    }
+                if (!document.querySelector('.date-item.selected')) {
+                    alert('Please select a date');
+                    return;
+                }
+                if (!document.querySelector('.time-slot.selected')) {
+                    alert('Please select a time slot');
+                    return;
+                }
+                if (!document.getElementById('terms').checked) {
+                    alert('Please agree to the terms and conditions');
+            return;
+        }
+                // Get selected date and time
+                const selectedDate = document.querySelector('.date-item.selected').textContent.trim();
+                const selectedTime = document.querySelector('.time-slot.selected').dataset.time;
+                // Update hidden fields
+                document.getElementById('form_selected_date').value = selectedDate;
+                document.getElementById('form_selected_time').value = selectedTime;
+                // Disable submit button and show loading state
+        const submitBtn = this.querySelector('button[type="submit"]');
+        submitBtn.disabled = true;
+                submitBtn.innerHTML = '<span class="loading"></span> Confirming...';
+                // Simulate processing
+                setTimeout(() => {
+                    this.submit();
+                }, 1000);
+            });
+        }
+        // Next button handler
+        const nextBtn = document.querySelector('.nav-btn[data-action="next"]');
+        if (nextBtn) {
+            nextBtn.addEventListener('click', function() {
+                const selectedDate = document.querySelector('.date-item.selected');
+                const selectedTime = document.querySelector('.time-slot.selected');
+                if (!selectedDate) {
+                    alert('Please select a date.');
+                    return;
+                }
+                if (!selectedTime) {
+                    alert('Please select a time slot.');
+                    return;
+                }
+                document.getElementById('summary-date').textContent = selectedDate.textContent.trim();
+                document.getElementById('summary-time').textContent = selectedTime.dataset.time;
+                document.querySelector('.booking-step[data-step="1"]').style.display = 'none';
+                document.querySelector('.booking-step[data-step="2"]').style.display = 'block';
+                document.querySelector('.nav-btn[data-action="prev"]').style.display = 'inline-block';
+                nextBtn.style.display = 'none';
+            });
+        }
+        // Previous button handler
+        const prevBtn = document.querySelector('.nav-btn[data-action="prev"]');
+        if (prevBtn) {
+            prevBtn.addEventListener('click', function() {
+                document.querySelector('.booking-step[data-step="2"]').style.display = 'none';
+                document.querySelector('.booking-step[data-step="1"]').style.display = 'block';
+                prevBtn.style.display = 'none';
+                nextBtn.style.display = 'inline-block';
+        });
+        }
 
-    // Load pricing tiers
-    fetch(`/console/${CONSOLE_ID}/pricing/json`)
-        .then(response => response.json())
-        .then(tiers => {
-            pricingTiers = tiers;
-            const tableBody = document.getElementById('pricing-tiers-body');
-            if (tiers.length > 0) {
-                tableBody.innerHTML = tiers.map(tier => `
-                    <tr>
-                        <td>${tier.max_people}</td>
-                        <td>₹${tier.rate_per_person}</td>
-                    </tr>
-                `).join('');
+        fetch(`/console/${CONSOLE_ID}/pricing/json`).then(r => r.json()).then(data => {
+            pricingTiers = data;
+            const tbody = document.getElementById('pricing-tiers-body');
+            if (pricingTiers.length === 0) {
+                tbody.innerHTML = '<tr><td colspan="2">No pricing tiers set. Default rate applies.</td></tr>';
             } else {
-                tableBody.innerHTML = '<tr><td colspan="2">No pricing tiers available</td></tr>';
+                tbody.innerHTML = '';
+                pricingTiers.forEach(tier => {
+                    tbody.innerHTML += `<tr><td>${tier.max_people}</td><td>₹${tier.rate_per_person}</td></tr>`;
+                });
             }
             updateTotalAmount();
-        })
-        .catch(error => {
-            console.error('Error loading pricing tiers:', error);
-            document.getElementById('pricing-tiers-body').innerHTML = '<tr><td colspan="2">Error loading pricing tiers</td></tr>';
         });
+    });
 </script>
 {% endblock %}
Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport logging\r\nfrom flask import Flask, request, redirect, url_for, flash, render_template\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom sqlalchemy.orm import DeclarativeBase\r\nfrom werkzeug.middleware.proxy_fix import ProxyFix\r\nfrom werkzeug.security import generate_password_hash\r\nfrom flask_migrate import Migrate\r\n\r\n# Configure logging\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n\r\nclass Base(DeclarativeBase):\r\n    pass\r\n\r\n\r\ndb = SQLAlchemy(model_class=Base)\r\n\r\n# Create the app\r\napp = Flask(__name__)\r\napp.secret_key = os.environ.get(\"SESSION_SECRET\", \"dev-secret-key-change-in-production\")\r\napp.wsgi_app = ProxyFix(app.wsgi_app, x_proto=1, x_host=1)\r\n\r\n# Configure the database\r\napp.config[\"SQLALCHEMY_DATABASE_URI\"] = os.environ.get(\"DATABASE_URL\", \"sqlite:///gaming_center.db\")\r\napp.config[\"SQLALCHEMY_ENGINE_OPTIONS\"] = {\r\n    \"pool_recycle\": 300,\r\n    \"pool_pre_ping\": True,\r\n}\r\napp.config[\"SQLALCHEMY_TRACK_MODIFICATIONS\"] = False\r\n\r\n# Initialize the app with the extension\r\ndb.init_app(app)\r\n\r\nmigrate = Migrate(app, db)\r\n\r\nwith app.app_context():\r\n    # Import models to ensure tables are created\r\n    from models import Owner, Console, TimeSlot, User\r\n    import routes\r\n\r\n    # Create all tables\r\n    db.create_all()\r\n\r\n    # Add some default data if tables are empty\r\n    if Owner.query.count() == 0:\r\n        logging.info(\"Creating default admin user...\")\r\n        admin = Owner(\r\n            username=\"admin\",\r\n            email=\"admin@gamingcenter.com\",\r\n            password_hash=generate_password_hash(\"admin123\"),\r\n            phone=\"9876543210\",\r\n            gaming_center_name=\"Demo Gaming Center\",\r\n            address=\"123 Gaming Street, Tech City, TC 12345\"\r\n        )\r\n        db.session.add(admin)\r\n        db.session.commit()\r\n        logging.info(\"Default admin user created (username: admin, password: admin123)\")\r\n\r\n@app.route('/register', methods=['GET', 'POST'])\r\ndef user_signup():\r\n    if request.method == 'POST':\r\n        username = request.form.get('username', '')  # Default to empty string if missing\r\n        email = request.form.get('email', '')\r\n        password = request.form.get('password', '')\r\n        confirm_password = request.form.get('confirm_password', '')\r\n        phone = request.form.get('phone', '')\r\n        role = request.form.get('role', 'user')\r\n        \r\n        if not all([username, email, password, confirm_password, phone]):\r\n            flash('All fields are required', 'danger')\r\n            return redirect(url_for('user_signup'))\r\n        \r\n        if password != confirm_password:\r\n            flash('Passwords do not match', 'danger')\r\n            return redirect(url_for('user_signup'))\r\n        \r\n        if User.query.filter_by(email=email).first():\r\n            flash('Email already registered', 'danger')\r\n            return redirect(url_for('user_signup'))\r\n        \r\n        hashed_password = generate_password_hash(password)\r\n        new_user = User(username=username, email=email, password=hashed_password, phone=phone, role=role)\r\n        db.session.add(new_user)\r\n        db.session.commit()\r\n        \r\n        flash('Registration successful! Please login.', 'success')\r\n        return redirect(url_for('login'))\r\n    \r\n    return render_template('register.html')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/app.py	(date 1750093725248)
@@ -1,11 +1,12 @@
 import os
 import logging
-from flask import Flask, request, redirect, url_for, flash, render_template
+from flask import Flask, request, redirect, url_for, flash, render_template, session
 from flask_sqlalchemy import SQLAlchemy
 from sqlalchemy.orm import DeclarativeBase
 from werkzeug.middleware.proxy_fix import ProxyFix
-from werkzeug.security import generate_password_hash
+from werkzeug.security import generate_password_hash, check_password_hash
 from flask_migrate import Migrate
+from flask_login import LoginManager, login_user, logout_user, login_required, current_user
 
 # Configure logging
 logging.basicConfig(level=logging.DEBUG)
@@ -16,6 +17,7 @@
 
 
 db = SQLAlchemy(model_class=Base)
+login_manager = LoginManager()
 
 # Create the app
 app = Flask(__name__)
@@ -32,13 +34,31 @@
 
 # Initialize the app with the extension
 db.init_app(app)
+login_manager.init_app(app)
+login_manager.login_view = 'login'
 
 migrate = Migrate(app, db)
 
+
+@login_manager.user_loader
+def load_user(user_id):
+    if not user_id:
+        return None
+    try:
+        if session.get('user_type') == 'owner':
+            from models import Owner
+            return Owner.query.get(int(user_id))
+        else:
+            from models import User
+            return User.query.get(int(user_id))
+    except (ValueError, TypeError):
+        return None
+
+
+# Initialize app context and create tables
 with app.app_context():
     # Import models to ensure tables are created
     from models import Owner, Console, TimeSlot, User
-    import routes
 
     # Create all tables
     db.create_all()
@@ -51,41 +71,136 @@
             email="admin@gamingcenter.com",
             password_hash=generate_password_hash("admin123"),
             phone="9876543210",
-            gaming_center_name="Demo Gaming Center",
+            gaming_center_name="Default Gaming Center",
             address="123 Gaming Street, Tech City, TC 12345"
         )
         db.session.add(admin)
         db.session.commit()
         logging.info("Default admin user created (username: admin, password: admin123)")
 
+
+@app.route('/login', methods=['GET', 'POST'])
+def login():
+    if request.method == 'POST':
+        username = request.form.get('username')
+        password = request.form.get('password')
+        user_type = request.form.get('user_type', 'user')
+
+        if user_type == 'owner':
+            from models import Owner
+            user = Owner.query.filter_by(username=username).first()
+        else:
+            from models import User
+            user = User.query.filter_by(username=username).first()
+
+        if user and user.check_password(password):
+            login_user(user)
+            session['user_type'] = user_type
+            flash('Login successful!', 'success')
+            return redirect(url_for('dashboard'))
+        else:
+            flash('Invalid username or password', 'danger')
+
+    return render_template('login.html')
+
+
 @app.route('/register', methods=['GET', 'POST'])
 def user_signup():
     if request.method == 'POST':
-        username = request.form.get('username', '')  # Default to empty string if missing
+        username = request.form.get('username', '')
         email = request.form.get('email', '')
         password = request.form.get('password', '')
         confirm_password = request.form.get('confirm_password', '')
         phone = request.form.get('phone', '')
         role = request.form.get('role', 'user')
-        
+
         if not all([username, email, password, confirm_password, phone]):
             flash('All fields are required', 'danger')
             return redirect(url_for('user_signup'))
-        
+
         if password != confirm_password:
             flash('Passwords do not match', 'danger')
             return redirect(url_for('user_signup'))
-        
+
+        from models import User
         if User.query.filter_by(email=email).first():
             flash('Email already registered', 'danger')
             return redirect(url_for('user_signup'))
-        
-        hashed_password = generate_password_hash(password)
-        new_user = User(username=username, email=email, password=hashed_password, phone=phone, role=role)
+
+        new_user = User(
+            username=username,
+            email=email,
+            phone=phone,
+            full_name=username  # Using username as full_name for now
+        )
+        new_user.set_password(password)
         db.session.add(new_user)
         db.session.commit()
-        
+
         flash('Registration successful! Please login.', 'success')
         return redirect(url_for('login'))
-    
+
     return render_template('register.html')
+
+
+@app.route('/')
+def index():
+    return render_template('index.html')
+
+
+@app.route('/dashboard')
+@login_required
+def dashboard():
+    if session.get('user_type') == 'owner':
+        from models import Console, TimeSlot
+        owner = current_user
+        consoles = Console.query.filter_by(owner_id=owner.id).all()
+
+        # Calculate statistics
+        total_slots = 0
+        booked_slots = 0
+        total_revenue = 0
+
+        for console in consoles:
+            slots = TimeSlot.query.filter_by(console_id=console.id).all()
+            total_slots += len(slots)
+            for slot in slots:
+                if slot.is_booked:
+                    booked_slots += 1
+                    total_revenue += slot.total_amount
+
+        stats = {
+            'total_consoles': len(consoles),
+            'total_slots': total_slots,
+            'booked_slots': booked_slots,
+            'total_revenue': total_revenue,
+            'booking_rate': (booked_slots / total_slots * 100) if total_slots > 0 else 0
+        }
+
+        return render_template('dashboard.html', owner=owner, consoles=consoles, stats=stats)
+    else:
+        # User dashboard
+        from models import TimeSlot, UserCoinBalance
+        user = current_user
+        bookings = TimeSlot.query.filter_by(user_id=user.id).order_by(TimeSlot.start_time.desc()).all()
+        coin_balances = UserCoinBalance.query.filter_by(user_id=user.id).all()
+
+        from datetime import datetime
+        return render_template('user_dashboard.html', user=user, bookings=bookings,
+                               coin_balances=coin_balances, now=datetime.now())
+
+
+@app.route('/logout')
+@login_required
+def logout():
+    logout_user()
+    session.clear()
+    flash('You have been logged out.', 'info')
+    return redirect(url_for('login'))
+
+
+# Import routes after app setup to avoid circular imports
+from routes import *
+
+if __name__ == '__main__':
+    app.run(debug=True)
\ No newline at end of file
Index: templates/console_details.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Console Details - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"console-details\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 900px;\">\r\n        <div class=\"card\" style=\"margin-bottom: 2rem;\">\r\n            <div style=\"display: flex; flex-wrap: wrap; justify-content: space-between; align-items: flex-start; gap: 2rem;\">\r\n                <div style=\"flex: 2; min-width: 260px;\">\r\n                    <h2 style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">Console Information</h2>\r\n                    <div style=\"margin-bottom: 0.5rem; color: var(--success); font-weight: 500;\">\r\n                        {% if console.is_available %}✔Available{% else %}Unavailable{% endif %}\r\n                    </div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-gamepad\"></i> {{ console.name }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><strong>Type:</strong> {{ console.console_type }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-rupee-sign\"></i> Hourly Rate ₹{{ console.hourly_rate }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-calendar-alt\"></i> Added On {{ console.created_at.strftime('%d %B %Y') }}</div>\r\n                </div>\r\n                <div style=\"flex: 1; min-width: 220px;\">\r\n                    <h3 style=\"font-size: 1.1rem; font-weight: 600; margin-bottom: 1rem; color: var(--primary);\">Quick Stats</h3>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-clock\"></i> Total Slots: {{ slots|length }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-check-circle\" style=\"color: var(--success);\"></i> Available: {{ slots|rejectattr('is_booked')|list|length }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-lock\" style=\"color: var(--danger);\"></i> Booked: {{ slots|selectattr('is_booked')|list|length }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-rupee-sign\"></i> Revenue: ₹{{ slots|selectattr('is_booked')|sum(attribute='total_amount') or 0 }}</div>\r\n                    <div style=\"margin-bottom: 0.5rem;\"><i class=\"fas fa-percent\"></i> Booking Rate: {{ \"%.1f\"|format((slots|selectattr('is_booked')|list|length / slots|length * 100) if slots else 0) }}%</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Add Slot Buttons -->\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body d-flex justify-content-between align-items-center\">\r\n                <a href=\"{{ url_for('add_slot', console_id=console.id) }}\" class=\"btn btn-success\">\r\n                    <i class=\"fas fa-plus me-2\"></i>Add Single Slot\r\n                </a>\r\n                <a href=\"{{ url_for('auto_slots', console_id=console.id) }}\" class=\"btn btn-success\">\r\n                    <i class=\"fas fa-magic me-2\"></i>Auto Generate Slots\r\n                </a>\r\n                <a href=\"{{ url_for('manage_pricing', console_id=console.id) }}\" class=\"btn btn-warning\">\r\n                    <i class=\"fas fa-rupee-sign\"></i> Manage Pricing\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\" style=\"margin-bottom: 2rem;\">\r\n            <div style=\"display: flex; align-items: center; gap: 1.5rem; margin-bottom: 1.5rem; flex-wrap: wrap;\">\r\n                <h3 style=\"font-size: 1.2rem; font-weight: 600; margin: 0; color: var(--primary);\"><i class=\"fas fa-clock\"></i> Time Slots</h3>\r\n                <div style=\"display: flex; gap: 0.5rem;\">\r\n                    <form method=\"get\" style=\"display: flex; gap: 0.5rem;\">\r\n                        <button type=\"submit\" name=\"filter\" value=\"all\" class=\"btn btn-secondary\" {% if filter == 'all' %}style=\"background: var(--accent); color: #fff;\"{% endif %}>All</button>\r\n                        <button type=\"submit\" name=\"filter\" value=\"available\" class=\"btn btn-secondary\" {% if filter == 'available' %}style=\"background: var(--accent); color: #fff;\"{% endif %}>Available</button>\r\n                        <button type=\"submit\" name=\"filter\" value=\"booked\" class=\"btn btn-secondary\" {% if filter == 'booked' %}style=\"background: var(--accent); color: #fff;\"{% endif %}>Booked</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div style=\"display: flex; flex-direction: column; gap: 1.5rem;\">\r\n                <div class=\"slots-container\">\r\n                    <h3>Available Slots</h3>\r\n                    <div class=\"slots-grid\">\r\n                        {% for slot in slots %}\r\n                        <div class=\"slot-card {% if slot.is_booked %}booked{% elif slot.is_blocked %}blocked{% endif %}\">\r\n                            <div class=\"slot-time\">\r\n                                {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}\r\n                            </div>\r\n                            <div class=\"slot-date\">\r\n                                {{ slot.start_time.strftime('%d %b %Y') }}\r\n                            </div>\r\n                            <div class=\"slot-status\">\r\n                                {% if slot.is_booked %}\r\n                                    <span class=\"badge bg-danger\">Booked</span>\r\n                                    {% if slot.booking_type == 'walkin' %}\r\n                                        <span class=\"badge bg-info\">Walk-in</span>\r\n                                    {% endif %}\r\n                                {% elif slot.is_blocked %}\r\n                                    <span class=\"badge bg-warning\">Blocked</span>\r\n                                {% else %}\r\n                                    <span class=\"badge bg-success\">Available</span>\r\n                                {% endif %}\r\n                            </div>\r\n                            {% if slot.is_booked %}\r\n                                <div class=\"booking-details\">\r\n                                    <p><strong>People:</strong> {{ slot.number_of_people }}</p>\r\n                                    {% if slot.special_requests %}\r\n                                        <p><strong>Special Requests:</strong> {{ slot.special_requests }}</p>\r\n                                    {% endif %}\r\n                                </div>\r\n                            {% endif %}\r\n                            <div class=\"slot-actions\">\r\n                                {% if not slot.is_booked %}\r\n                                    {% if slot.is_blocked %}\r\n                                        <form action=\"{{ url_for('unblock_slot', slot_id=slot.id) }}\" method=\"POST\" style=\"display: inline;\">\r\n                                            <button type=\"submit\" class=\"btn btn-warning btn-sm\">Unblock</button>\r\n                                        </form>\r\n                                    {% else %}\r\n                                        <form action=\"{{ url_for('block_slot', slot_id=slot.id) }}\" method=\"POST\" style=\"display: inline;\">\r\n                                            <button type=\"submit\" class=\"btn btn-warning btn-sm\">Block</button>\r\n                                        </form>\r\n                                    {% endif %}\r\n                                {% endif %}\r\n                                {% if slot.is_booked and not slot.completed %}\r\n                                    <button class=\"btn btn-primary btn-sm\" onclick=\"toggleCalculator({{ slot.id }})\" id=\"calc_btn_{{ slot.id }}\">\r\n                                        <i class=\"fas fa-calculator\"></i> Calculator\r\n                                    </button>\r\n                                {% endif %}\r\n                            </div>\r\n\r\n                            <!-- Calculator Section for Booked Slots -->\r\n                            {% if slot.is_booked and not slot.completed %}\r\n                            <div class=\"calculator-section\" id=\"calculator_{{ slot.id }}\" style=\"display: none; margin-top: 1rem; padding: 1rem; background: white; border-radius: 8px;\">\r\n                                <h4 style=\"margin-bottom: 1rem; font-size: 1rem;\">Amount Calculator</h4>\r\n                                <div style=\"margin-bottom: 0.5rem;\">\r\n                                    <strong>Booking Duration:</strong> {{ ((slot.end_time - slot.start_time).total_seconds() / 3600)|round(2) }} hours\r\n                                </div>\r\n                                <form method=\"POST\" action=\"{{ url_for('settle_slot', slot_id=slot.id) }}\" class=\"calculator-form\" id=\"calculator_form_{{ slot.id }}\">\r\n                                    <div id=\"snacks_list_{{ slot.id }}\"></div>\r\n                                    <input type=\"hidden\" name=\"snacks_amount\" id=\"snacks_amount_{{ slot.id }}\" value=\"0\">\r\n                                    <input type=\"hidden\" name=\"snacks_json\" id=\"snacks_json_{{ slot.id }}\">\r\n                                    <div style=\"background: #f8f9fa; padding: 0.5rem; border-radius: 4px; margin-bottom: 0.5rem;\">\r\n                                        <div style=\"display: flex; justify-content: space-between; margin-bottom: 0.3rem;\">\r\n                                            <span>Base Amount:</span>\r\n                                            <span>₹{{ slot.total_amount or 0 }}</span>\r\n                                        </div>\r\n                                        <div style=\"display: flex; justify-content: space-between; margin-bottom: 0.3rem;\">\r\n                                            <span>Snacks:</span>\r\n                                            <span id=\"snacks_total_{{ slot.id }}\">₹0.00</span>\r\n                                        </div>\r\n                                        <div style=\"display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #dee2e6; padding-top: 0.3rem;\">\r\n                                            <span>Final Amount:</span>\r\n                                            <span id=\"final_total_{{ slot.id }}\">₹{{ slot.total_amount or 0 }}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <input type=\"hidden\" name=\"final_amount\" id=\"final_amount_{{ slot.id }}\" value=\"{{ slot.total_amount or 0 }}\">\r\n                                    <button type=\"submit\" class=\"btn btn-success btn-sm\" style=\"width: 100%;\">\r\n                                        <i class=\"fas fa-check\"></i> Complete Booking\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                            {% endif %}\r\n                        </div>\r\n                        {% endfor %}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<style>\r\n.slots-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 1rem;\r\n    margin-top: 1rem;\r\n}\r\n\r\n.slot-card {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    background: white;\r\n}\r\n\r\n.slot-card.booked {\r\n    background: #fff5f5;\r\n    border-color: #feb2b2;\r\n}\r\n\r\n.slot-card.blocked {\r\n    background: #fffaf0;\r\n    border-color: #fbd38d;\r\n}\r\n\r\n.slot-time {\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.slot-date {\r\n    color: #666;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.slot-status {\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-details {\r\n    margin-top: 0.5rem;\r\n    padding-top: 0.5rem;\r\n    border-top: 1px solid #eee;\r\n}\r\n\r\n.slot-actions {\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    gap: 0.5rem;\r\n}\r\n\r\n.badge {\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    font-size: 0.875rem;\r\n    margin-right: 0.25rem;\r\n}\r\n</style>\r\n\r\n<script>\r\nlet snackMasterList = {};\r\nfetch('/owner/snacks/json').then(r => r.json()).then(data => {\r\n    snackMasterList = {};\r\n    data.forEach(function(snack) { snackMasterList[snack.name] = snack.rate; });\r\n    // Render snacks for all open calculators\r\n    {% for slot in slots %}\r\n    if (document.getElementById('calculator_{{ slot.id }}')) {\r\n        renderAllSnacks({{ slot.id }});\r\n    }\r\n    {% endfor %}\r\n});\r\nfunction renderAllSnacks(slotId) {\r\n    const snacks = window[`snacks_${slotId}`] || [];\r\n    let html = '<table class=\"table\"><thead><tr><th>Name</th><th>Rate</th><th>Qty</th><th>Total</th></tr></thead><tbody>';\r\n    let snacksTotal = 0;\r\n    Object.keys(snackMasterList).forEach(function(name) {\r\n        const rate = snackMasterList[name];\r\n        let qty = 0;\r\n        const existing = snacks.find(function(s) { return s.name === name; });\r\n        if (existing) qty = existing.qty;\r\n        const total = rate * qty;\r\n        snacksTotal += total;\r\n        // Use single quotes inside the onchange attribute and escape any single quotes in the name\r\n        const safeName = name.replace(/'/g, \"\\\\'\");\r\n        html += `<tr><td>${name}</td><td>₹${rate}</td><td><input type=\\\"number\\\" min=\\\"0\\\" value=\\\"${qty}\\\" style=\\\"width:100px; font-size:1.2em; padding:0.4em;\\\" onchange=\\\"setSnackQty(${slotId},'${safeName}',this.value)\\\"></td><td>₹${total.toFixed(2)}</td></tr>`;\r\n    });\r\n    html += '</tbody></table>';\r\n    document.getElementById(`snacks_list_${slotId}`).innerHTML = html;\r\n    document.getElementById(`snacks_total_${slotId}`).textContent = `₹${snacksTotal.toFixed(2)}`;\r\n    document.getElementById(`snacks_amount_${slotId}`).value = snacksTotal.toFixed(2);\r\n    // Update final amount\r\n    const calcSection = document.getElementById(`calculator_${slotId}`);\r\n    const base = parseFloat(calcSection.getAttribute('data-base-amount')) || 0;\r\n    const final = base + snacksTotal;\r\n    document.getElementById(`final_total_${slotId}`).textContent = `₹${final.toFixed(2)}`;\r\n    document.getElementById(`final_amount_${slotId}`).value = final.toFixed(2);\r\n    // Save snacks array\r\n    window[`snacks_${slotId}`] = Object.keys(snackMasterList).map(function(name) {\r\n        const rate = snackMasterList[name];\r\n        const qty = parseInt(document.querySelector(`#snacks_list_${slotId} input[type=number][onchange*='${name.replace(/'/g, \"\\\\'\") }']`).value) || 0;\r\n        return { name: name, rate: rate, qty: qty };\r\n    }).filter(s => s.qty > 0);\r\n}\r\nfunction setSnackQty(slotId, name, qty) {\r\n    let snacks = window[`snacks_${slotId}`] || [];\r\n    qty = parseInt(qty) || 0;\r\n    const idx = snacks.findIndex(function(s) { return s.name === name; });\r\n    if (idx >= 0) {\r\n        snacks[idx].qty = qty;\r\n    } else if (qty > 0) {\r\n        snacks.push({ name: name, rate: snackMasterList[name], qty: qty });\r\n    }\r\n    window[`snacks_${slotId}`] = snacks;\r\n    renderAllSnacks(slotId);\r\n}\r\nfunction prepareSnacksData(slotId) {\r\n    const snacks = window[`snacks_${slotId}`] || [];\r\n    document.getElementById(`snacks_json_${slotId}`).value = JSON.stringify(snacks);\r\n    return true;\r\n}\r\nfunction toggleCalculator(slotId) {\r\n    const calculator = document.getElementById(`calculator_${slotId}`);\r\n    const button = document.getElementById(`calc_btn_${slotId}`);\r\n    \r\n    if (calculator.style.display === 'none') {\r\n        calculator.style.display = 'block';\r\n        button.innerHTML = '<i class=\"fas fa-times\"></i> Close';\r\n        loadSnacks(slotId);\r\n    } else {\r\n        calculator.style.display = 'none';\r\n        button.innerHTML = '<i class=\"fas fa-calculator\"></i> Calculator';\r\n    }\r\n}\r\nfunction loadSnacks(slotId) {\r\n    fetch('/owner/snacks/json')\r\n        .then(response => response.json())\r\n        .then(snacks => {\r\n            const container = document.getElementById(`snacks_list_${slotId}`);\r\n            container.innerHTML = '';\r\n            \r\n            snacks.forEach(snack => {\r\n                const div = document.createElement('div');\r\n                div.className = 'snack-item';\r\n                div.style.marginBottom = '0.5rem';\r\n                div.innerHTML = `\r\n                    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\r\n                        <div>\r\n                            <strong>${snack.name}</strong>\r\n                            <div style=\"font-size: 0.9rem; color: #666;\">₹${snack.rate} each</div>\r\n                        </div>\r\n                        <div style=\"display: flex; align-items: center; gap: 0.5rem;\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"decrementSnack(${slotId}, '${snack.name}', ${snack.rate})\">-</button>\r\n                            <span id=\"snack_count_${slotId}_${snack.name}\">0</span>\r\n                            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"incrementSnack(${slotId}, '${snack.name}', ${snack.rate})\">+</button>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n                container.appendChild(div);\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.error('Error loading snacks:', error);\r\n            document.getElementById(`snacks_list_${slotId}`).innerHTML = \r\n                '<div class=\"alert alert-danger\">Error loading snacks. Please try again.</div>';\r\n        });\r\n}\r\nfunction incrementSnack(slotId, name, rate) {\r\n    const countElement = document.getElementById(`snack_count_${slotId}_${name}`);\r\n    const currentCount = parseInt(countElement.textContent);\r\n    countElement.textContent = currentCount + 1;\r\n    updateTotals(slotId);\r\n}\r\nfunction decrementSnack(slotId, name, rate) {\r\n    const countElement = document.getElementById(`snack_count_${slotId}_${name}`);\r\n    const currentCount = parseInt(countElement.textContent);\r\n    if (currentCount > 0) {\r\n        countElement.textContent = currentCount - 1;\r\n        updateTotals(slotId);\r\n    }\r\n}\r\nfunction updateTotals(slotId) {\r\n    let snacksTotal = 0;\r\n    const snacks = [];\r\n    \r\n    // Get all snack items\r\n    const snackItems = document.querySelectorAll(`#snacks_list_${slotId} .snack-item`);\r\n    snackItems.forEach(item => {\r\n        const name = item.querySelector('strong').textContent;\r\n        const rate = parseFloat(item.querySelector('div:nth-child(2)').textContent.replace('₹', ''));\r\n        const count = parseInt(item.querySelector(`#snack_count_${slotId}_${name}`).textContent);\r\n        \r\n        if (count > 0) {\r\n            const amount = count * rate;\r\n            snacksTotal += amount;\r\n            snacks.push({ name, count, rate, amount });\r\n        }\r\n    });\r\n    \r\n    // Update displays\r\n    document.getElementById(`snacks_total_${slotId}`).textContent = `₹${snacksTotal.toFixed(2)}`;\r\n    const baseAmount = parseFloat(document.getElementById(`final_amount_${slotId}`).value);\r\n    const finalTotal = baseAmount + snacksTotal;\r\n    document.getElementById(`final_total_${slotId}`).textContent = `₹${finalTotal.toFixed(2)}`;\r\n    \r\n    // Update hidden inputs\r\n    document.getElementById(`snacks_amount_${slotId}`).value = snacksTotal;\r\n    document.getElementById(`snacks_json_${slotId}`).value = JSON.stringify(snacks);\r\n}\r\nfunction checkConfirmPaymentTime() {\r\n    const now = new Date();\r\n    document.querySelectorAll('[data-end-time]').forEach(slot => {\r\n        const endTime = new Date(slot.dataset.endTime);\r\n        const tenMinutesBefore = new Date(endTime.getTime() - 10 * 60000); // 10 minutes before\r\n        const confirmBtn = document.getElementById(`confirm_payment_btn_${slot.dataset.slotId}`);\r\n        if (confirmBtn && now >= tenMinutesBefore) {\r\n            confirmBtn.style.display = 'block';\r\n            confirmBtn.disabled = false;\r\n            confirmBtn.title = 'Confirm payment received';\r\n        } else if (confirmBtn) {\r\n            confirmBtn.style.display = 'none';\r\n            confirmBtn.disabled = true;\r\n            confirmBtn.title = 'Confirmation will be available 10 minutes before slot ends';\r\n        }\r\n    });\r\n}\r\n// Check immediately and then every minute\r\ncheckConfirmPaymentTime();\r\nsetInterval(checkConfirmPaymentTime, 60000);\r\n</script>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/console_details.html b/templates/console_details.html
--- a/templates/console_details.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/console_details.html	(date 1750083522935)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Console Details - Vennuez{% endblock %}
+{% block title %}Console Details - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="console-details" style="padding: 2rem 0;">
@@ -22,7 +22,8 @@
                     <div style="margin-bottom: 0.5rem;"><i class="fas fa-clock"></i> Total Slots: {{ slots|length }}</div>
                     <div style="margin-bottom: 0.5rem;"><i class="fas fa-check-circle" style="color: var(--success);"></i> Available: {{ slots|rejectattr('is_booked')|list|length }}</div>
                     <div style="margin-bottom: 0.5rem;"><i class="fas fa-lock" style="color: var(--danger);"></i> Booked: {{ slots|selectattr('is_booked')|list|length }}</div>
-                    <div style="margin-bottom: 0.5rem;"><i class="fas fa-rupee-sign"></i> Revenue: ₹{{ slots|selectattr('is_booked')|sum(attribute='total_amount') or 0 }}</div>
+                    <div style="margin-bottom: 0.5rem;"><i class="fas fa-rupee-sign"></i> Revenue: ₹{{ "%.0f"|format(slots|selectattr('is_booked')|sum(attribute='total_amount') or 0) }}</div>
+                    <div style="margin-bottom: 0.5rem;"><i class="fas fa-rupee-sign"></i> Advance: ₹{{ "%.0f"|format(slots|selectattr('is_booked')|sum(attribute='advance_paid') or 0) }}</div>
                     <div style="margin-bottom: 0.5rem;"><i class="fas fa-percent"></i> Booking Rate: {{ "%.1f"|format((slots|selectattr('is_booked')|list|length / slots|length * 100) if slots else 0) }}%</div>
                 </div>
             </div>
@@ -31,7 +32,7 @@
         <!-- Add Slot Buttons -->
         <div class="card mb-4">
             <div class="card-body d-flex justify-content-between align-items-center">
-                <a href="{{ url_for('add_slot', console_id=console.id) }}" class="btn btn-success">
+                <a href="{{ url_for('add_slot', console_id=console.id) }}" class="btn btn-primary">
                     <i class="fas fa-plus me-2"></i>Add Single Slot
                 </a>
                 <a href="{{ url_for('auto_slots', console_id=console.id) }}" class="btn btn-success">
@@ -55,157 +56,93 @@
                 </div>
             </div>
             <div style="display: flex; flex-direction: column; gap: 1.5rem;">
-                <div class="slots-container">
-                    <h3>Available Slots</h3>
-                    <div class="slots-grid">
-                        {% for slot in slots %}
-                        <div class="slot-card {% if slot.is_booked %}booked{% elif slot.is_blocked %}blocked{% endif %}">
-                            <div class="slot-time">
-                                {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}
-                            </div>
-                            <div class="slot-date">
-                                {{ slot.start_time.strftime('%d %b %Y') }}
-                            </div>
-                            <div class="slot-status">
-                                {% if slot.is_booked %}
-                                    <span class="badge bg-danger">Booked</span>
-                                    {% if slot.booking_type == 'walkin' %}
-                                        <span class="badge bg-info">Walk-in</span>
-                                    {% endif %}
-                                {% elif slot.is_blocked %}
-                                    <span class="badge bg-warning">Blocked</span>
-                                {% else %}
-                                    <span class="badge bg-success">Available</span>
-                                {% endif %}
-                            </div>
+                {% for slot in slots %}
+                <div class="card" style="background: var(--muted); padding: 1rem; margin: 0;" data-slot-id="{{ slot.id }}" data-end-time="{{ slot.end_time.isoformat() }}">
+                    <div style="display: flex; flex-wrap: wrap; align-items: center; gap: 2rem; justify-content: space-between;">
+                        <div style="flex: 2; min-width: 200px;">
+                            <div style="margin-bottom: 0.3rem;"><i class="fas fa-calendar-alt"></i> {{ slot.start_time.strftime('%d %b %Y') }}</div>
+                            <div style="margin-bottom: 0.3rem; color: var(--success);">{% if not slot.is_booked %}✔Available{% else %}Booked{% endif %}</div>
+                            <div style="margin-bottom: 0.3rem;"><i class="fas fa-clock"></i> {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}</div>
+                            <div style="margin-bottom: 0.3rem;"><i class="fas fa-hourglass-half"></i> {{ ((slot.end_time - slot.start_time).total_seconds() / 3600)|int }} hours</div>
+                            <div style="margin-bottom: 0.3rem;"><i class="fas fa-rupee-sign"></i> Base Amount: ₹{{ slot.total_amount }}</div>
                             {% if slot.is_booked %}
-                                <div class="booking-details">
-                                    <p><strong>People:</strong> {{ slot.number_of_people }}</p>
-                                    {% if slot.special_requests %}
-                                        <p><strong>Special Requests:</strong> {{ slot.special_requests }}</p>
-                                    {% endif %}
-                                </div>
-                            {% endif %}
-                            <div class="slot-actions">
-                                {% if not slot.is_booked %}
-                                    {% if slot.is_blocked %}
-                                        <form action="{{ url_for('unblock_slot', slot_id=slot.id) }}" method="POST" style="display: inline;">
-                                            <button type="submit" class="btn btn-warning btn-sm">Unblock</button>
-                                        </form>
-                                    {% else %}
-                                        <form action="{{ url_for('block_slot', slot_id=slot.id) }}" method="POST" style="display: inline;">
-                                            <button type="submit" class="btn btn-warning btn-sm">Block</button>
-                                        </form>
-                                    {% endif %}
-                                {% endif %}
-                                {% if slot.is_booked and not slot.completed %}
-                                    <button class="btn btn-primary btn-sm" onclick="toggleCalculator({{ slot.id }})" id="calc_btn_{{ slot.id }}">
-                                        <i class="fas fa-calculator"></i> Calculator
-                                    </button>
-                                {% endif %}
-                            </div>
+                                <div style="margin-bottom: 0.3rem;"><i class="fas fa-users"></i> Number of People: {{ slot.number_of_people }}</div>
+                                <div style="margin-bottom: 0.3rem;"><i class="fas fa-calculator"></i> Total: ₹{{ (console.hourly_rate * ((slot.end_time - slot.start_time).total_seconds() / 3600) * slot.number_of_people)|round(2) }}</div>
+                                <div style="margin-bottom: 0.3rem;"><i class="fas fa-user"></i> Booked by: {{ slot.customer_name }}</div>
+                                <div style="margin-bottom: 0.3rem;"><i class="fas fa-phone"></i> Phone: {{ slot.customer_phone }}</div>
+                                <div style="margin-bottom: 0.3rem;"><i class="fas fa-envelope"></i> Email: {{ slot.customer_email }}</div>
+                            {% endif %}
+                        </div>
+                        <div style="display: flex; flex-direction: column; gap: 0.5rem; min-width: 120px;">
+                            {% if not slot.is_booked %}
+                                <a href="{{ url_for('edit_slot', slot_id=slot.id) }}" class="btn btn-secondary" style="width: 100%;"><i class="fas fa-edit"></i> Edit</a>
+                                <form method="post" action="{{ url_for('delete_slot', slot_id=slot.id) }}" style="margin: 0;" onsubmit="return confirm('Are you sure you want to delete this slot?');">
+                                    <button type="submit" class="btn btn-secondary" style="width: 100%; background: var(--danger);"> <i class="fas fa-trash"></i> Delete</button>
+                                </form>
+                            {% endif %}
+                            {% if slot.is_booked and not slot.completed %}
+                                <button class="btn btn-warning" type="button" onclick="toggleCalculator({{ slot.id }})" id="calc_btn_{{ slot.id }}">Open Calculator</button>
+                                <button class="btn btn-success" type="button" id="confirm_payment_btn_{{ slot.id }}" style="display:none; margin-top: 0.5rem;" onclick="submitCalculatorForm({{ slot.id }})">Confirm Payment</button>
+                            {% endif %}
+                        </div>
+                    </div>
 
-                            <!-- Calculator Section for Booked Slots -->
-                            {% if slot.is_booked and not slot.completed %}
-                            <div class="calculator-section" id="calculator_{{ slot.id }}" style="display: none; margin-top: 1rem; padding: 1rem; background: white; border-radius: 8px;">
-                                <h4 style="margin-bottom: 1rem; font-size: 1rem;">Amount Calculator</h4>
-                                <div style="margin-bottom: 0.5rem;">
-                                    <strong>Booking Duration:</strong> {{ ((slot.end_time - slot.start_time).total_seconds() / 3600)|round(2) }} hours
-                                </div>
-                                <form method="POST" action="{{ url_for('settle_slot', slot_id=slot.id) }}" class="calculator-form" id="calculator_form_{{ slot.id }}">
-                                    <div id="snacks_list_{{ slot.id }}"></div>
-                                    <input type="hidden" name="snacks_amount" id="snacks_amount_{{ slot.id }}" value="0">
-                                    <input type="hidden" name="snacks_json" id="snacks_json_{{ slot.id }}">
-                                    <div style="background: #f8f9fa; padding: 0.5rem; border-radius: 4px; margin-bottom: 0.5rem;">
-                                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
-                                            <span>Base Amount:</span>
-                                            <span>₹{{ slot.total_amount or 0 }}</span>
-                                        </div>
-                                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
-                                            <span>Snacks:</span>
-                                            <span id="snacks_total_{{ slot.id }}">₹0.00</span>
-                                        </div>
-                                        <div style="display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #dee2e6; padding-top: 0.3rem;">
-                                            <span>Final Amount:</span>
-                                            <span id="final_total_{{ slot.id }}">₹{{ slot.total_amount or 0 }}</span>
-                                        </div>
-                                    </div>
-                                    <input type="hidden" name="final_amount" id="final_amount_{{ slot.id }}" value="{{ slot.total_amount or 0 }}">
-                                    <button type="submit" class="btn btn-success btn-sm" style="width: 100%;">
-                                        <i class="fas fa-check"></i> Complete Booking
-                                    </button>
-                                </form>
-                            </div>
-                            {% endif %}
+                    <!-- Calculator Section for Booked Slots -->
+                    {% if slot.is_booked and not slot.completed %}
+                    <div class="calculator-section" id="calculator_{{ slot.id }}" style="margin-top: 1rem; padding: 1rem; background: white; border-radius: 8px; display: none;" data-base-amount="{{ slot.total_amount or 0 }}">
+                        <h4 style="margin-bottom: 1rem; font-size: 1rem; color: #333;">Amount Calculator</h4>
+                        <div style="margin-bottom: 0.5rem;"><strong>Booking Duration:</strong> {{ ((slot.end_time - slot.start_time).total_seconds() / 3600)|round(2) }} hours</div>
+                        <form method="POST" action="{{ url_for('settle_slot', slot_id=slot.id) }}" class="calculator-form" id="calculator_form_{{ slot.id }}" onsubmit="return prepareSnacksData({{ slot.id }})">
+                            <div id="snacks_list_{{ slot.id }}"></div>
+                            <input type="hidden" name="snacks_amount" id="snacks_amount_{{ slot.id }}" value="0">
+                            <input type="hidden" name="snacks_json" id="snacks_json_{{ slot.id }}">
+                            <div style="background: #f8f9fa; padding: 0.5rem; border-radius: 4px; margin-bottom: 0.5rem;">
+                                <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
+                                    <span>Base Amount:</span>
+                                    <span>₹{{ slot.total_amount or 0 }}</span>
+                                </div>
+                                <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
+                                    <span>Snacks:</span>
+                                    <span id="snacks_total_{{ slot.id }}">₹0.00</span>
+                                </div>
+                                <div style="display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #dee2e6; padding-top: 0.3rem;">
+                                    <span>Final Amount:</span>
+                                    <span id="final_total_{{ slot.id }}">₹{{ slot.total_amount or 0 }}</span>
+                                </div>
+                            </div>
+                            <input type="hidden" name="final_amount" id="final_amount_{{ slot.id }}" value="{{ slot.total_amount or 0 }}">
+                            <button type="submit" class="btn btn-primary" style="width: 100%; display:none;" id="checkout_btn_{{ slot.id }}">Checkout</button>
+                        </form>
+                    </div>
+                    {% endif %}
+
+                    <!-- Payment Status for Completed Slots -->
+                    {% if slot.completed %}
+                    <div style="margin-top: 1rem; padding: 1rem; background: #e8f5e9; border-radius: 8px;">
+                        <h4 style="margin-bottom: 0.5rem; font-size: 1rem; color: #2e7d32;">Payment Details</h4>
+                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
+                            <span>Base Amount:</span>
+                            <span>₹{{ slot.total_amount or 0 }}</span>
                         </div>
-                        {% endfor %}
+                        <div style="display: flex; justify-content: space-between; margin-bottom: 0.3rem;">
+                            <span>Snacks Amount:</span>
+                            <span>₹{{ slot.snacks_amount or 0 }}</span>
+                            </div>
+                        <div style="display: flex; justify-content: space-between; font-weight: bold; border-top: 1px solid #2e7d32; padding-top: 0.3rem;">
+                            <span>Total Paid:</span>
+                            <span>₹{{ slot.final_amount or 0 }}</span>
+                            </div>
                     </div>
+                    {% endif %}
                 </div>
+                {% else %}
+                <div style="color: var(--secondary); font-size: 1.1rem;">No slots found.</div>
+                {% endfor %}
             </div>
         </div>
     </div>
 </section>
 
-<style>
-.slots-grid {
-    display: grid;
-    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
-    gap: 1rem;
-    margin-top: 1rem;
-}
-
-.slot-card {
-    border: 1px solid #ddd;
-    border-radius: 8px;
-    padding: 1rem;
-    background: white;
-}
-
-.slot-card.booked {
-    background: #fff5f5;
-    border-color: #feb2b2;
-}
-
-.slot-card.blocked {
-    background: #fffaf0;
-    border-color: #fbd38d;
-}
-
-.slot-time {
-    font-size: 1.1rem;
-    font-weight: 500;
-    margin-bottom: 0.5rem;
-}
-
-.slot-date {
-    color: #666;
-    margin-bottom: 0.5rem;
-}
-
-.slot-status {
-    margin-bottom: 0.5rem;
-}
-
-.booking-details {
-    margin-top: 0.5rem;
-    padding-top: 0.5rem;
-    border-top: 1px solid #eee;
-}
-
-.slot-actions {
-    margin-top: 1rem;
-    display: flex;
-    gap: 0.5rem;
-}
-
-.badge {
-    padding: 0.25rem 0.5rem;
-    border-radius: 4px;
-    font-size: 0.875rem;
-    margin-right: 0.25rem;
-}
-</style>
-
 <script>
 let snackMasterList = {};
 fetch('/owner/snacks/json').then(r => r.json()).then(data => {
@@ -268,93 +205,19 @@
     return true;
 }
 function toggleCalculator(slotId) {
-    const calculator = document.getElementById(`calculator_${slotId}`);
-    const button = document.getElementById(`calc_btn_${slotId}`);
-    
-    if (calculator.style.display === 'none') {
-        calculator.style.display = 'block';
-        button.innerHTML = '<i class="fas fa-times"></i> Close';
-        loadSnacks(slotId);
+    const calc = document.getElementById(`calculator_${slotId}`);
+    if (calc.style.display === 'none') {
+        calc.style.display = 'block';
     } else {
-        calculator.style.display = 'none';
-        button.innerHTML = '<i class="fas fa-calculator"></i> Calculator';
-    }
+        calc.style.display = 'none';
+                }
 }
-function loadSnacks(slotId) {
-    fetch('/owner/snacks/json')
-        .then(response => response.json())
-        .then(snacks => {
-            const container = document.getElementById(`snacks_list_${slotId}`);
-            container.innerHTML = '';
-            
-            snacks.forEach(snack => {
-                const div = document.createElement('div');
-                div.className = 'snack-item';
-                div.style.marginBottom = '0.5rem';
-                div.innerHTML = `
-                    <div style="display: flex; justify-content: space-between; align-items: center;">
-                        <div>
-                            <strong>${snack.name}</strong>
-                            <div style="font-size: 0.9rem; color: #666;">₹${snack.rate} each</div>
-                        </div>
-                        <div style="display: flex; align-items: center; gap: 0.5rem;">
-                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="decrementSnack(${slotId}, '${snack.name}', ${snack.rate})">-</button>
-                            <span id="snack_count_${slotId}_${snack.name}">0</span>
-                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="incrementSnack(${slotId}, '${snack.name}', ${snack.rate})">+</button>
-                        </div>
-                    </div>
-                `;
-                container.appendChild(div);
-            });
-        })
-        .catch(error => {
-            console.error('Error loading snacks:', error);
-            document.getElementById(`snacks_list_${slotId}`).innerHTML = 
-                '<div class="alert alert-danger">Error loading snacks. Please try again.</div>';
-        });
-}
-function incrementSnack(slotId, name, rate) {
-    const countElement = document.getElementById(`snack_count_${slotId}_${name}`);
-    const currentCount = parseInt(countElement.textContent);
-    countElement.textContent = currentCount + 1;
-    updateTotals(slotId);
-}
-function decrementSnack(slotId, name, rate) {
-    const countElement = document.getElementById(`snack_count_${slotId}_${name}`);
-    const currentCount = parseInt(countElement.textContent);
-    if (currentCount > 0) {
-        countElement.textContent = currentCount - 1;
-        updateTotals(slotId);
+function submitCalculatorForm(slotId) {
+    const form = document.getElementById(`calculator_form_${slotId}`);
+    if (form) {
+        form.submit();
     }
 }
-function updateTotals(slotId) {
-    let snacksTotal = 0;
-    const snacks = [];
-    
-    // Get all snack items
-    const snackItems = document.querySelectorAll(`#snacks_list_${slotId} .snack-item`);
-    snackItems.forEach(item => {
-        const name = item.querySelector('strong').textContent;
-        const rate = parseFloat(item.querySelector('div:nth-child(2)').textContent.replace('₹', ''));
-        const count = parseInt(item.querySelector(`#snack_count_${slotId}_${name}`).textContent);
-        
-        if (count > 0) {
-            const amount = count * rate;
-            snacksTotal += amount;
-            snacks.push({ name, count, rate, amount });
-        }
-    });
-    
-    // Update displays
-    document.getElementById(`snacks_total_${slotId}`).textContent = `₹${snacksTotal.toFixed(2)}`;
-    const baseAmount = parseFloat(document.getElementById(`final_amount_${slotId}`).value);
-    const finalTotal = baseAmount + snacksTotal;
-    document.getElementById(`final_total_${slotId}`).textContent = `₹${finalTotal.toFixed(2)}`;
-    
-    // Update hidden inputs
-    document.getElementById(`snacks_amount_${slotId}`).value = snacksTotal;
-    document.getElementById(`snacks_json_${slotId}`).value = JSON.stringify(snacks);
-}
 function checkConfirmPaymentTime() {
     const now = new Date();
     document.querySelectorAll('[data-end-time]').forEach(slot => {
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>{% block title %}BooknPlay{% endblock %}</title>\r\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/main.css') }}\">\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n    {% block extra_head %}{% endblock %}\r\n    <style>\r\n        /* Dropdown Styles */\r\n        .dropdown {\r\n            position: relative;\r\n            display: inline-block;\r\n        }\r\n\r\n        .dropdown-toggle {\r\n            background: none;\r\n            border: 2px solid var(--primary);\r\n            color: var(--primary);\r\n            padding: 0.75rem 1.5rem;\r\n            border-radius: 8px;\r\n            font-weight: 600;\r\n            cursor: pointer;\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 0.5rem;\r\n            transition: all 0.3s ease;\r\n            font-family: inherit;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .dropdown-toggle:hover {\r\n            background: var(--primary);\r\n            color: white;\r\n        }\r\n\r\n        .dropdown-toggle.register-btn {\r\n            background: var(--primary);\r\n            color: white;\r\n        }\r\n\r\n        .dropdown-toggle.register-btn:hover {\r\n            background: var(--accent);\r\n            border-color: var(--accent);\r\n        }\r\n\r\n        .dropdown-menu {\r\n            position: absolute;\r\n            top: 100%;\r\n            right: 0;\r\n            background: white;\r\n            border: 1px solid rgba(0,0,0,0.1);\r\n            border-radius: 12px;\r\n            box-shadow: 0 8px 25px rgba(0,0,0,0.15);\r\n            min-width: 220px;\r\n            opacity: 0;\r\n            visibility: hidden;\r\n            transform: translateY(-10px);\r\n            transition: all 0.3s ease;\r\n            z-index: 1000;\r\n            margin-top: 0.5rem;\r\n        }\r\n\r\n        .dropdown-menu.show {\r\n            opacity: 1;\r\n            visibility: visible;\r\n            transform: translateY(0);\r\n        }\r\n\r\n        .dropdown-item {\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 0.75rem;\r\n            padding: 0.75rem 1rem;\r\n            color: var(--secondary);\r\n            text-decoration: none;\r\n            border-radius: 8px;\r\n            transition: all 0.3s ease;\r\n            font-weight: 500;\r\n            margin: 0.25rem;\r\n        }\r\n\r\n        .dropdown-item:hover {\r\n            background: var(--muted);\r\n            color: var(--primary);\r\n        }\r\n\r\n        .dropdown-icon {\r\n            background: linear-gradient(135deg, var(--primary), var(--accent));\r\n            width: 32px;\r\n            height: 32px;\r\n            border-radius: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-shrink: 0;\r\n        }\r\n\r\n        .dropdown-icon i {\r\n            color: white;\r\n            font-size: 0.9rem;\r\n        }\r\n\r\n        .dropdown-text {\r\n            flex: 1;\r\n        }\r\n\r\n        .dropdown-title {\r\n            font-weight: 600;\r\n            color: var(--primary);\r\n            margin-bottom: 0.1rem;\r\n        }\r\n\r\n        .dropdown-subtitle {\r\n            font-size: 0.8rem;\r\n            color: var(--secondary);\r\n        }\r\n\r\n        .chevron {\r\n            font-size: 0.8rem;\r\n            transition: transform 0.3s ease;\r\n        }\r\n\r\n        .chevron.rotated {\r\n            transform: rotate(180deg);\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <header class=\"header\">\r\n        <div class=\"header-content\">\r\n            <a href=\"{{ url_for('index') }}\" class=\"logo\">\r\n                Vennuez\r\n            </a>\r\n            <nav class=\"nav-links\">\r\n                {% if session.username and session.user_type == 'owner' %}\r\n                    <a href=\"{{ url_for('dashboard') }}\" class=\"{% if request.endpoint == 'dashboard' %}active{% endif %}\">Dashboard</a>\r\n                {% endif %}\r\n                {% if session.username and session.user_type != 'owner' %}\r\n                    <a href=\"{{ url_for('user_dashboard') }}\" class=\"{% if request.endpoint == 'user_dashboard' %}active{% endif %}\">My Bookings</a>\r\n                {% endif %}\r\n            </nav>\r\n            <div class=\"user-info\">\r\n                {% if session.username %}\r\n                    <i class=\"fas fa-user\"></i> {{ session.username }}\r\n                    <a href=\"{{ url_for('logout') }}\" class=\"btn btn-secondary\" style=\"margin-left:1rem;\">Logout</a>\r\n                {% else %}\r\n                    <!-- Login Dropdown -->\r\n                    <div class=\"dropdown\">\r\n                        <button class=\"dropdown-toggle\" onclick=\"toggleDropdown('loginDropdown')\">\r\n                            <i class=\"fas fa-sign-in-alt\"></i>\r\n                            <span>Login</span>\r\n                            <i class=\"fas fa-chevron-down chevron\" id=\"loginChevron\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" id=\"loginDropdown\">\r\n                            <a href=\"{{ url_for('user_login') }}\" class=\"dropdown-item\">\r\n                                <div class=\"dropdown-icon\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"dropdown-text\">\r\n                                    <div class=\"dropdown-title\">User Login</div>\r\n                                    <div class=\"dropdown-subtitle\">For gamers</div>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"{{ url_for('login') }}\" class=\"dropdown-item\">\r\n                                <div class=\"dropdown-icon\">\r\n                                    <i class=\"fas fa-store\"></i>\r\n                                </div>\r\n                                <div class=\"dropdown-text\">\r\n                                    <div class=\"dropdown-title\">Venue Login</div>\r\n                                    <div class=\"dropdown-subtitle\">For center owners</div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Register Dropdown -->\r\n                    <div class=\"dropdown\" style=\"margin-left: 1rem;\">\r\n                        <button class=\"dropdown-toggle register-btn\" onclick=\"toggleDropdown('registerDropdown')\">\r\n                            <i class=\"fas fa-user-plus\"></i>\r\n                            <span>Register</span>\r\n                            <i class=\"fas fa-chevron-down chevron\" id=\"registerChevron\"></i>\r\n                        </button>\r\n                        <div class=\"dropdown-menu\" id=\"registerDropdown\">\r\n                            <a href=\"{{ url_for('user_register') }}\" class=\"dropdown-item\">\r\n                                <div class=\"dropdown-icon\">\r\n                                    <i class=\"fas fa-user\"></i>\r\n                                </div>\r\n                                <div class=\"dropdown-text\">\r\n                                    <div class=\"dropdown-title\">User Register</div>\r\n                                    <div class=\"dropdown-subtitle\">Join as a gamer</div>\r\n                                </div>\r\n                            </a>\r\n                            <a href=\"{{ url_for('register') }}\" class=\"dropdown-item\">\r\n                                <div class=\"dropdown-icon\">\r\n                                    <i class=\"fas fa-store\"></i>\r\n                                </div>\r\n                                <div class=\"dropdown-text\">\r\n                                    <div class=\"dropdown-title\">Register Center</div>\r\n                                    <div class=\"dropdown-subtitle\">List your gaming center</div>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                {% endif %}\r\n            </div>\r\n        </div>\r\n    </header>\r\n    <main class=\"main-content\">\r\n        <div class=\"container\">\r\n            {% with messages = get_flashed_messages(with_categories=true) %}\r\n                {% if messages %}\r\n                    {% for category, message in messages %}\r\n                        <div class=\"alert alert-{{ 'danger' if category == 'error' else category }}\">\r\n                            {{ message }}\r\n                        </div>\r\n                    {% endfor %}\r\n                {% endif %}\r\n            {% endwith %}\r\n            {% block content %}{% endblock %}\r\n        </div>\r\n    </main>\r\n    <footer class=\"footer\">\r\n        <div>\r\n            <div style=\"font-weight:700; font-size:1.1rem;\">Vennuez</div>\r\n            <div style=\"margin:0.5rem 0; color:#bdbdbd;\">Connecting gamers with gaming centers</div>\r\n            <div style=\"margin:1rem 0;\">\r\n                <a href=\"{{ url_for('available_slots') }}\" style=\"color:#bdbdbd; margin-right:1.5rem; text-decoration:none;\">Browse Slots</a>\r\n                <a href=\"{{ url_for('register') }}\" style=\"color:#bdbdbd; text-decoration:none;\">Register</a>\r\n            </div>\r\n            <div style=\"color:#bdbdbd; font-size:0.95rem;\">support@vennuez.com</div>\r\n            <div style=\"margin-top:1rem; color:#bdbdbd; font-size:0.9rem;\">&copy; 2024 Vennuez. All rights reserved.</div>\r\n        </div>\r\n    </footer>\r\n    <script src=\"{{ url_for('static', filename='js/main.js') }}\"></script>\r\n    <script>\r\n        // Dropdown functionality\r\n        function toggleDropdown(dropdownId) {\r\n            const dropdown = document.getElementById(dropdownId);\r\n            const chevron = document.getElementById(dropdownId.replace('Dropdown', 'Chevron'));\r\n            const isShown = dropdown.classList.contains('show');\r\n\r\n            // Close all other dropdowns\r\n            document.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n                menu.classList.remove('show');\r\n            });\r\n            document.querySelectorAll('.chevron').forEach(chevron => {\r\n                chevron.classList.remove('rotated');\r\n            });\r\n\r\n            // Toggle current dropdown\r\n            if (!isShown) {\r\n                dropdown.classList.add('show');\r\n                chevron.classList.add('rotated');\r\n            }\r\n        }\r\n\r\n        // Close dropdowns when clicking outside\r\n        document.addEventListener('click', function(event) {\r\n            if (!event.target.closest('.dropdown')) {\r\n                document.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n                    menu.classList.remove('show');\r\n                });\r\n                document.querySelectorAll('.chevron').forEach(chevron => {\r\n                    chevron.classList.remove('rotated');\r\n                });\r\n            }\r\n        });\r\n\r\n        // Prevent dropdown from closing when clicking inside\r\n        document.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n            menu.addEventListener('click', function(event) {\r\n                event.stopPropagation();\r\n            });\r\n        });\r\n    </script>\r\n    {% block extra_scripts %}{% endblock %}\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html b/templates/base.html
--- a/templates/base.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/base.html	(date 1750086324322)
@@ -132,7 +132,7 @@
     <header class="header">
         <div class="header-content">
             <a href="{{ url_for('index') }}" class="logo">
-                Vennuez
+                <i class="fas fa-gamepad"></i> BooknPlay
             </a>
             <nav class="nav-links">
                 {% if session.username and session.user_type == 'owner' %}
@@ -224,14 +224,14 @@
     </main>
     <footer class="footer">
         <div>
-            <div style="font-weight:700; font-size:1.1rem;">Vennuez</div>
+            <div style="font-weight:700; font-size:1.1rem;"><i class="fas fa-gamepad"></i> BooknPlay</div>
             <div style="margin:0.5rem 0; color:#bdbdbd;">Connecting gamers with gaming centers</div>
             <div style="margin:1rem 0;">
                 <a href="{{ url_for('available_slots') }}" style="color:#bdbdbd; margin-right:1.5rem; text-decoration:none;">Browse Slots</a>
                 <a href="{{ url_for('register') }}" style="color:#bdbdbd; text-decoration:none;">Register</a>
             </div>
-            <div style="color:#bdbdbd; font-size:0.95rem;">support@vennuez.com</div>
-            <div style="margin-top:1rem; color:#bdbdbd; font-size:0.9rem;">&copy; 2024 Vennuez. All rights reserved.</div>
+            <div style="color:#bdbdbd; font-size:0.95rem;">support@gamingcenterhub.com</div>
+            <div style="margin-top:1rem; color:#bdbdbd; font-size:0.9rem;">&copy; 2024 BooknPlay. All rights reserved.</div>
         </div>
     </footer>
     <script src="{{ url_for('static', filename='js/main.js') }}"></script>
Index: routes.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import render_template, request, redirect, url_for, flash, session, jsonify\r\nfrom werkzeug.security import generate_password_hash, check_password_hash\r\nfrom app import app, db\r\nfrom models import Owner, Console, TimeSlot, User, UserCoinBalance, CoinTransaction, Snack, ConsolePricingTier\r\nfrom datetime import datetime, timedelta\r\nimport logging\r\n\r\n\r\n@app.route('/')\r\ndef index():\r\n    return render_template('index.html')\r\n\r\n\r\n@app.route('/login', methods=['GET', 'POST'])\r\ndef login():\r\n    if request.method == 'POST':\r\n        username = request.form['username']\r\n        password = request.form['password']\r\n\r\n        owner = Owner.query.filter_by(username=username).first()\r\n\r\n        if owner and check_password_hash(owner.password_hash, password):\r\n            session['user_id'] = owner.id\r\n            session['username'] = owner.username\r\n            session['user_type'] = 'owner'\r\n            flash('Login successful!', 'success')\r\n            return redirect(url_for('dashboard'))\r\n        else:\r\n            flash('Invalid username or password', 'error')\r\n\r\n    return render_template('login.html')\r\n\r\n\r\n@app.route('/register', methods=['GET', 'POST'])\r\ndef register():\r\n    if request.method == 'POST':\r\n        try:\r\n            username = request.form['username']\r\n            email = request.form['email']\r\n            password = request.form['password']\r\n            phone = request.form['phone']\r\n            gaming_center_name = request.form['center_name']\r\n            address = request.form['address']\r\n            amenities = request.form.get('amenities', '')\r\n            photo1_url = request.form.get('photo1_url', '')\r\n            photo2_url = request.form.get('photo2_url', '')\r\n            photo3_url = request.form.get('photo3_url', '')\r\n            photo4_url = request.form.get('photo4_url', '')\r\n            google_maps_link = request.form.get('google_maps_link', '')\r\n\r\n            # Check if username or email already exists\r\n            if Owner.query.filter_by(username=username).first():\r\n                flash('Username already exists', 'error')\r\n                return render_template('register.html')\r\n\r\n            if Owner.query.filter_by(email=email).first():\r\n                flash('Email already exists', 'error')\r\n                return render_template('register.html')\r\n\r\n            # Check if gaming center name already exists\r\n            if Owner.query.filter_by(gaming_center_name=gaming_center_name).first():\r\n                flash('Gaming center name already exists', 'error')\r\n                return render_template('register.html')\r\n\r\n            # Create new owner\r\n            new_owner = Owner(\r\n                username=username,\r\n                email=email,\r\n                password_hash=generate_password_hash(password),\r\n                phone=phone,\r\n                gaming_center_name=gaming_center_name,\r\n                address=address,\r\n                amenities=amenities,\r\n                photo1=photo1_url,\r\n                photo2=photo2_url,\r\n                photo3=photo3_url,\r\n                photo4=photo4_url,\r\n                google_maps_link=google_maps_link\r\n            )\r\n\r\n            db.session.add(new_owner)\r\n            db.session.commit()\r\n\r\n            flash('Registration successful! Please login.', 'success')\r\n            return redirect(url_for('login'))\r\n\r\n        except Exception as e:\r\n            logging.error(f\"Registration error: {e}\")\r\n            flash(f'Registration failed. {str(e)}', 'error')\r\n\r\n    return render_template('register.html')\r\n\r\n\r\n@app.route('/logout')\r\ndef logout():\r\n    session.clear()\r\n    flash('You have been logged out', 'info')\r\n    return redirect(url_for('index'))\r\n\r\n\r\n@app.route('/dashboard')\r\ndef dashboard():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access dashboard', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    owner = Owner.query.get(session['user_id'])\r\n    consoles = Console.query.filter_by(owner_id=owner.id).all()\r\n\r\n    # Calculate statistics\r\n    total_slots = 0\r\n    booked_slots = 0\r\n    total_revenue = 0\r\n\r\n    for console in consoles:\r\n        slots = TimeSlot.query.filter_by(console_id=console.id).all()\r\n        total_slots += len(slots)\r\n        for slot in slots:\r\n            if slot.is_booked:\r\n                booked_slots += 1\r\n                total_revenue += slot.total_amount\r\n\r\n    stats = {\r\n        'total_consoles': len(consoles),\r\n        'total_slots': total_slots,\r\n        'booked_slots': booked_slots,\r\n        'total_revenue': total_revenue,\r\n        'booking_rate': (booked_slots / total_slots * 100) if total_slots > 0 else 0\r\n    }\r\n\r\n    return render_template('dashboard.html', owner=owner, consoles=consoles, stats=stats)\r\n\r\n\r\n@app.route('/add_console', methods=['GET', 'POST'])\r\ndef add_console():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access this page', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    if request.method == 'POST':\r\n        try:\r\n            name = request.form['name']\r\n            console_type = request.form['console_type']\r\n            hourly_rate = float(request.form['hourly_rate'])\r\n\r\n            new_console = Console(\r\n                name=name,\r\n                console_type=console_type,\r\n                hourly_rate=hourly_rate,\r\n                owner_id=session['user_id']\r\n            )\r\n\r\n            db.session.add(new_console)\r\n            db.session.commit()\r\n\r\n            flash('Console added successfully!', 'success')\r\n            return redirect(url_for('dashboard'))\r\n\r\n        except Exception as e:\r\n            logging.error(f\"Error adding console: {e}\")\r\n            flash('Failed to add console. Please try again.', 'error')\r\n\r\n    return render_template('add_console.html')\r\n\r\n\r\n@app.route('/console/<int:console_id>')\r\ndef console_details(console_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access this page', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    console = Console.query.get_or_404(console_id)\r\n\r\n    # Check if console belongs to current user\r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n\r\n    slots = TimeSlot.query.filter_by(console_id=console_id).order_by(TimeSlot.start_time).all()\r\n\r\n    return render_template('console_details.html', console=console, slots=slots, now=datetime.now())\r\n\r\n\r\n@app.route('/add_slot/<int:console_id>', methods=['GET', 'POST'])\r\ndef add_slot(console_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access this page', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    console = Console.query.get_or_404(console_id)\r\n\r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n\r\n    if request.method == 'POST':\r\n        try:\r\n            date = request.form['date']\r\n            start_time = request.form['start_time']\r\n            end_time = request.form['end_time']\r\n\r\n            # Parse datetime\r\n            start_datetime = datetime.strptime(f\"{date} {start_time}\", \"%Y-%m-%d %H:%M\")\r\n            end_datetime = datetime.strptime(f\"{date} {end_time}\", \"%Y-%m-%d %H:%M\")\r\n\r\n            # Validate times\r\n            if start_datetime >= end_datetime:\r\n                if request.headers.get('X-Requested-With') == 'XMLHttpRequest':\r\n                    return jsonify({'success': False, 'error': 'End time must be after start time'})\r\n                flash('End time must be after start time', 'error')\r\n                return render_template('add_slot.html', console=console)\r\n\r\n            if start_datetime < datetime.now():\r\n                if request.headers.get('X-Requested-With') == 'XMLHttpRequest':\r\n                    return jsonify({'success': False, 'error': 'Cannot create slots in the past'})\r\n                flash('Cannot create slots in the past', 'error')\r\n                return render_template('add_slot.html', console=console)\r\n\r\n            # Check for overlapping slots\r\n            overlapping = TimeSlot.query.filter_by(console_id=console_id).filter(\r\n                TimeSlot.start_time < end_datetime,\r\n                TimeSlot.end_time > start_datetime\r\n            ).first()\r\n\r\n            if overlapping:\r\n                if request.headers.get('X-Requested-With') == 'XMLHttpRequest':\r\n                    return jsonify({'success': False, 'error': 'Time slot overlaps with existing slot'})\r\n                flash('Time slot overlaps with existing slot', 'error')\r\n                return render_template('add_slot.html', console=console)\r\n\r\n            # Calculate total amount\r\n            duration_hours = (end_datetime - start_datetime).total_seconds() / 3600\r\n            total_amount = duration_hours * console.hourly_rate\r\n\r\n            new_slot = TimeSlot(\r\n                start_time=start_datetime,\r\n                end_time=end_datetime,\r\n                total_amount=total_amount,\r\n                console_id=console_id\r\n            )\r\n\r\n            db.session.add(new_slot)\r\n            db.session.commit()\r\n\r\n            if request.headers.get('X-Requested-With') == 'XMLHttpRequest':\r\n                return jsonify({'success': True, 'message': 'Time slot added successfully'})\r\n            \r\n            flash('Time slot added successfully!', 'success')\r\n            return redirect(url_for('console_details', console_id=console_id))\r\n\r\n        except Exception as e:\r\n            logging.error(f\"Error adding slot: {e}\")\r\n            if request.headers.get('X-Requested-With') == 'XMLHttpRequest':\r\n                return jsonify({'success': False, 'error': str(e)})\r\n            flash('Failed to add time slot. Please try again.', 'error')\r\n\r\n    return render_template('add_slot.html', console=console)\r\n\r\n\r\n@app.route('/available_slots')\r\ndef available_slots():\r\n    # Get filter parameters\r\n    console_type = request.args.get('console_type', '')\r\n    location = request.args.get('location', '')\r\n\r\n    # Query unique owners/centers with at least one available slot\r\n    query = Owner.query.join(Console).join(TimeSlot).filter(\r\n        TimeSlot.is_booked == False,\r\n        TimeSlot.start_time > datetime.now(),\r\n        Console.is_available == True\r\n    )\r\n    print(\"->\" , TimeSlot.start_time , datetime.now())\r\n    if console_type:\r\n        query = query.filter(Console.console_type == console_type)\r\n    if location:\r\n        query = query.filter(Owner.address.contains(location))\r\n    query = query.distinct()\r\n    owners = query.all()\r\n\r\n    # Get unique console types for filter\r\n    console_types = db.session.query(Console.console_type).distinct().all()\r\n    console_types = [ct[0] for ct in console_types]\r\n\r\n    return render_template('available_slots.html', \r\n                         owners=owners, \r\n                         console_types=console_types,\r\n                         current_filters={\r\n                             'console_type': console_type, \r\n                             'location': location\r\n                         })\r\n\r\n\r\n@app.route('/book_slot/<int:slot_id>', methods=['GET', 'POST'])\r\ndef book_slot(slot_id):\r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n\r\n    if slot.is_booked:\r\n        flash('This slot is already booked', 'error')\r\n        return redirect(url_for('available_slots'))\r\n\r\n    # Existing user logic\r\n    user = None\r\n    if 'user_id' in session and session.get('user_type') == 'user':\r\n        user = User.query.get(session['user_id'])\r\n\r\n    if request.method == 'POST':\r\n        # Get booking details from form\r\n        number_of_people = request.form.get('number_of_people', type=int, default=1)\r\n        special_requests = request.form.get('special_requests', '')\r\n        customer_name = user.full_name if user else request.form.get('customer_name', '')\r\n        customer_phone = user.phone if user else request.form.get('customer_phone', '')\r\n        customer_email = user.email if user else request.form.get('customer_email', '')\r\n        customer_age = user.age if user else request.form.get('customer_age', type=int)\r\n\r\n        # Mark slot as booked and save details\r\n        slot.is_booked = True\r\n        slot.user_id = user.id if user else None\r\n        slot.customer_name = customer_name\r\n        slot.customer_phone = customer_phone\r\n        slot.customer_email = customer_email\r\n        slot.customer_age = customer_age\r\n        slot.special_requests = special_requests\r\n        slot.number_of_people = number_of_people\r\n        slot.booking_time = datetime.now()\r\n        slot.booking_id = slot.generate_booking_id() if hasattr(slot, 'generate_booking_id') else f\"BK{slot.id}{int(datetime.now().timestamp())}\"\r\n        db.session.commit()\r\n\r\n        flash('Booking successful!', 'success')\r\n        return redirect(url_for('booking_confirmation', booking_id=slot.booking_id))\r\n\r\n    # Get all unique future dates for this console\r\n    available_dates = (\r\n        db.session.query(db.func.date(TimeSlot.start_time))\r\n        .filter(\r\n            TimeSlot.console_id == slot.console_id,\r\n            TimeSlot.is_booked == False,\r\n            TimeSlot.start_time > datetime.now()\r\n        )\r\n        .distinct()\r\n        .order_by(db.func.date(TimeSlot.start_time))\r\n        .all()\r\n    )\r\n    available_dates = [d[0].strftime(\"%Y-%m-%d\") if hasattr(d[0], 'strftime') else str(d[0]) for d in available_dates]\r\n\r\n    return render_template('book_slot.html', slot=slot, user=user, available_dates=available_dates)\r\n\r\n\r\n@app.route('/payment/<booking_id>')\r\ndef payment(booking_id):\r\n    slot = TimeSlot.query.filter_by(booking_id=booking_id).first_or_404()\r\n    return render_template('payment.html', slot=slot)\r\n\r\n\r\n@app.route('/process_payment', methods=['POST'])\r\ndef process_payment():\r\n    booking_id = request.form['booking_id']\r\n    payment_method = request.form['payment_method']\r\n\r\n    slot = TimeSlot.query.filter_by(booking_id=booking_id).first_or_404()\r\n\r\n    # Simulate payment processing\r\n    try:\r\n        slot.payment_status = 'paid'\r\n        slot.payment_id = f\"PAY_{booking_id}_{datetime.now().strftime('%Y%m%d%H%M%S')}\"\r\n        db.session.commit()\r\n\r\n        flash('Payment successful!', 'success')\r\n        return redirect(url_for('booking_confirmation', booking_id=booking_id))\r\n\r\n    except Exception as e:\r\n        logging.error(f\"Payment processing error: {e}\")\r\n        flash('Payment failed. Please try again.', 'error')\r\n        return redirect(url_for('payment', booking_id=booking_id))\r\n\r\n\r\n@app.route('/booking_confirmation/<booking_id>')\r\ndef booking_confirmation(booking_id):\r\n    slot = TimeSlot.query.filter_by(booking_id=booking_id).first_or_404()\r\n    return render_template('booking_confirmation.html', slot=slot)\r\n\r\n\r\n@app.route('/user_login', methods=['GET', 'POST'])\r\ndef user_login():\r\n    if request.method == 'POST':\r\n        username = request.form['username']\r\n        password = request.form['password']\r\n\r\n        user = User.query.filter_by(username=username).first()\r\n\r\n        if user and check_password_hash(user.password_hash, password):\r\n            session['user_id'] = user.id\r\n            session['username'] = user.username\r\n            session['user_type'] = 'user'\r\n            flash('Login successful!', 'success')\r\n            return redirect(url_for('user_dashboard'))\r\n        else:\r\n            flash('Invalid username or password', 'error')\r\n\r\n    return render_template('user_login.html')\r\n\r\n\r\n@app.route('/user_register', methods=['GET', 'POST'])\r\ndef user_register():\r\n    if request.method == 'POST':\r\n        username = request.form['username']\r\n        email = request.form.get('email', '')\r\n        password = request.form['password']\r\n        full_name = request.form['full_name']\r\n        phone = request.form['phone']\r\n        age = request.form.get('age', type=int)\r\n\r\n        # Check if username already exists\r\n        if User.query.filter_by(username=username).first():\r\n            flash('Username already exists', 'error')\r\n            return render_template('user_register.html')\r\n\r\n        # Check if phone already exists\r\n        if User.query.filter_by(phone=phone).first():\r\n            flash('Phone number already registered', 'error')\r\n            return render_template('user_register.html')\r\n\r\n        try:\r\n            # Create new user\r\n            user = User(\r\n                username=username,\r\n                email=email if email else None,\r\n                password_hash=generate_password_hash(password),\r\n                full_name=full_name,\r\n                phone=phone,\r\n                age=age\r\n            )\r\n            db.session.add(user)\r\n            db.session.commit()\r\n\r\n            flash('Registration successful! Please login.', 'success')\r\n            return redirect(url_for('user_login'))\r\n\r\n        except Exception as e:\r\n            logging.error(f\"User registration error: {e}\")\r\n            db.session.rollback()\r\n            flash('Registration failed. Please try again.', 'error')\r\n\r\n    return render_template('user_register.html')\r\n\r\n\r\n@app.route('/user_dashboard')\r\ndef user_dashboard():\r\n    if 'user_id' not in session or session.get('user_type') != 'user':\r\n        flash('Please login to access dashboard', 'error')\r\n        return redirect(url_for('user_login'))\r\n\r\n    user = User.query.get(session['user_id'])\r\n    bookings = TimeSlot.query.filter_by(user_id=user.id).order_by(TimeSlot.start_time.desc()).all()\r\n\r\n    # Get coin balances for all gaming centers\r\n    coin_balances = UserCoinBalance.query.filter_by(user_id=user.id).all()\r\n\r\n    return render_template('user_dashboard.html', user=user, bookings=bookings, coin_balances=coin_balances , now=datetime.now())\r\n\r\n\r\n@app.route('/manage_coins/<int:user_id>', methods=['GET', 'POST'])\r\ndef manage_coins(user_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    owner = Owner.query.get(session['user_id'])\r\n    user = User.query.get_or_404(user_id)\r\n\r\n    if request.method == 'POST':\r\n        coins_to_add = request.form.get('coins', type=int)\r\n        action = request.form.get('action')\r\n\r\n        if coins_to_add and coins_to_add > 0:\r\n            # Get or create user's coin balance for this gaming center\r\n            balance = UserCoinBalance.query.filter_by(\r\n                user_id=user.id,\r\n                gaming_center_name=owner.gaming_center_name\r\n            ).first()\r\n\r\n            if not balance:\r\n                balance = UserCoinBalance(\r\n                    user_id=user.id,\r\n                    gaming_center_name=owner.gaming_center_name,\r\n                    coins=0\r\n                )\r\n                db.session.add(balance)\r\n\r\n            if action == 'add':\r\n                balance.coins += coins_to_add\r\n                transaction_type = 'purchase'\r\n                amount = coins_to_add\r\n            elif action == 'deduct' and balance.coins >= coins_to_add:\r\n                balance.coins -= coins_to_add\r\n                transaction_type = 'deduction'\r\n                amount = -coins_to_add\r\n            else:\r\n                flash('Insufficient coins for deduction', 'error')\r\n                return redirect(url_for('manage_coins', user_id=user_id))\r\n\r\n            # Record the transaction\r\n            transaction = CoinTransaction(\r\n                user_id=user.id,\r\n                owner_id=owner.id,\r\n                gaming_center_name=owner.gaming_center_name,\r\n                amount=amount,\r\n                transaction_type=transaction_type,\r\n                description=f\"Manual {action} by owner\"\r\n            )\r\n            db.session.add(transaction)\r\n            db.session.commit()\r\n\r\n            flash(f'Successfully {action}ed {coins_to_add} coins', 'success')\r\n            return redirect(url_for('manage_coins', user_id=user_id))\r\n\r\n    # Get current balance and recent transactions\r\n    balance = UserCoinBalance.query.filter_by(\r\n        user_id=user.id,\r\n        gaming_center_name=owner.gaming_center_name\r\n    ).first()\r\n\r\n    transactions = CoinTransaction.query.filter_by(\r\n        user_id=user.id,\r\n        gaming_center_name=owner.gaming_center_name\r\n    ).order_by(CoinTransaction.created_at.desc()).limit(10).all()\r\n\r\n    current_coins = balance.coins if balance else 0\r\n\r\n    return render_template('manage_coins.html', user=user, current_coins=current_coins,\r\n                           transactions=transactions, owner=owner)\r\n\r\n\r\n@app.route('/search_users')\r\ndef search_users():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    query = request.args.get('q', '')\r\n    users = []\r\n\r\n    if query:\r\n        users = User.query.filter(\r\n            db.or_(\r\n                User.username.ilike(f'%{query}%'),\r\n                User.full_name.ilike(f'%{query}%'),\r\n                User.phone.ilike(f'%{query}%')\r\n            )\r\n        ).limit(20).all()\r\n\r\n    return render_template('search_users.html', users=users, query=query)\r\n\r\n\r\n@app.route('/toggle_console_status/<int:console_id>')\r\ndef toggle_console_status(console_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        return jsonify({'error': 'Unauthorized'}), 401\r\n\r\n    console = Console.query.get_or_404(console_id)\r\n\r\n    if console.owner_id != session['user_id']:\r\n        return jsonify({'error': 'Access denied'}), 403\r\n\r\n    console.is_available = not console.is_available\r\n    db.session.commit()\r\n\r\n    return jsonify({'success': True, 'new_status': console.is_available})\r\n\r\n\r\n@app.route('/edit_slot/<int:slot_id>', methods=['GET', 'POST'])\r\ndef edit_slot(slot_id):\r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner to edit slots.', 'error')\r\n        return redirect(url_for('login'))\r\n    # Only allow editing if the slot belongs to the owner's console\r\n    console = Console.query.get(slot.console_id)\r\n    if not console or console.owner_id != session['user_id']:\r\n        flash('Access denied.', 'error')\r\n        return redirect(url_for('dashboard'))\r\n\r\n    if request.method == 'POST':\r\n        try:\r\n            date = request.form['date']\r\n            start_time = request.form['start_time']\r\n            end_time = request.form['end_time']\r\n            price = request.form['price']\r\n\r\n            # Parse datetime\r\n            start_datetime = datetime.strptime(f\"{date} {start_time}\", \"%Y-%m-%d %H:%M\")\r\n            end_datetime = datetime.strptime(f\"{date} {end_time}\", \"%Y-%m-%d %H:%M\")\r\n\r\n            # Validate times\r\n            if start_datetime >= end_datetime:\r\n                flash('End time must be after start time', 'error')\r\n                return render_template('edit_slot.html', slot=slot)\r\n\r\n            # Update slot\r\n            slot.start_time = start_datetime\r\n            slot.end_time = end_datetime\r\n            slot.total_amount = float(price)\r\n            db.session.commit()\r\n            flash('Slot updated successfully!', 'success')\r\n            return redirect(url_for('console_details', console_id=slot.console_id))\r\n        except Exception as e:\r\n            logging.error(f\"Edit slot error: {e}\")\r\n            flash('Failed to update slot. Please try again.', 'error')\r\n\r\n    # Pre-fill form values\r\n    return render_template('edit_slot.html', slot=slot)\r\n\r\n\r\n@app.route('/delete_slot/<int:slot_id>', methods=['POST'])\r\ndef delete_slot(slot_id):\r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner to delete slots.', 'error')\r\n        return redirect(url_for('login'))\r\n    console = Console.query.get(slot.console_id)\r\n    if not console or console.owner_id != session['user_id']:\r\n        flash('Access denied.', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    try:\r\n        db.session.delete(slot)\r\n        db.session.commit()\r\n        flash('Slot deleted successfully!', 'success')\r\n    except Exception as e:\r\n        logging.error(f\"Delete slot error: {e}\")\r\n        flash('Failed to delete slot. Please try again.', 'error')\r\n    return redirect(url_for('console_details', console_id=slot.console_id))\r\n\r\n\r\n@app.route('/api/available-slots')\r\ndef api_available_slots():\r\n    date_str = request.args.get('date')\r\n    console_id = request.args.get('console_id', type=int)\r\n    slots_query = TimeSlot.query.join(Console).filter(\r\n        TimeSlot.is_booked == False,\r\n        Console.is_available == True,\r\n        TimeSlot.start_time > datetime.now()\r\n    )\r\n    if date_str:\r\n        try:\r\n            filter_date = datetime.strptime(date_str, \"%Y-%m-%d\").date()\r\n            slots_query = slots_query.filter(db.func.date(TimeSlot.start_time) == filter_date)\r\n        except Exception:\r\n            return jsonify([])\r\n    if console_id:\r\n        slots_query = slots_query.filter(TimeSlot.console_id == console_id)\r\n\r\n    slots = slots_query.order_by(TimeSlot.start_time).all()\r\n    slot_list = []\r\n    for slot in slots:\r\n        slot_list.append({\r\n            \"id\": slot.id,\r\n            \"time\": f\"{slot.start_time.strftime('%I:%M %p')} - {slot.end_time.strftime('%I:%M %p')}\",\r\n            \"isBooked\": slot.is_booked,\r\n            \"consoleId\": slot.console_id,\r\n            \"consoleType\": slot.console.console_type if slot.console else \"\",\r\n            \"consoleName\": slot.console.name if slot.console else \"\",\r\n            \"price\": slot.total_amount,\r\n        })\r\n    return jsonify(slot_list)\r\n\r\n\r\n@app.route('/settle_slot/<int:slot_id>', methods=['POST'])\r\ndef settle_slot(slot_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access this page', 'error')\r\n        return redirect(url_for('login'))\r\n    \r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    console = Console.query.get(slot.console_id)\r\n    \r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    \r\n    now = datetime.now()\r\n    ten_minutes_before_end = slot.end_time - timedelta(minutes=10)\r\n    logging.info(f\"[CHECKOUT] Server time: {now}, Slot end time: {slot.end_time}, 10 min before: {ten_minutes_before_end}\")\r\n    \r\n    if now < ten_minutes_before_end:\r\n        flash(f'You can only checkout within 10 minutes before the slot ends or after it ends. (Server time: {now}, Slot end: {slot.end_time})', 'error')\r\n        return redirect(url_for('console_details', console_id=slot.console_id))\r\n    \r\n    try:\r\n        snacks_amount_raw = request.form.get('snacks_amount')\r\n        final_amount_raw = request.form.get('final_amount')\r\n        logging.info(f\"[CHECKOUT] Form data: snacks_amount={snacks_amount_raw}, final_amount={final_amount_raw}\")\r\n        if snacks_amount_raw is None or final_amount_raw is None:\r\n            flash('Missing snacks or final amount in form data.', 'error')\r\n            return redirect(url_for('console_details', console_id=slot.console_id))\r\n        snacks_amount = float(snacks_amount_raw)\r\n        final_amount = float(final_amount_raw)\r\n        \r\n        # Update slot details\r\n        slot.snacks_amount = snacks_amount\r\n        slot.final_amount = final_amount\r\n        slot.completed = True\r\n        \r\n        # Update user's spending if the slot is booked\r\n        if slot.is_booked and slot.user_id:\r\n            user = User.query.get(slot.user_id)\r\n            if user:\r\n                # Add the amount to user's total spending\r\n                user.total_spent = (user.total_spent or 0) + final_amount\r\n                \r\n                # Create a transaction record\r\n                transaction = CoinTransaction(\r\n                    user_id=user.id,\r\n                    owner_id=console.owner_id,\r\n                    gaming_center_name=console.owner.gaming_center_name if console.owner else \"\",\r\n                    amount=final_amount,\r\n                    transaction_type='spending',\r\n                    description=f'Payment for slot {slot.id} at {console.name}'\r\n                )\r\n                db.session.add(transaction)\r\n        \r\n        db.session.commit()\r\n        flash('Checkout completed successfully!', 'success')\r\n        return redirect(url_for('console_details', console_id=slot.console_id))\r\n        \r\n    except Exception as e:\r\n        db.session.rollback()\r\n        logging.error(f\"Checkout error: {str(e)} | Server time: {now}, Slot end: {slot.end_time}, Form: snacks={request.form.get('snacks_amount')}, final={request.form.get('final_amount')}\")\r\n        flash(f'Checkout failed: {str(e)}', 'error')\r\n        return redirect(url_for('console_details', console_id=slot.console_id))\r\n\r\n\r\n@app.route('/auto_slots/<int:console_id>')\r\ndef auto_slots(console_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login to access this page', 'error')\r\n        return redirect(url_for('login'))\r\n\r\n    console = Console.query.get_or_404(console_id)\r\n\r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n\r\n    return render_template('auto_slots.html', console=console)\r\n\r\n\r\n@app.route('/center_slots/<int:owner_id>')\r\ndef center_slots(owner_id):\r\n    owner = Owner.query.get_or_404(owner_id)\r\n    current_time = datetime.now()\r\n    cutoff_time = current_time - timedelta(minutes=15)\r\n    slots = TimeSlot.query.join(Console).filter(\r\n        Console.owner_id == owner_id,\r\n        TimeSlot.is_booked == False,\r\n        TimeSlot.start_time > cutoff_time,\r\n        Console.is_available == True\r\n    ).order_by(TimeSlot.start_time).all()\r\n    return render_template('center_slots.html', owner=owner, slots=slots)\r\n\r\n\r\n@app.route('/owner/snacks', methods=['GET', 'POST'])\r\ndef manage_snacks():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    owner_id = session['user_id']\r\n    if request.method == 'POST':\r\n        name = request.form.get('name')\r\n        rate = request.form.get('rate', type=float)\r\n        if name and rate is not None:\r\n            snack = Snack(owner_id=owner_id, name=name, rate=rate)\r\n            db.session.add(snack)\r\n            db.session.commit()\r\n            flash('Snack added!', 'success')\r\n        return redirect(url_for('manage_snacks'))\r\n    snacks = Snack.query.filter_by(owner_id=owner_id).all()\r\n    return render_template('manage_snacks.html', snacks=snacks)\r\n\r\n\r\n@app.route('/owner/snacks/delete/<int:snack_id>', methods=['POST'])\r\ndef delete_snack(snack_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    snack = Snack.query.get_or_404(snack_id)\r\n    if snack.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('manage_snacks'))\r\n    db.session.delete(snack)\r\n    db.session.commit()\r\n    flash('Snack deleted!', 'success')\r\n    return redirect(url_for('manage_snacks'))\r\n\r\n\r\n@app.route('/owner/snacks/json')\r\ndef snacks_json():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        return jsonify([])\r\n    owner_id = session['user_id']\r\n    snacks = Snack.query.filter_by(owner_id=owner_id).all()\r\n    return jsonify([{ 'name': s.name, 'rate': s.rate } for s in snacks])\r\n\r\n\r\n@app.route('/console/<int:console_id>/pricing', methods=['GET', 'POST'])\r\ndef manage_pricing(console_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    console = Console.query.get_or_404(console_id)\r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    if request.method == 'POST':\r\n        max_people = request.form.get('max_people', type=int)\r\n        rate_per_person = request.form.get('rate_per_person', type=float)\r\n        if max_people and rate_per_person:\r\n            tier = ConsolePricingTier(console_id=console_id, max_people=max_people, rate_per_person=rate_per_person)\r\n            db.session.add(tier)\r\n            db.session.commit()\r\n            flash('Pricing tier added!', 'success')\r\n        return redirect(url_for('manage_pricing', console_id=console_id))\r\n    tiers = ConsolePricingTier.query.filter_by(console_id=console_id).order_by(ConsolePricingTier.max_people).all()\r\n    return render_template('manage_pricing.html', console=console, tiers=tiers)\r\n\r\n\r\n@app.route('/console/<int:console_id>/pricing/delete/<int:tier_id>', methods=['POST'])\r\ndef delete_pricing_tier(console_id, tier_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    tier = ConsolePricingTier.query.get_or_404(tier_id)\r\n    if tier.console_id != console_id:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('manage_pricing', console_id=console_id))\r\n    db.session.delete(tier)\r\n    db.session.commit()\r\n    flash('Pricing tier deleted!', 'success')\r\n    return redirect(url_for('manage_pricing', console_id=console_id))\r\n\r\n\r\n@app.route('/console/<int:console_id>/pricing/json')\r\ndef pricing_json(console_id):\r\n    tiers = ConsolePricingTier.query.filter_by(console_id=console_id).order_by(ConsolePricingTier.max_people).all()\r\n    return jsonify([\r\n        { 'max_people': t.max_people, 'rate_per_person': t.rate_per_person }\r\n        for t in tiers\r\n    ])\r\n\r\n\r\n@app.route('/set_owner_location', methods=['POST'])\r\ndef set_owner_location():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        return jsonify({'success': False, 'error': 'Not logged in'}), 401\r\n    data = request.get_json()\r\n    lat = data.get('latitude')\r\n    lon = data.get('longitude')\r\n    owner = Owner.query.get(session['user_id'])\r\n    if owner and lat and lon:\r\n        owner.latitude = lat\r\n        owner.longitude = lon\r\n        db.session.commit()\r\n        return jsonify({'success': True})\r\n    return jsonify({'success': False, 'error': 'Invalid data'})\r\n\r\n\r\n@app.route('/walkin_booking')\r\ndef walkin_booking():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    \r\n    owner_id = session['user_id']\r\n    consoles = Console.query.filter_by(owner_id=owner_id, is_available=True).all()\r\n    today_date = datetime.now().strftime('%Y-%m-%d')\r\n    \r\n    return render_template('walkin_booking.html', consoles=consoles, today_date=today_date)\r\n\r\n\r\n@app.route('/walkin_booking', methods=['POST'])\r\ndef process_walkin_booking():\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    \r\n    slot_id = request.form.get('slot_id')\r\n    user_name = request.form.get('user_name')\r\n    user_phone = request.form.get('user_phone')\r\n    number_of_people = request.form.get('number_of_people')\r\n    special_requests = request.form.get('special_requests')\r\n    \r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    console = Console.query.get(slot.console_id)\r\n    \r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    \r\n    if slot.is_booked:\r\n        flash('This slot is already booked', 'error')\r\n        return redirect(url_for('walkin_booking'))\r\n    \r\n    try:\r\n        # Create a temporary user for walk-in booking\r\n        temp_user = User(\r\n            username=user_name,\r\n            full_name=user_name,  # Use the same name for full_name\r\n            phone=user_phone,\r\n            email=f\"walkin_{user_phone}@temp.com\",  # Temporary email\r\n            password_hash=generate_password_hash(\"walkin\"),  # Set a temporary password\r\n            age=18,  # Default age for walk-in users\r\n            total_spent=0.0  # Initialize total spent\r\n        )\r\n        db.session.add(temp_user)\r\n        db.session.flush()  # Get the user ID without committing\r\n        \r\n        # Update the slot\r\n        slot.is_booked = True\r\n        slot.user_id = temp_user.id\r\n        slot.number_of_people = number_of_people\r\n        slot.special_requests = special_requests\r\n        slot.booking_type = 'walkin'\r\n        \r\n        db.session.commit()\r\n        flash('Walk-in booking successful!', 'success')\r\n        return redirect(url_for('console_details', console_id=slot.console_id))\r\n        \r\n    except Exception as e:\r\n        db.session.rollback()\r\n        flash(f'Error processing walk-in booking: {str(e)}', 'error')\r\n        return redirect(url_for('walkin_booking'))\r\n\r\n\r\n@app.route('/block_slot/<int:slot_id>', methods=['POST'])\r\ndef block_slot(slot_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    \r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    console = Console.query.get(slot.console_id)\r\n    \r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    \r\n    if slot.is_booked:\r\n        flash('Cannot block an already booked slot', 'error')\r\n        return redirect(url_for('console_details', console_id=slot.console_id))\r\n    \r\n    try:\r\n        slot.is_blocked = True\r\n        db.session.commit()\r\n        flash('Slot blocked successfully', 'success')\r\n    except Exception as e:\r\n        db.session.rollback()\r\n        flash(f'Error blocking slot: {str(e)}', 'error')\r\n    \r\n    return redirect(url_for('console_details', console_id=slot.console_id))\r\n\r\n\r\n@app.route('/unblock_slot/<int:slot_id>', methods=['POST'])\r\ndef unblock_slot(slot_id):\r\n    if 'user_id' not in session or session.get('user_type') != 'owner':\r\n        flash('Please login as owner', 'error')\r\n        return redirect(url_for('login'))\r\n    \r\n    slot = TimeSlot.query.get_or_404(slot_id)\r\n    console = Console.query.get(slot.console_id)\r\n    \r\n    if console.owner_id != session['user_id']:\r\n        flash('Access denied', 'error')\r\n        return redirect(url_for('dashboard'))\r\n    \r\n    try:\r\n        slot.is_blocked = False\r\n        db.session.commit()\r\n        flash('Slot unblocked successfully', 'success')\r\n    except Exception as e:\r\n        db.session.rollback()\r\n        flash(f'Error unblocking slot: {str(e)}', 'error')\r\n    \r\n    return redirect(url_for('console_details', console_id=slot.console_id))\r\n\r\n\r\n# Error handlers\r\n@app.errorhandler(404)\r\ndef not_found(error):\r\n    return render_template('404.html'), 404\r\n\r\n\r\n@app.errorhandler(500)\r\ndef internal_error(error):\r\n    db.session.rollback()\r\n    return render_template('500.html'), 500\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes.py b/routes.py
--- a/routes.py	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/routes.py	(date 1750086331486)
@@ -1,9 +1,13 @@
-from flask import render_template, request, redirect, url_for, flash, session, jsonify
+from flask import render_template, request, redirect, url_for, flash, session, jsonify, send_file
 from werkzeug.security import generate_password_hash, check_password_hash
 from app import app, db
-from models import Owner, Console, TimeSlot, User, UserCoinBalance, CoinTransaction, Snack, ConsolePricingTier
+from models import Owner, Console, TimeSlot, User, UserCoinBalance, CoinTransaction, Snack, ConsolePricingTier, Booking, SnackOrder, Payment
 from datetime import datetime, timedelta
 import logging
+import json
+import pandas as pd
+from io import BytesIO
+from flask_login import login_required, current_user
 
 
 @app.route('/')
@@ -41,12 +45,6 @@
             phone = request.form['phone']
             gaming_center_name = request.form['center_name']
             address = request.form['address']
-            amenities = request.form.get('amenities', '')
-            photo1_url = request.form.get('photo1_url', '')
-            photo2_url = request.form.get('photo2_url', '')
-            photo3_url = request.form.get('photo3_url', '')
-            photo4_url = request.form.get('photo4_url', '')
-            google_maps_link = request.form.get('google_maps_link', '')
 
             # Check if username or email already exists
             if Owner.query.filter_by(username=username).first():
@@ -69,13 +67,7 @@
                 password_hash=generate_password_hash(password),
                 phone=phone,
                 gaming_center_name=gaming_center_name,
-                address=address,
-                amenities=amenities,
-                photo1=photo1_url,
-                photo2=photo2_url,
-                photo3=photo3_url,
-                photo4=photo4_url,
-                google_maps_link=google_maps_link
+                address=address
             )
 
             db.session.add(new_owner)
@@ -269,7 +261,6 @@
         TimeSlot.start_time > datetime.now(),
         Console.is_available == True
     )
-    print("->" , TimeSlot.start_time , datetime.now())
     if console_type:
         query = query.filter(Console.console_type == console_type)
     if location:
@@ -746,12 +737,10 @@
 @app.route('/center_slots/<int:owner_id>')
 def center_slots(owner_id):
     owner = Owner.query.get_or_404(owner_id)
-    current_time = datetime.now()
-    cutoff_time = current_time - timedelta(minutes=15)
     slots = TimeSlot.query.join(Console).filter(
         Console.owner_id == owner_id,
         TimeSlot.is_booked == False,
-        TimeSlot.start_time > cutoff_time,
+        TimeSlot.start_time > datetime.now(),
         Console.is_available == True
     ).order_by(TimeSlot.start_time).all()
     return render_template('center_slots.html', owner=owner, slots=slots)
@@ -862,123 +851,201 @@
     return jsonify({'success': False, 'error': 'Invalid data'})
 
 
-@app.route('/walkin_booking')
-def walkin_booking():
-    if 'user_id' not in session or session.get('user_type') != 'owner':
-        flash('Please login as owner', 'error')
-        return redirect(url_for('login'))
-    
-    owner_id = session['user_id']
-    consoles = Console.query.filter_by(owner_id=owner_id, is_available=True).all()
-    today_date = datetime.now().strftime('%Y-%m-%d')
-    
-    return render_template('walkin_booking.html', consoles=consoles, today_date=today_date)
-
-
-@app.route('/walkin_booking', methods=['POST'])
-def process_walkin_booking():
-    if 'user_id' not in session or session.get('user_type') != 'owner':
-        flash('Please login as owner', 'error')
-        return redirect(url_for('login'))
-    
-    slot_id = request.form.get('slot_id')
-    user_name = request.form.get('user_name')
-    user_phone = request.form.get('user_phone')
-    number_of_people = request.form.get('number_of_people')
-    special_requests = request.form.get('special_requests')
-    
-    slot = TimeSlot.query.get_or_404(slot_id)
-    console = Console.query.get(slot.console_id)
-    
-    if console.owner_id != session['user_id']:
-        flash('Access denied', 'error')
+@app.route('/export_revenue')
+@login_required
+def export_revenue():
+    if not current_user.is_owner:
+        flash('Access denied. Only owners can export revenue data.', 'danger')
         return redirect(url_for('dashboard'))
     
-    if slot.is_booked:
-        flash('This slot is already booked', 'error')
-        return redirect(url_for('walkin_booking'))
+    # Get all completed bookings for the owner's consoles
+    bookings = TimeSlot.query.join(Console).filter(
+        Console.owner_id == current_user.id,
+        TimeSlot.is_booked == True,
+        TimeSlot.completed == True
+    ).order_by(TimeSlot.start_time.desc()).all()
     
-    try:
-        # Create a temporary user for walk-in booking
-        temp_user = User(
-            username=user_name,
-            full_name=user_name,  # Use the same name for full_name
-            phone=user_phone,
-            email=f"walkin_{user_phone}@temp.com",  # Temporary email
-            password_hash=generate_password_hash("walkin"),  # Set a temporary password
-            age=18,  # Default age for walk-in users
-            total_spent=0.0  # Initialize total spent
-        )
-        db.session.add(temp_user)
-        db.session.flush()  # Get the user ID without committing
-        
-        # Update the slot
-        slot.is_booked = True
-        slot.user_id = temp_user.id
-        slot.number_of_people = number_of_people
-        slot.special_requests = special_requests
-        slot.booking_type = 'walkin'
-        
-        db.session.commit()
-        flash('Walk-in booking successful!', 'success')
-        return redirect(url_for('console_details', console_id=slot.console_id))
-        
-    except Exception as e:
-        db.session.rollback()
-        flash(f'Error processing walk-in booking: {str(e)}', 'error')
-        return redirect(url_for('walkin_booking'))
-
-
-@app.route('/block_slot/<int:slot_id>', methods=['POST'])
-def block_slot(slot_id):
-    if 'user_id' not in session or session.get('user_type') != 'owner':
-        flash('Please login as owner', 'error')
-        return redirect(url_for('login'))
-    
-    slot = TimeSlot.query.get_or_404(slot_id)
-    console = Console.query.get(slot.console_id)
-    
-    if console.owner_id != session['user_id']:
-        flash('Access denied', 'error')
-        return redirect(url_for('dashboard'))
-    
-    if slot.is_booked:
-        flash('Cannot block an already booked slot', 'error')
-        return redirect(url_for('console_details', console_id=slot.console_id))
-    
-    try:
-        slot.is_blocked = True
-        db.session.commit()
-        flash('Slot blocked successfully', 'success')
-    except Exception as e:
-        db.session.rollback()
-        flash(f'Error blocking slot: {str(e)}', 'error')
-    
-    return redirect(url_for('console_details', console_id=slot.console_id))
-
-
-@app.route('/unblock_slot/<int:slot_id>', methods=['POST'])
-def unblock_slot(slot_id):
-    if 'user_id' not in session or session.get('user_type') != 'owner':
-        flash('Please login as owner', 'error')
-        return redirect(url_for('login'))
+    # Create a list to store booking data
+    booking_data = []
+    
+    for booking in bookings:
+        # Get user details
+        user = User.query.get(booking.user_id) if booking.user_id else None
+        # Get snack details
+        snacks = json.loads(booking.snacks_json) if booking.snacks_json else []
+        snacks_details = ', '.join([f"{s['name']} x {s['count']}" for s in snacks]) if snacks else 'None'
+        
+        booking_data.append({
+            'Username': user.username if user else 'Walk-in',
+            'Phone Number': user.phone_number if user else 'N/A',
+            'PS Name': booking.console.name,
+            'Number of People': booking.number_of_people,
+            'Start Time': booking.start_time.strftime('%I:%M %p'),
+            'End Time': booking.end_time.strftime('%I:%M %p'),
+            'Snacks Details': snacks_details,
+            'Total Amount': booking.final_amount
+        })
+    
+    # Create DataFrame
+    df = pd.DataFrame(booking_data)
+    
+    # Create Excel file in memory
+    output = BytesIO()
+    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
+        df.to_excel(writer, sheet_name='Revenue Details', index=False)
+        
+        # Get workbook and worksheet objects
+        workbook = writer.book
+        worksheet = writer.sheets['Revenue Details']
+        
+        # Add some formatting
+        header_format = workbook.add_format({
+            'bold': True,
+            'bg_color': '#4CAF50',
+            'font_color': 'white',
+            'border': 1
+        })
+        
+        # Format headers
+        for col_num, value in enumerate(df.columns.values):
+            worksheet.write(0, col_num, value, header_format)
+            # Set column width based on content
+            if value in ['Username', 'Phone Number', 'PS Name', 'Snacks Details']:
+                worksheet.set_column(col_num, col_num, 20)
+            else:
+                worksheet.set_column(col_num, col_num, 15)
+        
+        # Add total row
+        total_row = len(booking_data) + 1
+        worksheet.write(total_row, 0, 'TOTAL', header_format)
+        worksheet.write_formula(total_row, 7, f'=SUM(H2:H{total_row})')  # Total Amount
+        
+        # Add date range
+        if booking_data:
+            first_date = bookings[-1].start_time.strftime('%Y-%m-%d')
+            last_date = bookings[0].start_time.strftime('%Y-%m-%d')
+            worksheet.write(0, 9, f'Date Range: {first_date} to {last_date}', header_format)
+    
+    # Set the file pointer to the beginning
+    output.seek(0)
+    
+    # Generate filename with current date
+    filename = f'revenue_details_{datetime.now().strftime("%Y%m%d_%H%M%S")}.xlsx'
+    
+    return send_file(
+        output,
+        mimetype='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
+        as_attachment=True,
+        download_name=filename
+    )
+
+
+@app.route('/walkin_booking/<int:console_id>', methods=['GET', 'POST'])
+@login_required
+def walkin_booking(console_id):
+    console = Console.query.get_or_404(console_id)
+    if not current_user.is_owner or current_user.owner.id != console.owner_id:
+        flash('You do not have permission to access this page.', 'danger')
+        return redirect(url_for('index'))
+    
+    if request.method == 'POST':
+        try:
+            # Get form data
+            full_name = request.form.get('full_name')
+            phone = request.form.get('phone')
+            date = datetime.strptime(request.form.get('date'), '%Y-%m-%d').date()
+            slot_id = request.form.get('time')
+            num_people = int(request.form.get('num_people'))
+            payment_method = request.form.get('payment_method')
+            
+            # Get selected snacks
+            snacks = {}
+            for key, value in request.form.items():
+                if key.startswith('snacks[') and int(value) > 0:
+                    snack_id = int(key[7:-1])
+                    snacks[snack_id] = int(value)
+            
+            # Create user account for walk-in customer
+            user = User(
+                full_name=full_name,
+                phone=phone,
+                is_walkin=True
+            )
+            db.session.add(user)
+            db.session.flush()  # Get the user ID without committing
+            
+            # Create booking
+            slot = TimeSlot.query.get_or_404(slot_id)
+            booking = Booking(
+                user_id=user.id,
+                slot_id=slot.id,
+                num_people=num_people,
+                booking_type='walkin',
+                payment_method=payment_method,
+                payment_status='completed'  # Walk-in bookings are paid immediately
+            )
+            db.session.add(booking)
+            
+            # Add snack orders
+            total_snack_amount = 0
+            for snack_id, quantity in snacks.items():
+                snack = Snack.query.get(snack_id)
+                if snack and snack.owner_id == console.owner_id:
+                    snack_order = SnackOrder(
+                        booking_id=booking.id,
+                        snack_id=snack_id,
+                        quantity=quantity,
+                        price=snack.price
+                    )
+                    db.session.add(snack_order)
+                    total_snack_amount += snack.price * quantity
+            
+            # Update slot status
+            slot.is_booked = True
+            slot.booking_type = 'walkin'
+            
+            # Calculate total amount
+            base_amount = console.price_per_hour
+            total_amount = base_amount + total_snack_amount
+            
+            # Create payment record
+            payment = Payment(
+                booking_id=booking.id,
+                amount=total_amount,
+                payment_method=payment_method,
+                status='completed'
+            )
+            db.session.add(payment)
+            
+            # Update owner's revenue
+            owner = console.owner
+            owner.revenue += total_amount
+            
+            db.session.commit()
+            flash('Walk-in booking completed successfully!', 'success')
+            return redirect(url_for('booking_confirmation', booking_id=booking.id))
+            
+        except Exception as e:
+            db.session.rollback()
+            flash(f'Error creating walk-in booking: {str(e)}', 'danger')
+            return redirect(url_for('walkin_booking', console_id=console_id))
     
-    slot = TimeSlot.query.get_or_404(slot_id)
-    console = Console.query.get(slot.console_id)
+    # Get available slots for today
+    today = datetime.now().date()
+    available_slots = TimeSlot.query.filter(
+        TimeSlot.console_id == console_id,
+        TimeSlot.date == today,
+        TimeSlot.is_booked == False,
+        TimeSlot.start_time > datetime.now().time()
+    ).order_by(TimeSlot.start_time).all()
     
-    if console.owner_id != session['user_id']:
-        flash('Access denied', 'error')
-        return redirect(url_for('dashboard'))
+    # Get available snacks
+    snacks = Snack.query.filter_by(owner_id=console.owner_id).all()
     
-    try:
-        slot.is_blocked = False
-        db.session.commit()
-        flash('Slot unblocked successfully', 'success')
-    except Exception as e:
-        db.session.rollback()
-        flash(f'Error unblocking slot: {str(e)}', 'error')
-    
-    return redirect(url_for('console_details', console_id=slot.console_id))
+    return render_template('walkin_booking.html', 
+                         console=console,
+                         available_slots=available_slots,
+                         snacks=snacks)
 
 
 # Error handlers
Index: templates/user_register.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}User Registration - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"auth-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 500px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <div class=\"auth-header\" style=\"text-align: center; margin-bottom: 2rem;\">\r\n                <div class=\"auth-icon\" style=\"font-size: 2.5rem; color: var(--accent); margin-bottom: 1rem;\">\r\n                            <i class=\"fas fa-user-plus\"></i>\r\n                        </div>\r\n                <h2 class=\"auth-title\" style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">Create Account</h2>\r\n                <p class=\"auth-subtitle\" style=\"color: var(--secondary);\">Join Vennuez gaming community</p>\r\n                    </div>\r\n            <form class=\"auth-form\" method=\"POST\" action=\"{{ url_for('user_register') }}\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"username\" class=\"form-label\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required placeholder=\"Username\">\r\n                                </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"email\" class=\"form-label\">Email</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" required placeholder=\"Email\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required placeholder=\"Password\">\r\n                        </div>\r\n                                    <div class=\"form-group\">\r\n                    <label for=\"phone\" class=\"form-label\">Phone</label>\r\n                    <input type=\"tel\" class=\"form-control\" id=\"phone\" name=\"phone\" required placeholder=\"Phone\">\r\n                                </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"age\" class=\"form-label\">Age</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"age\" name=\"age\" required placeholder=\"Age\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                    <label for=\"full_name\" class=\"form-label\">Full Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"full_name\" name=\"full_name\" required placeholder=\"Full Name\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Register</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/user_register.html b/templates/user_register.html
--- a/templates/user_register.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/user_register.html	(date 1750086331486)
@@ -1,5 +1,5 @@
 {% extends "base.html" %}
-{% block title %}User Registration - Vennuez{% endblock %}
+{% block title %}User Registration - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="auth-page" style="padding: 2rem 0;">
@@ -10,7 +10,7 @@
                             <i class="fas fa-user-plus"></i>
                         </div>
                 <h2 class="auth-title" style="font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;">Create Account</h2>
-                <p class="auth-subtitle" style="color: var(--secondary);">Join Vennuez gaming community</p>
+                <p class="auth-subtitle" style="color: var(--secondary);">Join BooknPlay gaming community</p>
                     </div>
             <form class="auth-form" method="POST" action="{{ url_for('user_register') }}">
                                     <div class="form-group">
Index: instance/gaming_center.db
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/instance/gaming_center.db b/instance/gaming_center.db
deleted file mode 100644
--- a/instance/gaming_center.db	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ /dev/null	(revision 963475e3df238db57d2495bd62f32097783c2089)
@@ -1,136 +0,0 @@
-SQLite format 3   @                   	                                                  .v�
-�  
-u���
-J
-
-��
-ALnH#                                                                                                                                                                                                                                                                                                                                                                                              �77�Stableconsole_pricing_tiersconsole_pricing_tiersCREATE TABLE console_pricing_tiers (
-	id INTEGER NOT NULL, 
-	console_id INTEGER NOT NULL, 
-	max_people INTEGER NOT NULL, 
-	rate_per_person FLOAT NOT NULL, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(console_id) REFERENCES consoles (id)
-)�"
-!!�tabletime_slotstime_slotsCREATE TABLE time_slots (
-	id INTEGER NOT NULL, 
-	console_id INTEGER NOT NULL, 
-	start_time DATETIME NOT NULL, 
-	end_time DATETIME NOT NULL, 
-	is_booked BOOLEAN, 
-	is_blocked BOOLEAN, 
-	booking_type VARCHAR(20), 
-	user_id INTEGER, 
-	number_of_people INTEGER, 
-	special_requests TEXT, 
-	total_amount FLOAT, 
-	snacks_amount FLOAT, 
-	final_amount FLOAT, 
-	completed BOOLEAN, 
-	created_at DATETIME, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(console_id) REFERENCES consoles (id), 
-	FOREIGN KEY(user_id) REFERENCES users (id)
-)�#�%tableturfsturfs
-CREATE TABLE turfs (
-	id INTEGER NOT NULL, 
-	name VARCHAR(100) NOT NULL, 
-	latitude FLOAT NOT NULL, 
-	longitude FLOAT NOT NULL, 
-	description TEXT, 
-	created_at DATETIME, 
-	owner_id INTEGER NOT NULL, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(owner_id) REFERENCES owners (id)
-)�[�tablesnackssnacksCREATE TABLE snacks (
-	id INTEGER NOT NULL, 
-	owner_id INTEGER NOT NULL, 
-	name VARCHAR(100) NOT NULL, 
-	rate FLOAT NOT NULL, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(owner_id) REFERENCES owners (id)
-)�,
-//�tablecoin_transactionscoin_transactionsCREATE TABLE coin_transactions (
-	id INTEGER NOT NULL, 
-	user_id INTEGER NOT NULL, 
-	owner_id INTEGER NOT NULL, 
-	gaming_center_name VARCHAR(200) NOT NULL, 
-	amount INTEGER NOT NULL, 
-	transaction_type VARCHAR(50) NOT NULL, 
-	description TEXT, 
-	created_at DATETIME, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(user_id) REFERENCES users (id), 
-	FOREIGN KEY(owner_id) REFERENCES owners (id)
-)�C11�1tableuser_coin_balancesuser_coin_balances	CREATE TABLE user_coin_balances (
-	id INTEGER NOT NULL, 
-	user_id INTEGER NOT NULL, 
-	gaming_center_name VARCHAR(200) NOT NULL, 
-	coins INTEGER, 
-	updated_at DATETIME, 
-	PRIMARY KEY (id), 
-	UNIQUE (user_id, gaming_center_name), 
-	FOREIGN KEY(user_id) REFERENCES users (id)
-)C	W1 indexsqlite_autoindex_user_coin_balances_1user_coin_balances
-�<�KtableconsolesconsolesCREATE TABLE consoles (
-	id INTEGER NOT NULL, 
-	name VARCHAR(100) NOT NULL, 
-	console_type VARCHAR(50) NOT NULL, 
-	hourly_rate FLOAT NOT NULL, 
-	is_available BOOLEAN, 
-	created_at DATETIME, 
-	owner_id INTEGER NOT NULL, 
-	PRIMARY KEY (id), 
-	FOREIGN KEY(owner_id) REFERENCES owners (id)
-)�W�
-tableusersusersCREATE TABLE users (
-	id INTEGER NOT NULL, 
-	username VARCHAR(80) NOT NULL, 
-	email VARCHAR(120), 
-	phone VARCHAR(20) NOT NULL, 
-	password_hash VARCHAR(256) NOT NULL, 
-	full_name VARCHAR(120) NOT NULL, 
-	age INTEGER, 
-	created_at DATETIME, 
-	total_spent FLOAT, 
-	PRIMARY KEY (id), 
-	UNIQUE (username), 
-	UNIQUE (email)
-))= indexsqlite_autoindex_users_2users)= indexsqlite_autoindex_users_1users�&�'tableownersownersCREATE TABLE owners (
-	id INTEGER NOT NULL, 
-	username VARCHAR(80) NOT NULL, 
-	email VARCHAR(120) NOT NULL, 
-	password_hash VARCHAR(256) NOT NULL, 
-	phone VARCHAR(20) NOT NULL, 
-	gaming_center_name VARCHAR(200) NOT NULL, 
-	address VARCHAR(255), 
-	active BOOLEAN, 
-	created_at DATETIME, 
-	latitude FLOAT, 
-	longitude FLOAT, 
-	amenities TEXT, 
-	photo1 VARCHAR(300), 
-	photo2 VARCHAR(300), 
-	photo3 VARCHAR(300), 
-	photo4 VARCHAR(300), 
-	google_maps_link VARCHAR(500), 
-	PRIMARY KEY (id), 
-	UNIQUE (username), 
-	UNIQUE (email)
-)+? indexsqlite_autoindex_owners_2owners+? indexsqlite_autoindex_owners_1owners       
-    �                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      �< -�Q'+	AG�9�9�9�9_vishvavishva@gmail.comscrypt:32768:8:1$XzzOK2qRLhyJzVnv$9862526178333c5119622dfedfd5982272387c3edc8b6b468f1502fd6f664d5d2000d4ef3ffd2cb8e722f6cef287216e9586a4b0390fb5d2d63e4660be51e7c5963852121Skiller swordasd dssa dsadsa2025-06-16 13:38:37.826542@*&ù�{�@T�XG YAC , SNACKS , WATER , PARKINGhttps://res.cloudinary.com/dwf6thd10/image/upload/v1750081113/zpfs8awqw0mm7jzpsruk.jpghttps://res.cloudinary.com/dwf6thd10/image/upload/v1750081114/vmpvtg5rxethr7h689bu.jpghttps://res.cloudinary.com/dwf6thd10/image/upload/v1750081115/lislxmnuzb69h5tndi5g.jpghttps://res.cloudinary.com/dwf6thd10/image/upload/v1750081116/moza2kdhupe6esj5j0qu.jpghttps://maps.app.goo.gl/WKwUytYWiowHmPbJ8�, 9�Q!1Y	A        adminadmin@gamingcenter.comscrypt:32768:8:1$iTwctNUGAVN2uwU9$855e550f4ece6f7c1a8194eced5d5c6879e38c515e79858fb1ca8a29d351ad18a07f470a7b01c0604952c604fad53deb612bd897522e7ceff4ea4c989751ebc29876543210Demo Gaming Center123 Gaming Street, Tech City, TC 123452025-06-16 13:36:25.105342
-   � ��                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
-vishva	admin
-   � ��                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     -vishva@gmail.com9	admin@gamingcenter.com
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               �z A!�QAwlakinnwalkin_9874563214@temp.com9874563214scrypt:32768:8:1$KgftYevckuUbnJWb$f354a006cf250f5612b34fc4cbf28d3d9bd81f5f2d0ed7026e8a2defe481ddd6024e74d333bf9bd98acd4bf52fe4e488224d1c41cca64d795695b38134f2b4c5wlakinn2025-06-16 13:45:03.800828�i +!�QAuser3user3@gmail.com0963258741scrypt:32768:8:1$zLh8cvUybxyY00lA$0f1d7cef35513963e4ccc9342908e174941e7e31d19d062fe2fbfef38117f6e5b60f80d0f523c961f7ba74dbf600ff57b46f151fe38321b0fa3c8319622f53c0jil2025-06-16 13:38:56.182871
-   � ��                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               wlakinn	user3
-   � ��                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Awalkin_9874563214@temp.com+	user3@gmail.com
-   � �                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       - 	Aps5-1PS5 �2025-06-16 13:39:29.897355
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
-   � ���                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        kurkure lays pepsi
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
-   / �/                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   g 	AA		
- A2025-06-16 19:15:00.0000002025-06-16 20:15:00.000000walkin �2025-06-16 13:40:25.391348f 	AA 	  A2025-06-16 20:15:00.0000002025-06-16 21:15:00.000000online �2025-06-16 13:40:25.396244
-                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
\ No newline at end of file
Index: templates/edit_slot.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}Edit Slot - Vennuez{% endblock %}\r\n{% block content %}\r\n<section class=\"edit-slot-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 500px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <h2 style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 1.5rem; text-align: center;\">Edit Slot</h2>\r\n            <form method=\"POST\" class=\"edit-slot-form\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"date\" class=\"form-label\">Date</label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"date\" name=\"date\" required value=\"{{ slot.start_time.strftime('%Y-%m-%d') }}\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"start_time\" class=\"form-label\">Start Time</label>\r\n                    <input type=\"time\" class=\"form-control\" id=\"start_time\" name=\"start_time\" required value=\"{{ slot.start_time.strftime('%H:%M') }}\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"end_time\" class=\"form-label\">End Time</label>\r\n                    <input type=\"time\" class=\"form-control\" id=\"end_time\" name=\"end_time\" required value=\"{{ slot.end_time.strftime('%H:%M') }}\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"price\" class=\"form-label\">Price (₹)</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"price\" name=\"price\" required min=\"0\" step=\"0.01\" value=\"{{ slot.total_amount }}\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Update Slot</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/edit_slot.html b/templates/edit_slot.html
--- a/templates/edit_slot.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/edit_slot.html	(date 1750092742677)
@@ -1,5 +1,5 @@
 {% extends "base.html" %}
-{% block title %}Edit Slot - Vennuez{% endblock %}
+{% block title %}Edit Slot - BooknPlay{% endblock %}
 {% block content %}
 <section class="edit-slot-page" style="padding: 2rem 0;">
     <div class="container" style="max-width: 500px;">
Index: templates/user_login.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}User Login - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"auth-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 400px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto;\">\r\n            <div class=\"auth-header\" style=\"text-align: center; margin-bottom: 2rem;\">\r\n                <div class=\"auth-icon\" style=\"font-size: 2.5rem; color: var(--accent); margin-bottom: 1rem;\">\r\n                    <i class=\"fas fa-user\"></i>\r\n                </div>\r\n                <h2 class=\"auth-title\" style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 0.5rem;\">User Login</h2>\r\n                <p class=\"auth-subtitle\" style=\"color: var(--secondary);\">Access your gaming account</p>\r\n            </div>\r\n            <form class=\"auth-form\" method=\"POST\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\" class=\"form-label\">Username</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Login</button>\r\n            </form>\r\n            <div class=\"auth-footer\" style=\"text-align: center; margin-top: 1.5rem;\">\r\n                <p class=\"mb-0\">Don't have an account? <a href=\"{{ url_for('user_register') }}\" class=\"auth-link\" style=\"color: var(--accent);\">Sign up here</a></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/user_login.html b/templates/user_login.html
--- a/templates/user_login.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/user_login.html	(date 1750086331486)
@@ -1,5 +1,5 @@
 {% extends "base.html" %}
-{% block title %}User Login - Vennuez{% endblock %}
+{% block title %}User Login - BooknPlay{% endblock %}
 
 {% block content %}
 <section class="auth-page" style="padding: 2rem 0;">
Index: templates/fake_payment.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}Payment - Vennuez{% endblock %}\r\n{% block content %}\r\n<section class=\"payment-page\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\" style=\"max-width: 500px;\">\r\n        <div class=\"card\" style=\"margin: 0 auto; text-align: center;\">\r\n            <h2 style=\"font-size: 1.5rem; font-weight: 700; margin-bottom: 1.5rem;\">Fake Payment</h2>\r\n            <p style=\"color: var(--secondary); margin-bottom: 2rem;\">This is a demo payment page. Click below to complete your booking.</p>\r\n            <form method=\"POST\">\r\n                <button type=\"submit\" class=\"btn\" style=\"width: 100%;\">Pay & Confirm Booking</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n{% endblock %} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/fake_payment.html b/templates/fake_payment.html
--- a/templates/fake_payment.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/fake_payment.html	(date 1750092742677)
@@ -1,5 +1,5 @@
 {% extends "base.html" %}
-{% block title %}Payment - Vennuez{% endblock %}
+{% block title %}Payment - BooknPlay{% endblock %}
 {% block content %}
 <section class="payment-page" style="padding: 2rem 0;">
     <div class="container" style="max-width: 500px;">
Index: templates/auto_slots.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Auto Generate Slots - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<div class=\"form-page\">\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h1 class=\"page-title\">\r\n                    <i class=\"fas fa-magic me-3\"></i>Auto Generate Slots\r\n                </h1>\r\n                <p class=\"page-subtitle\">Quickly generate multiple slots for {{ console.name }}</p>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n                <a href=\"{{ url_for('console_details', console_id=console.id) }}\" class=\"btn btn-outline-secondary\">\r\n                    <i class=\"fas fa-arrow-left me-2\"></i>Back to Console\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8 col-lg-6\">\r\n            <!-- Console Info Card -->\r\n            <div class=\"console-info-card mb-4\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"card-title\">\r\n                        <i class=\"fas fa-gamepad me-2\"></i>Console Details\r\n                    </h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <div class=\"info-item\">\r\n                                <span class=\"info-label\">Name:</span>\r\n                                <span class=\"info-value\">{{ console.name }}</span>\r\n                            </div>\r\n                            <div class=\"info-item\">\r\n                                <span class=\"info-label\">Type:</span>\r\n                                <span class=\"info-value\">{{ console.console_type }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <div class=\"info-item\">\r\n                                <span class=\"info-label\">Hourly Rate:</span>\r\n                                <span class=\"info-value\">₹{{ console.hourly_rate }}</span>\r\n                            </div>\r\n                            <div class=\"info-item\">\r\n                                <span class=\"info-label\">Status:</span>\r\n                                {% if console.is_available %}\r\n                                    <span class=\"status-badge status-available\">Available</span>\r\n                                {% else %}\r\n                                    <span class=\"status-badge status-maintenance\">Maintenance</span>\r\n                                {% endif %}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Auto Slot Generator -->\r\n            <div class=\"form-card\">\r\n                <div class=\"form-header\">\r\n                    <h3 class=\"form-title\">Generate Multiple Slots</h3>\r\n                    <p class=\"form-subtitle\">Set parameters to automatically generate slots</p>\r\n                </div>\r\n                <form id=\"auto-slot-form\" class=\"auto-slot-form\">\r\n                    <div class=\"row g-3\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"auto_date\" class=\"form-label\">Date</label>\r\n                                <input type=\"date\" class=\"form-control\" id=\"auto_date\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"slot_duration\" class=\"form-label\">Slot Duration</label>\r\n                                <select class=\"form-select\" id=\"slot_duration\" required>\r\n                                    <option value=\"1\">1 Hour</option>\r\n                                    <option value=\"2\">2 Hours</option>\r\n                                    <option value=\"3\">3 Hours</option>\r\n                                    <option value=\"4\">4 Hours</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"start_hour\" class=\"form-label\">Start Time</label>\r\n                                <input type=\"time\" class=\"form-control\" id=\"start_hour\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"end_hour\" class=\"form-label\">End Time</label>\r\n                                <input type=\"time\" class=\"form-control\" id=\"end_hour\" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Preview Section -->\r\n                    <div class=\"preview-section mt-4\" id=\"preview-section\" style=\"display: none;\">\r\n                        <h4 class=\"preview-title\">Slot Preview</h4>\r\n                        <div class=\"preview-content\" id=\"preview-content\"></div>\r\n                        <div class=\"preview-summary mt-3\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"summary-item\">\r\n                                        <span class=\"summary-label\">Total Slots:</span>\r\n                                        <span class=\"summary-value\" id=\"total-slots\">0</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"summary-item\">\r\n                                        <span class=\"summary-label\">Total Hours:</span>\r\n                                        <span class=\"summary-value\" id=\"total-hours\">0</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"summary-item\">\r\n                                        <span class=\"summary-label\">Total Amount:</span>\r\n                                        <span class=\"summary-value\" id=\"total-amount\">₹0</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-actions mt-4\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" onclick=\"previewSlots()\">\r\n                            <i class=\"fas fa-eye me-2\"></i>Preview Slots\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-success\" onclick=\"generateSlots()\" id=\"generate-btn\" style=\"display: none;\">\r\n                            <i class=\"fas fa-magic me-2\"></i>Generate Slots\r\n                        </button>\r\n                        <a href=\"{{ url_for('console_details', console_id=console.id) }}\" class=\"btn btn-outline-secondary\">\r\n                            Cancel\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{% endblock %}\r\n\r\n{% block extra_scripts %}\r\n<script>\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const autoDateInput = document.getElementById('auto_date');\r\n    const today = new Date().toISOString().split('T')[0];\r\n    autoDateInput.min = today;\r\n    autoDateInput.value = today;\r\n});\r\n\r\nfunction previewSlots() {\r\n    const date = document.getElementById('auto_date').value;\r\n    const duration = parseInt(document.getElementById('slot_duration').value);\r\n    const startHour = document.getElementById('start_hour').value;\r\n    const endHour = document.getElementById('end_hour').value;\r\n\r\n    if (!date || !startHour || !endHour) {\r\n        alert('Please fill in all required fields');\r\n        return;\r\n    }\r\n\r\n    const start = new Date(`${date}T${startHour}`);\r\n    const end = new Date(`${date}T${endHour}`);\r\n    const now = new Date();\r\n\r\n    if (start >= end) {\r\n        alert('End time must be after start time');\r\n        return;\r\n    }\r\n\r\n    if (start < now) {\r\n        alert('Cannot create slots in the past');\r\n        return;\r\n    }\r\n\r\n    // Calculate number of slots\r\n    const totalDuration = (end - start) / (1000 * 60 * 60);\r\n    const numSlots = Math.floor(totalDuration / duration);\r\n\r\n    if (numSlots <= 0) {\r\n        alert('No valid slots can be generated with the given duration');\r\n        return;\r\n    }\r\n\r\n    // Generate preview\r\n    const slots = [];\r\n    let currentStart = start;\r\n    let totalHours = 0;\r\n\r\n    for (let i = 0; i < numSlots; i++) {\r\n        const slotEnd = new Date(currentStart.getTime() + duration * 60 * 60 * 1000);\r\n        if (slotEnd > end) break;\r\n\r\n        slots.push({\r\n            start: currentStart.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n            end: slotEnd.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n        });\r\n\r\n        totalHours += duration;\r\n        currentStart = slotEnd;\r\n    }\r\n\r\n    // Update preview\r\n    const previewContent = document.getElementById('preview-content');\r\n    previewContent.innerHTML = slots.map((slot, index) => `\r\n        <div class=\"preview-slot\">\r\n            <span class=\"slot-number\">${index + 1}.</span>\r\n            <span class=\"slot-time\">${slot.start} - ${slot.end}</span>\r\n        </div>\r\n    `).join('');\r\n\r\n    // Update summary\r\n    document.getElementById('total-slots').textContent = slots.length;\r\n    document.getElementById('total-hours').textContent = totalHours;\r\n    document.getElementById('total-amount').textContent = `₹${(totalHours * {{ console.hourly_rate }}).toFixed(2)}`;\r\n\r\n    // Show preview and generate button\r\n    document.getElementById('preview-section').style.display = 'block';\r\n    document.getElementById('generate-btn').style.display = 'inline-block';\r\n}\r\n\r\nfunction generateSlots() {\r\n    const date = document.getElementById('auto_date').value;\r\n    const duration = parseInt(document.getElementById('slot_duration').value);\r\n    const startHour = document.getElementById('start_hour').value;\r\n    const endHour = document.getElementById('end_hour').value;\r\n\r\n    if (!date || !startHour || !endHour) {\r\n        alert('Please fill in all required fields');\r\n        return;\r\n    }\r\n\r\n    const start = new Date(`${date}T${startHour}`);\r\n    const end = new Date(`${date}T${endHour}`);\r\n    const now = new Date();\r\n\r\n    if (start >= end) {\r\n        alert('End time must be after start time');\r\n        return;\r\n    }\r\n\r\n    if (start < now) {\r\n        alert('Cannot create slots in the past');\r\n        return;\r\n    }\r\n\r\n    // Calculate number of slots\r\n    const totalDuration = (end - start) / (1000 * 60 * 60);\r\n    const numSlots = Math.floor(totalDuration / duration);\r\n\r\n    if (numSlots <= 0) {\r\n        alert('No valid slots can be generated with the given duration');\r\n        return;\r\n    }\r\n\r\n    // Generate slots\r\n    const slots = [];\r\n    let currentStart = start;\r\n\r\n    for (let i = 0; i < numSlots; i++) {\r\n        const slotEnd = new Date(currentStart.getTime() + duration * 60 * 60 * 1000);\r\n        if (slotEnd > end) break;\r\n\r\n        slots.push({\r\n            date: date,\r\n            start_time: currentStart.toTimeString().slice(0, 5),\r\n            end_time: slotEnd.toTimeString().slice(0, 5)\r\n        });\r\n\r\n        currentStart = slotEnd;\r\n    }\r\n\r\n    // Submit slots\r\n    if (slots.length > 0) {\r\n        if (confirm(`Generate ${slots.length} slots?`)) {\r\n            let completed = 0;\r\n            let failed = 0;\r\n\r\n            slots.forEach(slot => {\r\n                const formData = new FormData();\r\n                formData.append('date', slot.date);\r\n                formData.append('start_time', slot.start_time);\r\n                formData.append('end_time', slot.end_time);\r\n\r\n                fetch(`/add_slot/{{ console.id }}`, {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        completed++;\r\n                    } else {\r\n                        failed++;\r\n                    }\r\n\r\n                    if (completed + failed === slots.length) {\r\n                        alert(`Generated ${completed} slots successfully. ${failed} slots failed.`);\r\n                        window.location.href = \"{{ url_for('console_details', console_id=console.id) }}\";\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    failed++;\r\n                    if (completed + failed === slots.length) {\r\n                        alert(`Generated ${completed} slots successfully. ${failed} slots failed.`);\r\n                        window.location.href = \"{{ url_for('console_details', console_id=console.id) }}\";\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    } else {\r\n        alert('No valid slots could be generated');\r\n    }\r\n}\r\n</script>\r\n{% endblock %}\r\n 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/auto_slots.html b/templates/auto_slots.html
--- a/templates/auto_slots.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/auto_slots.html	(date 1750092742706)
@@ -1,6 +1,6 @@
 {% extends "base.html" %}
 
-{% block title %}Auto Generate Slots - Vennuez{% endblock %}
+{% block title %}Auto Generate Slots - BooknPlay{% endblock %}
 
 {% block content %}
 <div class="form-page">
Index: templates/walkin_booking.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block title %}Walk-in Booking{% endblock %}\r\n{% block content %}\r\n<div class=\"container mt-4\">\r\n    <h2>Walk-in Booking</h2>\r\n    \r\n    <!-- Console Selection -->\r\n    <div class=\"card mb-4\">\r\n        <div class=\"card-header\">\r\n            <h3>Select Console</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"console-grid\">\r\n                {% for console in consoles %}\r\n                <div class=\"console-card\" data-console-id=\"{{ console.id }}\">\r\n                    <h4>{{ console.name }}</h4>\r\n                    <p>Type: {{ console.console_type }}</p>\r\n                    <p>Rate: ₹{{ console.hourly_rate }}/hour</p>\r\n                </div>\r\n                {% endfor %}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Slot Selection -->\r\n    <div class=\"card mb-4\" id=\"slot-selection\" style=\"display: none;\">\r\n        <div class=\"card-header\">\r\n            <h3>Select Time Slot</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"date-picker mb-3\">\r\n                <label>Select Date:</label>\r\n                <input type=\"date\" id=\"booking-date\" class=\"form-control\" min=\"{{ today_date }}\">\r\n            </div>\r\n            <div class=\"time-slots\" id=\"available-slots\">\r\n                <!-- Time slots will be populated here -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- User Details Form -->\r\n    <div class=\"card mb-4\" id=\"user-details\" style=\"display: none;\">\r\n        <div class=\"card-header\">\r\n            <h3>Enter User Details</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form id=\"walkin-form\" method=\"POST\">\r\n                <input type=\"hidden\" id=\"selected-slot-id\" name=\"slot_id\">\r\n                <div class=\"form-group mb-3\">\r\n                    <label for=\"user_name\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"user_name\" name=\"user_name\" required>\r\n                </div>\r\n                <div class=\"form-group mb-3\">\r\n                    <label for=\"user_phone\">Phone Number</label>\r\n                    <input type=\"tel\" class=\"form-control\" id=\"user_phone\" name=\"user_phone\" required>\r\n                </div>\r\n                <div class=\"form-group mb-3\">\r\n                    <label for=\"number_of_people\">Number of People</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"number_of_people\" name=\"number_of_people\" min=\"1\" value=\"1\" required>\r\n                </div>\r\n                <div class=\"form-group mb-3\">\r\n                    <label for=\"special_requests\">Special Requests (Optional)</label>\r\n                    <textarea class=\"form-control\" id=\"special_requests\" name=\"special_requests\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Confirm Booking</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n.console-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 1rem;\r\n}\r\n\r\n.console-card {\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n}\r\n\r\n.console-card:hover {\r\n    border-color: var(--accent);\r\n    transform: translateY(-2px);\r\n}\r\n\r\n.console-card.selected {\r\n    border-color: var(--accent);\r\n    background-color: var(--muted);\r\n}\r\n\r\n.time-slots {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    gap: 1rem;\r\n    margin-top: 1rem;\r\n}\r\n\r\n.time-slot {\r\n    background: var(--muted);\r\n    border: 2px solid var(--border);\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    text-align: center;\r\n}\r\n\r\n.time-slot:hover {\r\n    border-color: var(--accent);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.time-slot.selected {\r\n    background: var(--accent);\r\n    border-color: var(--accent);\r\n    color: white;\r\n}\r\n\r\n.time-slot .time-range {\r\n    font-size: 1.1rem;\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.time-slot .slot-price {\r\n    font-size: 0.9rem;\r\n    color: var(--secondary);\r\n}\r\n\r\n.time-slot.selected .slot-price {\r\n    color: white;\r\n}\r\n\r\n.time-slot.booked {\r\n    background: var(--muted);\r\n    border-color: var(--border);\r\n    cursor: not-allowed;\r\n    opacity: 0.7;\r\n}\r\n</style>\r\n\r\n<script>\r\nlet selectedConsoleId = null;\r\nlet selectedSlotId = null;\r\n\r\n// Handle console selection\r\ndocument.querySelectorAll('.console-card').forEach(card => {\r\n    card.addEventListener('click', function() {\r\n        document.querySelectorAll('.console-card').forEach(c => c.classList.remove('selected'));\r\n        this.classList.add('selected');\r\n        selectedConsoleId = this.dataset.consoleId;\r\n        document.getElementById('slot-selection').style.display = 'block';\r\n        document.getElementById('user-details').style.display = 'none';\r\n        loadAvailableSlots();\r\n    });\r\n});\r\n\r\n// Handle date selection\r\ndocument.getElementById('booking-date').addEventListener('change', function() {\r\n    loadAvailableSlots();\r\n});\r\n\r\n// Load available slots\r\nfunction loadAvailableSlots() {\r\n    const date = document.getElementById('booking-date').value;\r\n    if (!date || !selectedConsoleId) return;\r\n\r\n    fetch(`/api/available-slots?console_id=${selectedConsoleId}&date=${date}`)\r\n        .then(response => response.json())\r\n        .then(slots => {\r\n            const container = document.getElementById('available-slots');\r\n            container.innerHTML = '';\r\n            \r\n            if (slots.length === 0) {\r\n                container.innerHTML = '<div class=\"alert alert-info\">No slots available for this date.</div>';\r\n                return;\r\n            }\r\n\r\n            slots.forEach(slot => {\r\n                const slotElement = document.createElement('div');\r\n                slotElement.className = 'time-slot';\r\n                slotElement.dataset.slotId = slot.id;\r\n                slotElement.innerHTML = `\r\n                    <div class=\"time-range\">${slot.time}</div>\r\n                    <div class=\"slot-price\">₹${slot.price}</div>\r\n                `;\r\n                slotElement.onclick = () => selectTimeSlot(slotElement, slot.id);\r\n                container.appendChild(slotElement);\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.error('Error loading slots:', error);\r\n            document.getElementById('available-slots').innerHTML = \r\n                '<div class=\"alert alert-danger\">Error loading slots. Please try again.</div>';\r\n        });\r\n}\r\n\r\n// Handle slot selection\r\nfunction selectTimeSlot(slotElement, slotId) {\r\n    document.querySelectorAll('.time-slot').forEach(slot => slot.classList.remove('selected'));\r\n    slotElement.classList.add('selected');\r\n    selectedSlotId = slotId;\r\n    document.getElementById('selected-slot-id').value = slotId;\r\n    document.getElementById('user-details').style.display = 'block';\r\n}\r\n\r\n// Handle form submission\r\ndocument.getElementById('walkin-form').addEventListener('submit', function(e) {\r\n    e.preventDefault();\r\n    if (!selectedSlotId) {\r\n        alert('Please select a time slot');\r\n        return;\r\n    }\r\n    this.submit();\r\n});\r\n</script>\r\n{% endblock %} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/walkin_booking.html b/templates/walkin_booking.html
--- a/templates/walkin_booking.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/walkin_booking.html	(date 1750084852305)
@@ -1,223 +1,164 @@
 {% extends "base.html" %}
-{% block title %}Walk-in Booking{% endblock %}
+
 {% block content %}
 <div class="container mt-4">
-    <h2>Walk-in Booking</h2>
+    <h2 class="text-center mb-4">Walk-in Booking</h2>
     
-    <!-- Console Selection -->
-    <div class="card mb-4">
-        <div class="card-header">
-            <h3>Select Console</h3>
-        </div>
-        <div class="card-body">
-            <div class="console-grid">
-                {% for console in consoles %}
-                <div class="console-card" data-console-id="{{ console.id }}">
-                    <h4>{{ console.name }}</h4>
-                    <p>Type: {{ console.console_type }}</p>
-                    <p>Rate: ₹{{ console.hourly_rate }}/hour</p>
-                </div>
-                {% endfor %}
-            </div>
-        </div>
-    </div>
-
-    <!-- Slot Selection -->
-    <div class="card mb-4" id="slot-selection" style="display: none;">
-        <div class="card-header">
-            <h3>Select Time Slot</h3>
-        </div>
-        <div class="card-body">
-            <div class="date-picker mb-3">
-                <label>Select Date:</label>
-                <input type="date" id="booking-date" class="form-control" min="{{ today_date }}">
-            </div>
-            <div class="time-slots" id="available-slots">
-                <!-- Time slots will be populated here -->
-            </div>
-        </div>
-    </div>
-
-    <!-- User Details Form -->
-    <div class="card mb-4" id="user-details" style="display: none;">
-        <div class="card-header">
-            <h3>Enter User Details</h3>
-        </div>
-        <div class="card-body">
-            <form id="walkin-form" method="POST">
-                <input type="hidden" id="selected-slot-id" name="slot_id">
-                <div class="form-group mb-3">
-                    <label for="user_name">Name</label>
-                    <input type="text" class="form-control" id="user_name" name="user_name" required>
-                </div>
-                <div class="form-group mb-3">
-                    <label for="user_phone">Phone Number</label>
-                    <input type="tel" class="form-control" id="user_phone" name="user_phone" required>
-                </div>
-                <div class="form-group mb-3">
-                    <label for="number_of_people">Number of People</label>
-                    <input type="number" class="form-control" id="number_of_people" name="number_of_people" min="1" value="1" required>
-                </div>
-                <div class="form-group mb-3">
-                    <label for="special_requests">Special Requests (Optional)</label>
-                    <textarea class="form-control" id="special_requests" name="special_requests" rows="3"></textarea>
-                </div>
-                <button type="submit" class="btn btn-primary">Confirm Booking</button>
-            </form>
+    <div class="row">
+        <div class="col-md-8 mx-auto">
+            <div class="card">
+                <div class="card-body">
+                    <form method="POST" action="{{ url_for('walkin_booking', console_id=console.id) }}">
+                        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
+                        
+                        <!-- Customer Details -->
+                        <div class="mb-4">
+                            <h4>Customer Details</h4>
+                            <div class="row">
+                                <div class="col-md-6 mb-3">
+                                    <label for="full_name" class="form-label">Full Name</label>
+                                    <input type="text" class="form-control" id="full_name" name="full_name" required>
+                                </div>
+                                <div class="col-md-6 mb-3">
+                                    <label for="phone" class="form-label">Phone Number</label>
+                                    <input type="tel" class="form-control" id="phone" name="phone" required>
+                                </div>
+                            </div>
+                        </div>
+
+                        <!-- Time Slot Selection -->
+                        <div class="mb-4">
+                            <h4>Time Slot</h4>
+                            <div class="row">
+                                <div class="col-md-6 mb-3">
+                                    <label for="date" class="form-label">Date</label>
+                                    <input type="date" class="form-control" id="date" name="date" required>
+                                </div>
+                                <div class="col-md-6 mb-3">
+                                    <label for="time" class="form-label">Time</label>
+                                    <select class="form-control" id="time" name="time" required>
+                                        <option value="">Select Time</option>
+                                        {% for slot in available_slots %}
+                                        <option value="{{ slot.id }}">{{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}</option>
+                                        {% endfor %}
+                                    </select>
+                                </div>
+                            </div>
+                        </div>
+
+                        <!-- Number of People -->
+                        <div class="mb-4">
+                            <h4>Number of People</h4>
+                            <div class="row">
+                                <div class="col-md-6 mb-3">
+                                    <label for="num_people" class="form-label">Number of People</label>
+                                    <input type="number" class="form-control" id="num_people" name="num_people" min="1" max="4" value="1" required>
+                                </div>
+                            </div>
+                        </div>
+
+                        <!-- Snacks Selection -->
+                        <div class="mb-4">
+                            <h4>Snacks</h4>
+                            <div class="row" id="snacks-container">
+                                {% for snack in snacks %}
+                                <div class="col-md-4 mb-3">
+                                    <div class="card h-100">
+                                        <div class="card-body">
+                                            <h5 class="card-title">{{ snack.name }}</h5>
+                                            <p class="card-text">₹{{ snack.price }}</p>
+                                            <div class="input-group">
+                                                <button type="button" class="btn btn-outline-secondary" onclick="decrementSnack({{ snack.id }})">-</button>
+                                                <input type="number" class="form-control text-center" id="snack-{{ snack.id }}" name="snacks[{{ snack.id }}]" value="0" min="0" readonly>
+                                                <button type="button" class="btn btn-outline-secondary" onclick="incrementSnack({{ snack.id }})">+</button>
+                                            </div>
+                                        </div>
+                                    </div>
+                                </div>
+                                {% endfor %}
+                            </div>
+                        </div>
+
+                        <!-- Payment Details -->
+                        <div class="mb-4">
+                            <h4>Payment Details</h4>
+                            <div class="row">
+                                <div class="col-md-6 mb-3">
+                                    <label class="form-label">Base Amount</label>
+                                    <input type="text" class="form-control" id="base_amount" readonly>
+                                </div>
+                                <div class="col-md-6 mb-3">
+                                    <label class="form-label">Snacks Amount</label>
+                                    <input type="text" class="form-control" id="snacks_amount" readonly>
+                                </div>
+                                <div class="col-md-6 mb-3">
+                                    <label class="form-label">Total Amount</label>
+                                    <input type="text" class="form-control" id="total_amount" readonly>
+                                </div>
+                                <div class="col-md-6 mb-3">
+                                    <label for="payment_method" class="form-label">Payment Method</label>
+                                    <select class="form-control" id="payment_method" name="payment_method" required>
+                                        <option value="cash">Cash</option>
+                                        <option value="card">Card</option>
+                                        <option value="upi">UPI</option>
+                                    </select>
+                                </div>
+                            </div>
+                        </div>
+
+                        <div class="text-center">
+                            <button type="submit" class="btn btn-primary">Complete Booking</button>
+                        </div>
+                    </form>
+                </div>
+            </div>
         </div>
     </div>
 </div>
 
-<style>
-.console-grid {
-    display: grid;
-    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
-    gap: 1rem;
-}
-
-.console-card {
-    border: 1px solid #ddd;
-    border-radius: 8px;
-    padding: 1rem;
-    cursor: pointer;
-    transition: all 0.2s;
-}
-
-.console-card:hover {
-    border-color: var(--accent);
-    transform: translateY(-2px);
-}
-
-.console-card.selected {
-    border-color: var(--accent);
-    background-color: var(--muted);
-}
-
-.time-slots {
-    display: grid;
-    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
-    gap: 1rem;
-    margin-top: 1rem;
-}
-
-.time-slot {
-    background: var(--muted);
-    border: 2px solid var(--border);
-    border-radius: 8px;
-    padding: 1rem;
-    cursor: pointer;
-    transition: all 0.2s ease;
-    text-align: center;
-}
-
-.time-slot:hover {
-    border-color: var(--accent);
-    transform: translateY(-2px);
-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-}
-
-.time-slot.selected {
-    background: var(--accent);
-    border-color: var(--accent);
-    color: white;
-}
-
-.time-slot .time-range {
-    font-size: 1.1rem;
-    font-weight: 500;
-    margin-bottom: 0.5rem;
-}
-
-.time-slot .slot-price {
-    font-size: 0.9rem;
-    color: var(--secondary);
-}
-
-.time-slot.selected .slot-price {
-    color: white;
-}
-
-.time-slot.booked {
-    background: var(--muted);
-    border-color: var(--border);
-    cursor: not-allowed;
-    opacity: 0.7;
-}
-</style>
-
 <script>
-let selectedConsoleId = null;
-let selectedSlotId = null;
-
-// Handle console selection
-document.querySelectorAll('.console-card').forEach(card => {
-    card.addEventListener('click', function() {
-        document.querySelectorAll('.console-card').forEach(c => c.classList.remove('selected'));
-        this.classList.add('selected');
-        selectedConsoleId = this.dataset.consoleId;
-        document.getElementById('slot-selection').style.display = 'block';
-        document.getElementById('user-details').style.display = 'none';
-        loadAvailableSlots();
-    });
-});
+let baseAmount = 0;
+let snacksAmount = 0;
 
-// Handle date selection
-document.getElementById('booking-date').addEventListener('change', function() {
-    loadAvailableSlots();
-});
+function updateAmounts() {
+    document.getElementById('base_amount').value = '₹' + baseAmount;
+    document.getElementById('snacks_amount').value = '₹' + snacksAmount;
+    document.getElementById('total_amount').value = '₹' + (baseAmount + snacksAmount);
+}
 
-// Load available slots
-function loadAvailableSlots() {
-    const date = document.getElementById('booking-date').value;
-    if (!date || !selectedConsoleId) return;
+function incrementSnack(snackId) {
+    const input = document.getElementById(`snack-${snackId}`);
+    input.value = parseInt(input.value) + 1;
+    updateSnacksAmount();
+}
 
-    fetch(`/api/available-slots?console_id=${selectedConsoleId}&date=${date}`)
-        .then(response => response.json())
-        .then(slots => {
-            const container = document.getElementById('available-slots');
-            container.innerHTML = '';
-            
-            if (slots.length === 0) {
-                container.innerHTML = '<div class="alert alert-info">No slots available for this date.</div>';
-                return;
-            }
-
-            slots.forEach(slot => {
-                const slotElement = document.createElement('div');
-                slotElement.className = 'time-slot';
-                slotElement.dataset.slotId = slot.id;
-                slotElement.innerHTML = `
-                    <div class="time-range">${slot.time}</div>
-                    <div class="slot-price">₹${slot.price}</div>
-                `;
-                slotElement.onclick = () => selectTimeSlot(slotElement, slot.id);
-                container.appendChild(slotElement);
-            });
-        })
-        .catch(error => {
-            console.error('Error loading slots:', error);
-            document.getElementById('available-slots').innerHTML = 
-                '<div class="alert alert-danger">Error loading slots. Please try again.</div>';
-        });
+function decrementSnack(snackId) {
+    const input = document.getElementById(`snack-${snackId}`);
+    if (parseInt(input.value) > 0) {
+        input.value = parseInt(input.value) - 1;
+        updateSnacksAmount();
+    }
 }
 
-// Handle slot selection
-function selectTimeSlot(slotElement, slotId) {
-    document.querySelectorAll('.time-slot').forEach(slot => slot.classList.remove('selected'));
-    slotElement.classList.add('selected');
-    selectedSlotId = slotId;
-    document.getElementById('selected-slot-id').value = slotId;
-    document.getElementById('user-details').style.display = 'block';
+function updateSnacksAmount() {
+    snacksAmount = 0;
+    {% for snack in snacks %}
+    const quantity = parseInt(document.getElementById(`snack-{{ snack.id }}`).value);
+    snacksAmount += quantity * {{ snack.price }};
+    {% endfor %}
+    updateAmounts();
 }
 
-// Handle form submission
-document.getElementById('walkin-form').addEventListener('submit', function(e) {
-    e.preventDefault();
-    if (!selectedSlotId) {
-        alert('Please select a time slot');
-        return;
+// Update base amount when time slot is selected
+document.getElementById('time').addEventListener('change', function() {
+    const selectedOption = this.options[this.selectedIndex];
+    if (selectedOption.value) {
+        baseAmount = {{ console.price_per_hour }};
+        updateAmounts();
     }
-    this.submit();
 });
+
+// Initialize amounts
+updateAmounts();
 </script>
 {% endblock %} 
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2d2dd25c-dea4-4478-80fd-749354506233\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/instance/gaming_center.db\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/models.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/models.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/routes.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/routes.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/static/css/main.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/static/css/main.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/add_console.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/add_console.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/available_slots.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/available_slots.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/book_slot.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/book_slot.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/center_slots.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/center_slots.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/console_details.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/console_details.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/dashboard.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/dashboard.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/edit_slot.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/edit_slot.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/fake_payment.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/fake_payment.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/manage_coins.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/manage_coins.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/past_bookings.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/past_bookings.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/register.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/register.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/search_users.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/search_users.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2xtbXsxdikx33JIUZmU9AGcIJDh\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;Python.app.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.app1.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.book_slots_trial.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.bookings.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.config.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.image_upload_cloudinary.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.models.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.otp.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.payment.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.routes.executor&quot;: &quot;Debug&quot;,\r\n    &quot;Python.schemas.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.signup.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.sms.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.update_owner_locations.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/K R ARAVIND/Desktop/Turf_booking/static/logo&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\\static\\logo\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\\templates\" />\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\" />\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\\static\" />\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\\resources\" />\r\n      <recent name=\"C:\\Users\\K R ARAVIND\\Desktop\\Turf_booking\\routes\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-4f4e415b4190-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.26053.29\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2d2dd25c-dea4-4478-80fd-749354506233\" name=\"Changes\" comment=\"\" />\r\n      <created>1748760360128</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1748760360128</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/.idea/workspace.xml	(date 1750093729328)
@@ -6,22 +6,27 @@
   <component name="ChangeListManager">
     <list default="true" id="2d2dd25c-dea4-4478-80fd-749354506233" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/instance/gaming_center.db" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/models.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/routes.py" beforeDir="false" afterPath="$PROJECT_DIR$/routes.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/static/css/main.css" beforeDir="false" afterPath="$PROJECT_DIR$/static/css/main.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/add_console.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/add_console.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/auto_slots.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/auto_slots.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/available_slots.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/available_slots.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/base.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/book_slot.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/book_slot.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/center_slots.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/center_slots.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/booking_confirmation.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/booking_confirmation.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/console_details.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/console_details.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/dashboard.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/dashboard.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/edit_slot.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/edit_slot.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/fake_payment.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/fake_payment.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/manage_coins.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/manage_coins.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/past_bookings.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/past_bookings.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/login.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/login.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/payment.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/payment.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/templates/register.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/register.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/search_users.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/search_users.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/user_login.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/user_login.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/user_register.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/user_register.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/walkin_booking.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/walkin_booking.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,8 +76,8 @@
     &quot;Python.update_owner_locations.executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/K R ARAVIND/Desktop/Turf_booking/static/logo&quot;
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/K R ARAVIND/Desktop/vennuez&quot;
   }
 }</component>
   <component name="RecentsManager">
@@ -86,6 +91,35 @@
       <recent name="C:\Users\K R ARAVIND\Desktop\Turf_booking\resources" />
       <recent name="C:\Users\K R ARAVIND\Desktop\Turf_booking\routes" />
     </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="Turf_booking" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.main" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
@@ -105,4 +139,15 @@
     </task>
     <servers />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
+          <url>file://$PROJECT_DIR$/routes.py</url>
+          <line>13</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: templates/available_slots.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Available Venues - Vennuez{% endblock %}\r\n\r\n{% block content %}\r\n<section class=\"available-venues\" style=\"padding: 2rem 0;\">\r\n    <div class=\"container\">\r\n        <h1 class=\"text-center mb-4\">Available Venues</h1>\r\n\r\n        <!-- Filters -->\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <form method=\"get\" class=\"row g-3\">\r\n                    <div class=\"col-md-4\">\r\n                            <label for=\"console_type\" class=\"form-label\">Console Type</label>\r\n                        <select name=\"console_type\" id=\"console_type\" class=\"form-select\">\r\n                            <option value=\"\">All Types</option>\r\n                                {% for type in console_types %}\r\n                            <option value=\"{{ type }}\" {% if current_filters.console_type == type %}selected{% endif %}>{{ type }}</option>\r\n                                {% endfor %}\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <label for=\"location\" class=\"form-label\">Location</label>\r\n                        <input type=\"text\" name=\"location\" id=\"location\" class=\"form-control\" placeholder=\"Enter location\" value=\"{{ current_filters.location }}\">\r\n                        </div>\r\n                    <div class=\"col-12 text-center\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Apply Filters</button>\r\n                        <a href=\"{{ url_for('available_slots') }}\" class=\"btn btn-secondary\">Clear Filters</a>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            \r\n        <!-- Venues List -->\r\n        <div class=\"row\">\r\n            {% if owners %}\r\n                {% for owner in owners %}\r\n                <div class=\"col-md-6 col-lg-4 mb-4\">\r\n                    <div class=\"card h-100 venue-card\" data-lat=\"{{ owner.latitude }}\" data-lon=\"{{ owner.longitude }}\">\r\n                        <div class=\"venue-photos\">\r\n                            {% set photos = [owner.photo1, owner.photo2, owner.photo3, owner.photo4] %}\r\n                            <div id=\"venueCarousel{{ owner.id }}\" class=\"carousel slide\" data-bs-ride=\"carousel\" style=\"width:100%; max-width:320px; margin:0 auto 1rem auto;\">\r\n                                <div class=\"carousel-inner\" style=\"border-radius: 12px; overflow: hidden;\">\r\n                                    {% for photo in photos if photo %}\r\n                                    <div class=\"carousel-item {% if loop.first %}active{% endif %}\">\r\n                                        <img src=\"{{ photo }}\" class=\"d-block w-100\" alt=\"Venue Photo\" style=\"height: 200px; object-fit: cover;\">\r\n                                    </div>\r\n                                    {% endfor %}\r\n                                </div>\r\n                                {% if photos|select('string')|list|length > 1 %}\r\n                                <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#venueCarousel{{ owner.id }}\" data-bs-slide=\"prev\">\r\n                                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                    <span class=\"visually-hidden\">Previous</span>\r\n                                </button>\r\n                                <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#venueCarousel{{ owner.id }}\" data-bs-slide=\"next\">\r\n                                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                    <span class=\"visually-hidden\">Next</span>\r\n                                </button>\r\n                                {% endif %}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title\">{{ owner.gaming_center_name }}</h5>\r\n                            <div class=\"mb-2\">\r\n                                <i class=\"fas fa-map-marker-alt\"></i> {{ owner.address }}\r\n                            </div>\r\n                            <div class=\"mb-2 venue-distance\" style=\"color: #007bff;\"></div>\r\n                            <div class=\"mb-2\">\r\n                                <i class=\"fas fa-phone\"></i> {{ owner.phone }}\r\n                            </div>\r\n                            <div class=\"mb-2\">\r\n                                <i class=\"fas fa-envelope\"></i> {{ owner.email }}\r\n                            </div>\r\n                            <div class=\"venue-amenities\" style=\"margin: 0.5rem 0; text-align: center;\">\r\n                                {% if owner.amenities %}\r\n                                    <div><strong>Amenities:</strong> {{ owner.amenities }}</div>\r\n                                {% endif %}\r\n                                {% if owner.google_maps_link %}\r\n                                    <div style=\"margin-top: 0.5rem;\"><a href=\"{{ owner.google_maps_link }}\" target=\"_blank\" class=\"btn btn-outline-primary btn-sm\">View on Google Maps</a></div>\r\n                                {% endif %}\r\n                            </div>\r\n                            <a href=\"{{ url_for('center_slots', owner_id=owner.id) }}\" class=\"btn btn-primary w-100\">View Slots</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {% endfor %}\r\n        {% else %}\r\n                <div class=\"col-12\">\r\n                    <div class=\"alert alert-info text-center\">\r\n                        No available venues found. Try adjusting your filters.\r\n                </div>\r\n            </div>\r\n        {% endif %}\r\n    </div>\r\n</div>\r\n</section>\r\n<script>\r\nfunction haversine(lat1, lon1, lat2, lon2) {\r\n    function toRad(x) { return x * Math.PI / 180; }\r\n    var R = 6371; // km\r\n    var dLat = toRad(lat2-lat1);\r\n    var dLon = toRad(lon2-lon1);\r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n            Math.sin(dLon/2) * Math.sin(dLon/2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return R * c;\r\n}\r\nif (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(function(pos) {\r\n        const userLat = pos.coords.latitude;\r\n        const userLon = pos.coords.longitude;\r\n        document.querySelectorAll('.venue-card').forEach(function(card) {\r\n            const lat = parseFloat(card.dataset.lat);\r\n            const lon = parseFloat(card.dataset.lon);\r\n            if (!isNaN(lat) && !isNaN(lon)) {\r\n                const dist = haversine(userLat, userLon, lat, lon);\r\n                card.querySelector('.venue-distance').textContent = `Distance: ${dist.toFixed(2)} km`;\r\n            }\r\n        });\r\n    });\r\n}\r\n</script>\r\n{% endblock %}\r\n\r\n{% block extra_scripts %}\r\n{{ super() }}\r\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/available_slots.html b/templates/available_slots.html
--- a/templates/available_slots.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/available_slots.html	(date 1750084365035)
@@ -3,124 +3,320 @@
 {% block title %}Available Venues - Vennuez{% endblock %}
 
 {% block content %}
-<section class="available-venues" style="padding: 2rem 0;">
+<div class="available-slots-section">
     <div class="container">
-        <h1 class="text-center mb-4">Available Venues</h1>
-
-        <!-- Filters -->
-        <div class="card mb-4">
-            <div class="card-body">
-                <form method="get" class="row g-3">
-                    <div class="col-md-4">
-                            <label for="console_type" class="form-label">Console Type</label>
-                        <select name="console_type" id="console_type" class="form-select">
-                            <option value="">All Types</option>
-                                {% for type in console_types %}
-                            <option value="{{ type }}" {% if current_filters.console_type == type %}selected{% endif %}>{{ type }}</option>
-                                {% endfor %}
-                            </select>
-                        </div>
-                        <div class="col-md-4">
-                            <label for="location" class="form-label">Location</label>
-                        <input type="text" name="location" id="location" class="form-control" placeholder="Enter location" value="{{ current_filters.location }}">
-                        </div>
-                    <div class="col-12 text-center">
-                        <button type="submit" class="btn btn-primary">Apply Filters</button>
-                        <a href="{{ url_for('available_slots') }}" class="btn btn-secondary">Clear Filters</a>
-                    </div>
-                </form>
-                </div>
-            </div>
-            
+        <!-- Filter Section -->
+        <div class="filter-section mb-4">
+            <form method="GET" action="{{ url_for('available_slots') }}" class="row g-3">
+                <div class="col-md-4">
+                    <select name="console_type" class="form-select">
+                        <option value="">All Console Types</option>
+                        <option value="PS5" {% if request.args.get('console_type') == 'PS5' %}selected{% endif %}>PS5</option>
+                        <option value="PS4" {% if request.args.get('console_type') == 'PS4' %}selected{% endif %}>PS4</option>
+                        <option value="Xbox" {% if request.args.get('console_type') == 'Xbox' %}selected{% endif %}>Xbox</option>
+                    </select>
+                </div>
+                <div class="col-md-4">
+                    <input type="text" name="location" class="form-control" placeholder="Enter location" value="{{ request.args.get('location', '') }}">
+                </div>
+                <div class="col-md-4">
+                    <button type="submit" class="btn btn-primary w-100">Filter</button>
+                </div>
+            </form>
+        </div>
+
         <!-- Venues List -->
         <div class="row">
             {% if owners %}
                 {% for owner in owners %}
-                <div class="col-md-6 col-lg-4 mb-4">
-                    <div class="card h-100 venue-card" data-lat="{{ owner.latitude }}" data-lon="{{ owner.longitude }}">
-                        <div class="venue-photos">
-                            {% set photos = [owner.photo1, owner.photo2, owner.photo3, owner.photo4] %}
-                            <div id="venueCarousel{{ owner.id }}" class="carousel slide" data-bs-ride="carousel" style="width:100%; max-width:320px; margin:0 auto 1rem auto;">
-                                <div class="carousel-inner" style="border-radius: 12px; overflow: hidden;">
-                                    {% for photo in photos if photo %}
-                                    <div class="carousel-item {% if loop.first %}active{% endif %}">
-                                        <img src="{{ photo }}" class="d-block w-100" alt="Venue Photo" style="height: 200px; object-fit: cover;">
-                                    </div>
-                                    {% endfor %}
+                    <div class="col-md-6 mb-4">
+                        <div class="venue-card">
+                            <!-- Image Slideshow -->
+                            <div class="venue-slideshow">
+                                <div class="slideshow-container">
+                                    {% if owner.consoles %}
+                                        {% for console in owner.consoles %}
+                                            <div class="slide {% if loop.first %}active{% endif %}">
+                                                {% if console.console_photo %}
+                                                    <img src="{{ url_for('static', filename='uploads/' + console.console_photo) }}" alt="{{ console.name }}" class="venue-image">
+                                                {% else %}
+                                                    <img src="{{ url_for('static', filename='images/default-console.jpg') }}" alt="{{ console.name }}" class="venue-image">
+                                                {% endif %}
+                                            </div>
+                                        {% endfor %}
+                                    {% else %}
+                                        <div class="slide active">
+                                            <img src="{{ url_for('static', filename='images/default-venue.jpg') }}" alt="Default Venue" class="venue-image">
+                                        </div>
+                                    {% endif %}
                                 </div>
-                                {% if photos|select('string')|list|length > 1 %}
-                                <button class="carousel-control-prev" type="button" data-bs-target="#venueCarousel{{ owner.id }}" data-bs-slide="prev">
-                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
-                                    <span class="visually-hidden">Previous</span>
-                                </button>
-                                <button class="carousel-control-next" type="button" data-bs-target="#venueCarousel{{ owner.id }}" data-bs-slide="next">
-                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
-                                    <span class="visually-hidden">Next</span>
-                                </button>
-                                {% endif %}
-                            </div>
-                        </div>
-                        <div class="card-body">
-                            <h5 class="card-title">{{ owner.gaming_center_name }}</h5>
-                            <div class="mb-2">
-                                <i class="fas fa-map-marker-alt"></i> {{ owner.address }}
-                            </div>
-                            <div class="mb-2 venue-distance" style="color: #007bff;"></div>
-                            <div class="mb-2">
-                                <i class="fas fa-phone"></i> {{ owner.phone }}
-                            </div>
-                            <div class="mb-2">
-                                <i class="fas fa-envelope"></i> {{ owner.email }}
-                            </div>
-                            <div class="venue-amenities" style="margin: 0.5rem 0; text-align: center;">
-                                {% if owner.amenities %}
-                                    <div><strong>Amenities:</strong> {{ owner.amenities }}</div>
-                                {% endif %}
-                                {% if owner.google_maps_link %}
-                                    <div style="margin-top: 0.5rem;"><a href="{{ owner.google_maps_link }}" target="_blank" class="btn btn-outline-primary btn-sm">View on Google Maps</a></div>
-                                {% endif %}
-                            </div>
-                            <a href="{{ url_for('center_slots', owner_id=owner.id) }}" class="btn btn-primary w-100">View Slots</a>
-                        </div>
-                    </div>
-                </div>
+                                <button class="slideshow-btn prev" onclick="changeSlide(-1, {{ loop.index0 }})">❮</button>
+                                <button class="slideshow-btn next" onclick="changeSlide(1, {{ loop.index0 }})">❯</button>
+                                <div class="slideshow-dots">
+                                    {% if owner.consoles %}
+                                        {% for console in owner.consoles %}
+                                            <span class="dot {% if loop.first %}active{% endif %}" onclick="goToSlide({{ loop.index0 }}, {{ loop.parent.loop.index0 }})"></span>
+                                        {% endfor %}
+                                    {% else %}
+                                        <span class="dot active"></span>
+                                    {% endif %}
+                                </div>
+                            </div>
+
+                            <!-- Venue Details -->
+                            <div class="venue-details">
+                                <h3>{{ owner.name }}</h3>
+                                <p class="text-muted">{{ owner.address }}</p>
+                                
+                                <!-- Console Types -->
+                                <div class="console-types">
+                                    <h5>Available Consoles</h5>
+                                    <div class="console-list">
+                                        {% for console in owner.consoles %}
+                                            <div class="console-item">
+                                                <i class="fas fa-gamepad"></i>
+                                                <span>{{ console.console_type }}</span>
+                                            </div>
+                                        {% endfor %}
+                                    </div>
+                                </div>
+
+                                <!-- Amenities -->
+                                <div class="amenities">
+                                    <h5>Amenities</h5>
+                                    <div class="amenities-list">
+                                        {% if owner.amenities %}
+                                            {% for amenity in owner.amenities.split(',') %}
+                                                <div class="amenity-item">
+                                                    <i class="fas fa-check"></i>
+                                                    <span>{{ amenity.strip() }}</span>
+                                                </div>
+                                            {% endfor %}
+                                        {% else %}
+                                            <div class="amenity-item">
+                                                <i class="fas fa-check"></i>
+                                                <span>Air Conditioning</span>
+                                            </div>
+                                            <div class="amenity-item">
+                                                <i class="fas fa-check"></i>
+                                                <span>High-Speed Internet</span>
+                                            </div>
+                                        {% endif %}
+                                    </div>
+                                </div>
+
+                                <!-- Contact and Location -->
+                                <div class="venue-contact">
+                                    <p><i class="fas fa-phone"></i> {{ owner.phone_number }}</p>
+                                    <a href="https://www.google.com/maps/search/?api=1&query={{ owner.latitude }},{{ owner.longitude }}" 
+                                       target="_blank" 
+                                       class="btn btn-outline-primary btn-sm">
+                                        <i class="fas fa-map-marker-alt"></i> View on Map
+                                    </a>
+                                </div>
+
+                                <!-- View Slots Button -->
+                                <a href="{{ url_for('center_slots', owner_id=owner.id) }}" class="btn btn-primary w-100 mt-3">
+                                    View Available Slots
+                                </a>
+                            </div>
+                        </div>
+                    </div>
                 {% endfor %}
-        {% else %}
+            {% else %}
                 <div class="col-12">
-                    <div class="alert alert-info text-center">
-                        No available venues found. Try adjusting your filters.
-                </div>
-            </div>
-        {% endif %}
+                    <div class="alert alert-info">
+                        No venues found matching your criteria. Please try different filters.
+                    </div>
+                </div>
+            {% endif %}
+        </div>
     </div>
 </div>
-</section>
+
+<style>
+.venue-card {
+    background: white;
+    border-radius: 10px;
+    overflow: hidden;
+    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
+    height: 100%;
+}
+
+.venue-slideshow {
+    position: relative;
+    height: 300px;
+    overflow: hidden;
+}
+
+.slideshow-container {
+    position: relative;
+    height: 100%;
+}
+
+.slide {
+    position: absolute;
+    width: 100%;
+    height: 100%;
+    opacity: 0;
+    transition: opacity 0.5s ease-in-out;
+}
+
+.slide.active {
+    opacity: 1;
+}
+
+.venue-image {
+    width: 100%;
+    height: 100%;
+    object-fit: cover;
+}
+
+.slideshow-btn {
+    position: absolute;
+    top: 50%;
+    transform: translateY(-50%);
+    background: rgba(0,0,0,0.5);
+    color: white;
+    border: none;
+    padding: 10px 15px;
+    cursor: pointer;
+    font-size: 18px;
+    transition: background 0.3s;
+}
+
+.slideshow-btn:hover {
+    background: rgba(0,0,0,0.8);
+}
+
+.prev {
+    left: 10px;
+}
+
+.next {
+    right: 10px;
+}
+
+.slideshow-dots {
+    position: absolute;
+    bottom: 10px;
+    left: 50%;
+    transform: translateX(-50%);
+    display: flex;
+    gap: 8px;
+}
+
+.dot {
+    width: 10px;
+    height: 10px;
+    background: rgba(255,255,255,0.5);
+    border-radius: 50%;
+    cursor: pointer;
+    transition: background 0.3s;
+}
+
+.dot.active {
+    background: white;
+}
+
+.venue-details {
+    padding: 20px;
+}
+
+.console-types, .amenities {
+    margin: 15px 0;
+}
+
+.console-list, .amenities-list {
+    display: flex;
+    flex-wrap: wrap;
+    gap: 10px;
+    margin-top: 10px;
+}
+
+.console-item, .amenity-item {
+    display: flex;
+    align-items: center;
+    gap: 5px;
+    background: #f8f9fa;
+    padding: 5px 10px;
+    border-radius: 15px;
+    font-size: 0.9rem;
+}
+
+.console-item i, .amenity-item i {
+    color: #28a745;
+}
+
+.venue-contact {
+    margin-top: 15px;
+    padding-top: 15px;
+    border-top: 1px solid #dee2e6;
+}
+
+.venue-contact p {
+    margin-bottom: 10px;
+}
+
+.venue-contact i {
+    margin-right: 8px;
+    color: #007bff;
+}
+</style>
+
 <script>
-function haversine(lat1, lon1, lat2, lon2) {
-    function toRad(x) { return x * Math.PI / 180; }
-    var R = 6371; // km
-    var dLat = toRad(lat2-lat1);
-    var dLon = toRad(lon2-lon1);
-    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
-            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *
-            Math.sin(dLon/2) * Math.sin(dLon/2);
-    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
-    return R * c;
+let slideIndexes = {};
+
+function showSlide(index, venueIndex) {
+    const slideshow = document.querySelectorAll('.venue-slideshow')[venueIndex];
+    const slides = slideshow.querySelectorAll('.slide');
+    const dots = slideshow.querySelectorAll('.dot');
+    
+    // Hide all slides
+    slides.forEach(slide => slide.classList.remove('active'));
+    dots.forEach(dot => dot.classList.remove('active'));
+    
+    // Show the selected slide
+    slides[index].classList.add('active');
+    dots[index].classList.add('active');
 }
-if (navigator.geolocation) {
-    navigator.geolocation.getCurrentPosition(function(pos) {
-        const userLat = pos.coords.latitude;
-        const userLon = pos.coords.longitude;
-        document.querySelectorAll('.venue-card').forEach(function(card) {
-            const lat = parseFloat(card.dataset.lat);
-            const lon = parseFloat(card.dataset.lon);
-            if (!isNaN(lat) && !isNaN(lon)) {
-                const dist = haversine(userLat, userLon, lat, lon);
-                card.querySelector('.venue-distance').textContent = `Distance: ${dist.toFixed(2)} km`;
-            }
-        });
+
+function changeSlide(direction, venueIndex) {
+    const slideshow = document.querySelectorAll('.venue-slideshow')[venueIndex];
+    const slides = slideshow.querySelectorAll('.slide');
+    
+    if (!slideIndexes[venueIndex]) {
+        slideIndexes[venueIndex] = 0;
+    }
+    
+    slideIndexes[venueIndex] += direction;
+    
+    if (slideIndexes[venueIndex] >= slides.length) {
+        slideIndexes[venueIndex] = 0;
+    } else if (slideIndexes[venueIndex] < 0) {
+        slideIndexes[venueIndex] = slides.length - 1;
+    }
+    
+    showSlide(slideIndexes[venueIndex], venueIndex);
+}
+
+function goToSlide(index, venueIndex) {
+    slideIndexes[venueIndex] = index;
+    showSlide(index, venueIndex);
+}
+
+// Auto-advance slides
+function startSlideshow() {
+    const slideshows = document.querySelectorAll('.venue-slideshow');
+    slideshows.forEach((slideshow, index) => {
+        setInterval(() => {
+            changeSlide(1, index);
+        }, 5000); // Change slide every 5 seconds
     });
 }
+
+// Start slideshow when page loads
+document.addEventListener('DOMContentLoaded', startSlideshow);
 </script>
 {% endblock %}
 
Index: templates/booking_confirmation.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% block title %}Booking Confirmation{% endblock %}\r\n\r\n{% block content %}\r\n<div class=\"container\" style=\"max-width: 800px; margin: 2rem auto;\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\" style=\"background: var(--primary); color: white;\">\r\n            <h2 style=\"margin: 0;\">Booking Confirmation</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"booking-details\">\r\n                <h3>Booking Details</h3>\r\n                <p><strong>Date:</strong> {{ slot.start_time.strftime('%d %b %Y') }}</p>\r\n                <p><strong>Time:</strong> {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}</p>\r\n                <p><strong>Console:</strong> {{ slot.console.name }}</p>\r\n                <p><strong>Number of People:</strong> {{ slot.number_of_people }}</p>\r\n                <p><strong>Total Amount:</strong> ₹{{ slot.total_amount }}</p>\r\n                {% if slot.special_requests %}\r\n                <p><strong>Special Requests:</strong> {{ slot.special_requests }}</p>\r\n                {% endif %}\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-12\">\r\n                    <h3>Console Details</h3>\r\n                    <p><strong>Gaming Center:</strong> {{ slot.console.owner.gaming_center_name }}</p>\r\n                    <p><strong>Console Type:</strong> {{ slot.console.console_type }}</p>\r\n                    <p><strong>Location:</strong> {{ slot.console.owner.address }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-12\">\r\n                    <h3>Customer Information</h3>\r\n                    <p><strong>Name:</strong> {{ slot.customer_name }}</p>\r\n                    <p><strong>Phone:</strong> {{ slot.customer_phone }}</p>\r\n                    <p><strong>Email:</strong> {{ slot.customer_email }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt-4\">\r\n                <a href=\"{{ url_for('available_slots') }}\" class=\"btn btn-secondary\">Back to Available Slots</a>\r\n                {% if slot.payment_status == 'pending' %}\r\n                <a href=\"{{ url_for('payment', booking_id=slot.booking_id) }}\" class=\"btn btn-primary\">Complete Payment</a>\r\n                {% endif %}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/booking_confirmation.html b/templates/booking_confirmation.html
--- a/templates/booking_confirmation.html	(revision 963475e3df238db57d2495bd62f32097783c2089)
+++ b/templates/booking_confirmation.html	(date 1750086331486)
@@ -10,30 +10,41 @@
         </div>
         <div class="card-body">
             <div class="booking-details">
-                <h3>Booking Details</h3>
-                <p><strong>Date:</strong> {{ slot.start_time.strftime('%d %b %Y') }}</p>
-                <p><strong>Time:</strong> {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}</p>
-                <p><strong>Console:</strong> {{ slot.console.name }}</p>
-                <p><strong>Number of People:</strong> {{ slot.number_of_people }}</p>
-                <p><strong>Total Amount:</strong> ₹{{ slot.total_amount }}</p>
-                {% if slot.special_requests %}
-                <p><strong>Special Requests:</strong> {{ slot.special_requests }}</p>
-                {% endif %}
-            </div>
-            <div class="row mt-4">
-                <div class="col-12">
-                    <h3>Console Details</h3>
-                    <p><strong>Gaming Center:</strong> {{ slot.console.owner.gaming_center_name }}</p>
-                    <p><strong>Console Type:</strong> {{ slot.console.console_type }}</p>
-                    <p><strong>Location:</strong> {{ slot.console.owner.address }}</p>
-                </div>
-            </div>
-            <div class="row mt-4">
-                <div class="col-12">
-                    <h3>Customer Information</h3>
-                    <p><strong>Name:</strong> {{ slot.customer_name }}</p>
-                    <p><strong>Phone:</strong> {{ slot.customer_phone }}</p>
-                    <p><strong>Email:</strong> {{ slot.customer_email }}</p>
+                <div class="row">
+                        <div class="col-md-6">
+                        <h3>Booking Information</h3>
+                        <p><strong>Booking ID:</strong> {{ slot.booking_id }}</p>
+                        <p><strong>Date:</strong> {{ slot.start_time.strftime('%d %b %Y') }}</p>
+                        <p><strong>Time:</strong> {{ slot.start_time.strftime('%I:%M %p') }} - {{ slot.end_time.strftime('%I:%M %p') }}</p>
+                        <p><strong>Duration:</strong> {{ ((slot.end_time - slot.start_time).total_seconds() / 3600)|round }} hours</p>
+                        <p><strong>Number of People:</strong> {{ slot.number_of_people }}</p>
+                    </div>
+                        <div class="col-md-6">
+                        <h3>Payment Details</h3>
+                        <p><strong>Base Amount:</strong> ₹{{ slot.total_amount }}</p>
+                        <p><strong>Advance Paid:</strong> ₹{{ slot.advance_paid }}</p>
+                        <p><strong>Remaining Amount:</strong> ₹{{ slot.total_amount - slot.advance_paid }}</p>
+                        <p><strong>Payment Status:</strong> {{ slot.payment_status|title }}</p>
+                    </div>
+                </div>
+                <div class="row mt-4">
+                    <div class="col-12">
+                        <h3>Console Details</h3>
+                        <p><strong>Gaming Center:</strong> {{ slot.console.owner.gaming_center_name }}</p>
+                        <p><strong>Console Type:</strong> {{ slot.console.console_type }}</p>
+                        <p><strong>Location:</strong> {{ slot.console.owner.address }}</p>
+                    </div>
+                </div>
+                <div class="row mt-4">
+                    <div class="col-12">
+                        <h3>Customer Information</h3>
+                        <p><strong>Name:</strong> {{ slot.customer_name }}</p>
+                        <p><strong>Phone:</strong> {{ slot.customer_phone }}</p>
+                        <p><strong>Email:</strong> {{ slot.customer_email }}</p>
+                        {% if slot.special_requests %}
+                        <p><strong>Special Requests:</strong> {{ slot.special_requests }}</p>
+                        {% endif %}
+                    </div>
                 </div>
             </div>
             <div class="mt-4">
